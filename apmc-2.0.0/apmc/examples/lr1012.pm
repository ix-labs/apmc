probabilistic

const n=12;
const n_1=11;
const n_2=10;
const n_3=9;
const n_4=8;
const n_5=7;
const n_6=6;
const n_7=5;
const n_8=4;
formula can1 = !((c2=n) | (c3=n) | ((c2=n_1) & (c3=n_1)) | (c4=n) | ((c2=n_1) & (c4=n_1)) | ((c3=n_1) & (c4=n_1)) | ((c2=n_2) & (c3=n_2) & (c4=n_2)) | (c5=n) | ((c2=n_1) & (c5=n_1)) | ((c3=n_1) & (c5=n_1)) | ((c2=n_2) & (c3=n_2) & (c5=n_2)) | ((c4=n_1) & (c5=n_1)) | ((c2=n_2) & (c4=n_2) & (c5=n_2)) | ((c3=n_2) & (c4=n_2) & (c5=n_2)) | ((c2=n_3) & (c3=n_3) & (c4=n_3) & (c5=n_3)) | (c6=n) | ((c2=n_1) & (c6=n_1)) | ((c3=n_1) & (c6=n_1)) | ((c2=n_2) & (c3=n_2) & (c6=n_2)) | ((c4=n_1) & (c6=n_1)) | ((c2=n_2) & (c4=n_2) & (c6=n_2)) | ((c3=n_2) & (c4=n_2) & (c6=n_2)) | ((c2=n_3) & (c3=n_3) & (c4=n_3) & (c6=n_3)) | ((c5=n_1) & (c6=n_1)) | ((c2=n_2) & (c5=n_2) & (c6=n_2)) | ((c3=n_2) & (c5=n_2) & (c6=n_2)) | ((c2=n_3) & (c3=n_3) & (c5=n_3) & (c6=n_3)) | ((c4=n_2) & (c5=n_2) & (c6=n_2)) | ((c2=n_3) & (c4=n_3) & (c5=n_3) & (c6=n_3)) | ((c3=n_3) & (c4=n_3) & (c5=n_3) & (c6=n_3)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4)) | (c7=n) | ((c2=n_1) & (c7=n_1)) | ((c3=n_1) & (c7=n_1)) | ((c2=n_2) & (c3=n_2) & (c7=n_2)) | ((c4=n_1) & (c7=n_1)) | ((c2=n_2) & (c4=n_2) & (c7=n_2)) | ((c3=n_2) & (c4=n_2) & (c7=n_2)) | ((c2=n_3) & (c3=n_3) & (c4=n_3) & (c7=n_3)) | ((c5=n_1) & (c7=n_1)) | ((c2=n_2) & (c5=n_2) & (c7=n_2)) | ((c3=n_2) & (c5=n_2) & (c7=n_2)) | ((c2=n_3) & (c3=n_3) & (c5=n_3) & (c7=n_3)) | ((c4=n_2) & (c5=n_2) & (c7=n_2)) | ((c2=n_3) & (c4=n_3) & (c5=n_3) & (c7=n_3)) | ((c3=n_3) & (c4=n_3) & (c5=n_3) & (c7=n_3)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c5=n_4) & (c7=n_4)) | ((c6=n_1) & (c7=n_1)) | ((c2=n_2) & (c6=n_2) & (c7=n_2)) | ((c3=n_2) & (c6=n_2) & (c7=n_2)) | ((c2=n_3) & (c3=n_3) & (c6=n_3) & (c7=n_3)) | ((c4=n_2) & (c6=n_2) & (c7=n_2)) | ((c2=n_3) & (c4=n_3) & (c6=n_3) & (c7=n_3)) | ((c3=n_3) & (c4=n_3) & (c6=n_3) & (c7=n_3)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c6=n_4) & (c7=n_4)) | ((c5=n_2) & (c6=n_2) & (c7=n_2)) | ((c2=n_3) & (c5=n_3) & (c6=n_3) & (c7=n_3)) | ((c3=n_3) & (c5=n_3) & (c6=n_3) & (c7=n_3)) | ((c2=n_4) & (c3=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4)) | ((c4=n_3) & (c5=n_3) & (c6=n_3) & (c7=n_3)) | ((c2=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4)) | ((c3=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5)) | (c8=n) | ((c2=n_1) & (c8=n_1)) | ((c3=n_1) & (c8=n_1)) | ((c2=n_2) & (c3=n_2) & (c8=n_2)) | ((c4=n_1) & (c8=n_1)) | ((c2=n_2) & (c4=n_2) & (c8=n_2)) | ((c3=n_2) & (c4=n_2) & (c8=n_2)) | ((c2=n_3) & (c3=n_3) & (c4=n_3) & (c8=n_3)) | ((c5=n_1) & (c8=n_1)) | ((c2=n_2) & (c5=n_2) & (c8=n_2)) | ((c3=n_2) & (c5=n_2) & (c8=n_2)) | ((c2=n_3) & (c3=n_3) & (c5=n_3) & (c8=n_3)) | ((c4=n_2) & (c5=n_2) & (c8=n_2)) | ((c2=n_3) & (c4=n_3) & (c5=n_3) & (c8=n_3)) | ((c3=n_3) & (c4=n_3) & (c5=n_3) & (c8=n_3)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c5=n_4) & (c8=n_4)) | ((c6=n_1) & (c8=n_1)) | ((c2=n_2) & (c6=n_2) & (c8=n_2)) | ((c3=n_2) & (c6=n_2) & (c8=n_2)) | ((c2=n_3) & (c3=n_3) & (c6=n_3) & (c8=n_3)) | ((c4=n_2) & (c6=n_2) & (c8=n_2)) | ((c2=n_3) & (c4=n_3) & (c6=n_3) & (c8=n_3)) | ((c3=n_3) & (c4=n_3) & (c6=n_3) & (c8=n_3)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c6=n_4) & (c8=n_4)) | ((c5=n_2) & (c6=n_2) & (c8=n_2)) | ((c2=n_3) & (c5=n_3) & (c6=n_3) & (c8=n_3)) | ((c3=n_3) & (c5=n_3) & (c6=n_3) & (c8=n_3)) | ((c2=n_4) & (c3=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4)) | ((c4=n_3) & (c5=n_3) & (c6=n_3) & (c8=n_3)) | ((c2=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4)) | ((c3=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5)) | ((c7=n_1) & (c8=n_1)) | ((c2=n_2) & (c7=n_2) & (c8=n_2)) | ((c3=n_2) & (c7=n_2) & (c8=n_2)) | ((c2=n_3) & (c3=n_3) & (c7=n_3) & (c8=n_3)) | ((c4=n_2) & (c7=n_2) & (c8=n_2)) | ((c2=n_3) & (c4=n_3) & (c7=n_3) & (c8=n_3)) | ((c3=n_3) & (c4=n_3) & (c7=n_3) & (c8=n_3)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c7=n_4) & (c8=n_4)) | ((c5=n_2) & (c7=n_2) & (c8=n_2)) | ((c2=n_3) & (c5=n_3) & (c7=n_3) & (c8=n_3)) | ((c3=n_3) & (c5=n_3) & (c7=n_3) & (c8=n_3)) | ((c2=n_4) & (c3=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4)) | ((c4=n_3) & (c5=n_3) & (c7=n_3) & (c8=n_3)) | ((c2=n_4) & (c4=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4)) | ((c3=n_4) & (c4=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5)) | ((c6=n_2) & (c7=n_2) & (c8=n_2)) | ((c2=n_3) & (c6=n_3) & (c7=n_3) & (c8=n_3)) | ((c3=n_3) & (c6=n_3) & (c7=n_3) & (c8=n_3)) | ((c2=n_4) & (c3=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4)) | ((c4=n_3) & (c6=n_3) & (c7=n_3) & (c8=n_3)) | ((c2=n_4) & (c4=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4)) | ((c3=n_4) & (c4=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5)) | ((c5=n_3) & (c6=n_3) & (c7=n_3) & (c8=n_3)) | ((c2=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4)) | ((c3=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4)) | ((c2=n_5) & (c3=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5)) | ((c4=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4)) | ((c2=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5)) | ((c3=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5)) | ((c2=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6)) | (c9=n) | ((c2=n_1) & (c9=n_1)) | ((c3=n_1) & (c9=n_1)) | ((c2=n_2) & (c3=n_2) & (c9=n_2)) | ((c4=n_1) & (c9=n_1)) | ((c2=n_2) & (c4=n_2) & (c9=n_2)) | ((c3=n_2) & (c4=n_2) & (c9=n_2)) | ((c2=n_3) & (c3=n_3) & (c4=n_3) & (c9=n_3)) | ((c5=n_1) & (c9=n_1)) | ((c2=n_2) & (c5=n_2) & (c9=n_2)) | ((c3=n_2) & (c5=n_2) & (c9=n_2)) | ((c2=n_3) & (c3=n_3) & (c5=n_3) & (c9=n_3)) | ((c4=n_2) & (c5=n_2) & (c9=n_2)) | ((c2=n_3) & (c4=n_3) & (c5=n_3) & (c9=n_3)) | ((c3=n_3) & (c4=n_3) & (c5=n_3) & (c9=n_3)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c5=n_4) & (c9=n_4)) | ((c6=n_1) & (c9=n_1)) | ((c2=n_2) & (c6=n_2) & (c9=n_2)) | ((c3=n_2) & (c6=n_2) & (c9=n_2)) | ((c2=n_3) & (c3=n_3) & (c6=n_3) & (c9=n_3)) | ((c4=n_2) & (c6=n_2) & (c9=n_2)) | ((c2=n_3) & (c4=n_3) & (c6=n_3) & (c9=n_3)) | ((c3=n_3) & (c4=n_3) & (c6=n_3) & (c9=n_3)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c6=n_4) & (c9=n_4)) | ((c5=n_2) & (c6=n_2) & (c9=n_2)) | ((c2=n_3) & (c5=n_3) & (c6=n_3) & (c9=n_3)) | ((c3=n_3) & (c5=n_3) & (c6=n_3) & (c9=n_3)) | ((c2=n_4) & (c3=n_4) & (c5=n_4) & (c6=n_4) & (c9=n_4)) | ((c4=n_3) & (c5=n_3) & (c6=n_3) & (c9=n_3)) | ((c2=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4) & (c9=n_4)) | ((c3=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4) & (c9=n_4)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c9=n_5)) | ((c7=n_1) & (c9=n_1)) | ((c2=n_2) & (c7=n_2) & (c9=n_2)) | ((c3=n_2) & (c7=n_2) & (c9=n_2)) | ((c2=n_3) & (c3=n_3) & (c7=n_3) & (c9=n_3)) | ((c4=n_2) & (c7=n_2) & (c9=n_2)) | ((c2=n_3) & (c4=n_3) & (c7=n_3) & (c9=n_3)) | ((c3=n_3) & (c4=n_3) & (c7=n_3) & (c9=n_3)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c7=n_4) & (c9=n_4)) | ((c5=n_2) & (c7=n_2) & (c9=n_2)) | ((c2=n_3) & (c5=n_3) & (c7=n_3) & (c9=n_3)) | ((c3=n_3) & (c5=n_3) & (c7=n_3) & (c9=n_3)) | ((c2=n_4) & (c3=n_4) & (c5=n_4) & (c7=n_4) & (c9=n_4)) | ((c4=n_3) & (c5=n_3) & (c7=n_3) & (c9=n_3)) | ((c2=n_4) & (c4=n_4) & (c5=n_4) & (c7=n_4) & (c9=n_4)) | ((c3=n_4) & (c4=n_4) & (c5=n_4) & (c7=n_4) & (c9=n_4)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c9=n_5)) | ((c6=n_2) & (c7=n_2) & (c9=n_2)) | ((c2=n_3) & (c6=n_3) & (c7=n_3) & (c9=n_3)) | ((c3=n_3) & (c6=n_3) & (c7=n_3) & (c9=n_3)) | ((c2=n_4) & (c3=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4)) | ((c4=n_3) & (c6=n_3) & (c7=n_3) & (c9=n_3)) | ((c2=n_4) & (c4=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4)) | ((c3=n_4) & (c4=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5)) | ((c5=n_3) & (c6=n_3) & (c7=n_3) & (c9=n_3)) | ((c2=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4)) | ((c3=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4)) | ((c2=n_5) & (c3=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5)) | ((c4=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4)) | ((c2=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5)) | ((c3=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5)) | ((c2=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c9=n_6)) | ((c8=n_1) & (c9=n_1)) | ((c2=n_2) & (c8=n_2) & (c9=n_2)) | ((c3=n_2) & (c8=n_2) & (c9=n_2)) | ((c2=n_3) & (c3=n_3) & (c8=n_3) & (c9=n_3)) | ((c4=n_2) & (c8=n_2) & (c9=n_2)) | ((c2=n_3) & (c4=n_3) & (c8=n_3) & (c9=n_3)) | ((c3=n_3) & (c4=n_3) & (c8=n_3) & (c9=n_3)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c8=n_4) & (c9=n_4)) | ((c5=n_2) & (c8=n_2) & (c9=n_2)) | ((c2=n_3) & (c5=n_3) & (c8=n_3) & (c9=n_3)) | ((c3=n_3) & (c5=n_3) & (c8=n_3) & (c9=n_3)) | ((c2=n_4) & (c3=n_4) & (c5=n_4) & (c8=n_4) & (c9=n_4)) | ((c4=n_3) & (c5=n_3) & (c8=n_3) & (c9=n_3)) | ((c2=n_4) & (c4=n_4) & (c5=n_4) & (c8=n_4) & (c9=n_4)) | ((c3=n_4) & (c4=n_4) & (c5=n_4) & (c8=n_4) & (c9=n_4)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c8=n_5) & (c9=n_5)) | ((c6=n_2) & (c8=n_2) & (c9=n_2)) | ((c2=n_3) & (c6=n_3) & (c8=n_3) & (c9=n_3)) | ((c3=n_3) & (c6=n_3) & (c8=n_3) & (c9=n_3)) | ((c2=n_4) & (c3=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4)) | ((c4=n_3) & (c6=n_3) & (c8=n_3) & (c9=n_3)) | ((c2=n_4) & (c4=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4)) | ((c3=n_4) & (c4=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5)) | ((c5=n_3) & (c6=n_3) & (c8=n_3) & (c9=n_3)) | ((c2=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4)) | ((c3=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4)) | ((c2=n_5) & (c3=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5)) | ((c4=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4)) | ((c2=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5)) | ((c3=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5)) | ((c2=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c8=n_6) & (c9=n_6)) | ((c7=n_2) & (c8=n_2) & (c9=n_2)) | ((c2=n_3) & (c7=n_3) & (c8=n_3) & (c9=n_3)) | ((c3=n_3) & (c7=n_3) & (c8=n_3) & (c9=n_3)) | ((c2=n_4) & (c3=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c4=n_3) & (c7=n_3) & (c8=n_3) & (c9=n_3)) | ((c2=n_4) & (c4=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c3=n_4) & (c4=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c5=n_3) & (c7=n_3) & (c8=n_3) & (c9=n_3)) | ((c2=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c3=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c2=n_5) & (c3=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c4=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c2=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c3=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c2=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6)) | ((c6=n_3) & (c7=n_3) & (c8=n_3) & (c9=n_3)) | ((c2=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c3=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c2=n_5) & (c3=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c4=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c2=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c3=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c2=n_6) & (c3=n_6) & (c4=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6)) | ((c5=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c2=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c3=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c2=n_6) & (c3=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6)) | ((c4=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c2=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6)) | ((c3=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6)) | ((c2=n_7) & (c3=n_7) & (c4=n_7) & (c5=n_7) & (c6=n_7) & (c7=n_7) & (c8=n_7) & (c9=n_7)) | (c10=n) | ((c2=n_1) & (c10=n_1)) | ((c3=n_1) & (c10=n_1)) | ((c2=n_2) & (c3=n_2) & (c10=n_2)) | ((c4=n_1) & (c10=n_1)) | ((c2=n_2) & (c4=n_2) & (c10=n_2)) | ((c3=n_2) & (c4=n_2) & (c10=n_2)) | ((c2=n_3) & (c3=n_3) & (c4=n_3) & (c10=n_3)) | ((c5=n_1) & (c10=n_1)) | ((c2=n_2) & (c5=n_2) & (c10=n_2)) | ((c3=n_2) & (c5=n_2) & (c10=n_2)) | ((c2=n_3) & (c3=n_3) & (c5=n_3) & (c10=n_3)) | ((c4=n_2) & (c5=n_2) & (c10=n_2)) | ((c2=n_3) & (c4=n_3) & (c5=n_3) & (c10=n_3)) | ((c3=n_3) & (c4=n_3) & (c5=n_3) & (c10=n_3)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c5=n_4) & (c10=n_4)) | ((c6=n_1) & (c10=n_1)) | ((c2=n_2) & (c6=n_2) & (c10=n_2)) | ((c3=n_2) & (c6=n_2) & (c10=n_2)) | ((c2=n_3) & (c3=n_3) & (c6=n_3) & (c10=n_3)) | ((c4=n_2) & (c6=n_2) & (c10=n_2)) | ((c2=n_3) & (c4=n_3) & (c6=n_3) & (c10=n_3)) | ((c3=n_3) & (c4=n_3) & (c6=n_3) & (c10=n_3)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c6=n_4) & (c10=n_4)) | ((c5=n_2) & (c6=n_2) & (c10=n_2)) | ((c2=n_3) & (c5=n_3) & (c6=n_3) & (c10=n_3)) | ((c3=n_3) & (c5=n_3) & (c6=n_3) & (c10=n_3)) | ((c2=n_4) & (c3=n_4) & (c5=n_4) & (c6=n_4) & (c10=n_4)) | ((c4=n_3) & (c5=n_3) & (c6=n_3) & (c10=n_3)) | ((c2=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4) & (c10=n_4)) | ((c3=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4) & (c10=n_4)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c10=n_5)) | ((c7=n_1) & (c10=n_1)) | ((c2=n_2) & (c7=n_2) & (c10=n_2)) | ((c3=n_2) & (c7=n_2) & (c10=n_2)) | ((c2=n_3) & (c3=n_3) & (c7=n_3) & (c10=n_3)) | ((c4=n_2) & (c7=n_2) & (c10=n_2)) | ((c2=n_3) & (c4=n_3) & (c7=n_3) & (c10=n_3)) | ((c3=n_3) & (c4=n_3) & (c7=n_3) & (c10=n_3)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c7=n_4) & (c10=n_4)) | ((c5=n_2) & (c7=n_2) & (c10=n_2)) | ((c2=n_3) & (c5=n_3) & (c7=n_3) & (c10=n_3)) | ((c3=n_3) & (c5=n_3) & (c7=n_3) & (c10=n_3)) | ((c2=n_4) & (c3=n_4) & (c5=n_4) & (c7=n_4) & (c10=n_4)) | ((c4=n_3) & (c5=n_3) & (c7=n_3) & (c10=n_3)) | ((c2=n_4) & (c4=n_4) & (c5=n_4) & (c7=n_4) & (c10=n_4)) | ((c3=n_4) & (c4=n_4) & (c5=n_4) & (c7=n_4) & (c10=n_4)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c10=n_5)) | ((c6=n_2) & (c7=n_2) & (c10=n_2)) | ((c2=n_3) & (c6=n_3) & (c7=n_3) & (c10=n_3)) | ((c3=n_3) & (c6=n_3) & (c7=n_3) & (c10=n_3)) | ((c2=n_4) & (c3=n_4) & (c6=n_4) & (c7=n_4) & (c10=n_4)) | ((c4=n_3) & (c6=n_3) & (c7=n_3) & (c10=n_3)) | ((c2=n_4) & (c4=n_4) & (c6=n_4) & (c7=n_4) & (c10=n_4)) | ((c3=n_4) & (c4=n_4) & (c6=n_4) & (c7=n_4) & (c10=n_4)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c10=n_5)) | ((c5=n_3) & (c6=n_3) & (c7=n_3) & (c10=n_3)) | ((c2=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4) & (c10=n_4)) | ((c3=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4) & (c10=n_4)) | ((c2=n_5) & (c3=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c10=n_5)) | ((c4=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4) & (c10=n_4)) | ((c2=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c10=n_5)) | ((c3=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c10=n_5)) | ((c2=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c10=n_6)) | ((c8=n_1) & (c10=n_1)) | ((c2=n_2) & (c8=n_2) & (c10=n_2)) | ((c3=n_2) & (c8=n_2) & (c10=n_2)) | ((c2=n_3) & (c3=n_3) & (c8=n_3) & (c10=n_3)) | ((c4=n_2) & (c8=n_2) & (c10=n_2)) | ((c2=n_3) & (c4=n_3) & (c8=n_3) & (c10=n_3)) | ((c3=n_3) & (c4=n_3) & (c8=n_3) & (c10=n_3)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c8=n_4) & (c10=n_4)) | ((c5=n_2) & (c8=n_2) & (c10=n_2)) | ((c2=n_3) & (c5=n_3) & (c8=n_3) & (c10=n_3)) | ((c3=n_3) & (c5=n_3) & (c8=n_3) & (c10=n_3)) | ((c2=n_4) & (c3=n_4) & (c5=n_4) & (c8=n_4) & (c10=n_4)) | ((c4=n_3) & (c5=n_3) & (c8=n_3) & (c10=n_3)) | ((c2=n_4) & (c4=n_4) & (c5=n_4) & (c8=n_4) & (c10=n_4)) | ((c3=n_4) & (c4=n_4) & (c5=n_4) & (c8=n_4) & (c10=n_4)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c8=n_5) & (c10=n_5)) | ((c6=n_2) & (c8=n_2) & (c10=n_2)) | ((c2=n_3) & (c6=n_3) & (c8=n_3) & (c10=n_3)) | ((c3=n_3) & (c6=n_3) & (c8=n_3) & (c10=n_3)) | ((c2=n_4) & (c3=n_4) & (c6=n_4) & (c8=n_4) & (c10=n_4)) | ((c4=n_3) & (c6=n_3) & (c8=n_3) & (c10=n_3)) | ((c2=n_4) & (c4=n_4) & (c6=n_4) & (c8=n_4) & (c10=n_4)) | ((c3=n_4) & (c4=n_4) & (c6=n_4) & (c8=n_4) & (c10=n_4)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c6=n_5) & (c8=n_5) & (c10=n_5)) | ((c5=n_3) & (c6=n_3) & (c8=n_3) & (c10=n_3)) | ((c2=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4) & (c10=n_4)) | ((c3=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4) & (c10=n_4)) | ((c2=n_5) & (c3=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5) & (c10=n_5)) | ((c4=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4) & (c10=n_4)) | ((c2=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5) & (c10=n_5)) | ((c3=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5) & (c10=n_5)) | ((c2=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c8=n_6) & (c10=n_6)) | ((c7=n_2) & (c8=n_2) & (c10=n_2)) | ((c2=n_3) & (c7=n_3) & (c8=n_3) & (c10=n_3)) | ((c3=n_3) & (c7=n_3) & (c8=n_3) & (c10=n_3)) | ((c2=n_4) & (c3=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c4=n_3) & (c7=n_3) & (c8=n_3) & (c10=n_3)) | ((c2=n_4) & (c4=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c3=n_4) & (c4=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c5=n_3) & (c7=n_3) & (c8=n_3) & (c10=n_3)) | ((c2=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c3=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c2=n_5) & (c3=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c4=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c2=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c3=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c2=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c7=n_6) & (c8=n_6) & (c10=n_6)) | ((c6=n_3) & (c7=n_3) & (c8=n_3) & (c10=n_3)) | ((c2=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c3=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c2=n_5) & (c3=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c4=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c2=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c3=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c2=n_6) & (c3=n_6) & (c4=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c10=n_6)) | ((c5=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c2=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c3=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c2=n_6) & (c3=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c10=n_6)) | ((c4=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c2=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c10=n_6)) | ((c3=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c10=n_6)) | ((c2=n_7) & (c3=n_7) & (c4=n_7) & (c5=n_7) & (c6=n_7) & (c7=n_7) & (c8=n_7) & (c10=n_7)) | ((c9=n_1) & (c10=n_1)) | ((c2=n_2) & (c9=n_2) & (c10=n_2)) | ((c3=n_2) & (c9=n_2) & (c10=n_2)) | ((c2=n_3) & (c3=n_3) & (c9=n_3) & (c10=n_3)) | ((c4=n_2) & (c9=n_2) & (c10=n_2)) | ((c2=n_3) & (c4=n_3) & (c9=n_3) & (c10=n_3)) | ((c3=n_3) & (c4=n_3) & (c9=n_3) & (c10=n_3)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c9=n_4) & (c10=n_4)) | ((c5=n_2) & (c9=n_2) & (c10=n_2)) | ((c2=n_3) & (c5=n_3) & (c9=n_3) & (c10=n_3)) | ((c3=n_3) & (c5=n_3) & (c9=n_3) & (c10=n_3)) | ((c2=n_4) & (c3=n_4) & (c5=n_4) & (c9=n_4) & (c10=n_4)) | ((c4=n_3) & (c5=n_3) & (c9=n_3) & (c10=n_3)) | ((c2=n_4) & (c4=n_4) & (c5=n_4) & (c9=n_4) & (c10=n_4)) | ((c3=n_4) & (c4=n_4) & (c5=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c9=n_5) & (c10=n_5)) | ((c6=n_2) & (c9=n_2) & (c10=n_2)) | ((c2=n_3) & (c6=n_3) & (c9=n_3) & (c10=n_3)) | ((c3=n_3) & (c6=n_3) & (c9=n_3) & (c10=n_3)) | ((c2=n_4) & (c3=n_4) & (c6=n_4) & (c9=n_4) & (c10=n_4)) | ((c4=n_3) & (c6=n_3) & (c9=n_3) & (c10=n_3)) | ((c2=n_4) & (c4=n_4) & (c6=n_4) & (c9=n_4) & (c10=n_4)) | ((c3=n_4) & (c4=n_4) & (c6=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c6=n_5) & (c9=n_5) & (c10=n_5)) | ((c5=n_3) & (c6=n_3) & (c9=n_3) & (c10=n_3)) | ((c2=n_4) & (c5=n_4) & (c6=n_4) & (c9=n_4) & (c10=n_4)) | ((c3=n_4) & (c5=n_4) & (c6=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_5) & (c3=n_5) & (c5=n_5) & (c6=n_5) & (c9=n_5) & (c10=n_5)) | ((c4=n_4) & (c5=n_4) & (c6=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c9=n_5) & (c10=n_5)) | ((c3=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c9=n_6) & (c10=n_6)) | ((c7=n_2) & (c9=n_2) & (c10=n_2)) | ((c2=n_3) & (c7=n_3) & (c9=n_3) & (c10=n_3)) | ((c3=n_3) & (c7=n_3) & (c9=n_3) & (c10=n_3)) | ((c2=n_4) & (c3=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c4=n_3) & (c7=n_3) & (c9=n_3) & (c10=n_3)) | ((c2=n_4) & (c4=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c3=n_4) & (c4=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c5=n_3) & (c7=n_3) & (c9=n_3) & (c10=n_3)) | ((c2=n_4) & (c5=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c3=n_4) & (c5=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_5) & (c3=n_5) & (c5=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c4=n_4) & (c5=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c3=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c7=n_6) & (c9=n_6) & (c10=n_6)) | ((c6=n_3) & (c7=n_3) & (c9=n_3) & (c10=n_3)) | ((c2=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c3=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_5) & (c3=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c4=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c3=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_6) & (c3=n_6) & (c4=n_6) & (c6=n_6) & (c7=n_6) & (c9=n_6) & (c10=n_6)) | ((c5=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c3=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_6) & (c3=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c9=n_6) & (c10=n_6)) | ((c4=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c9=n_6) & (c10=n_6)) | ((c3=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c9=n_6) & (c10=n_6)) | ((c2=n_7) & (c3=n_7) & (c4=n_7) & (c5=n_7) & (c6=n_7) & (c7=n_7) & (c9=n_7) & (c10=n_7)) | ((c8=n_2) & (c9=n_2) & (c10=n_2)) | ((c2=n_3) & (c8=n_3) & (c9=n_3) & (c10=n_3)) | ((c3=n_3) & (c8=n_3) & (c9=n_3) & (c10=n_3)) | ((c2=n_4) & (c3=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c4=n_3) & (c8=n_3) & (c9=n_3) & (c10=n_3)) | ((c2=n_4) & (c4=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c3=n_4) & (c4=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c5=n_3) & (c8=n_3) & (c9=n_3) & (c10=n_3)) | ((c2=n_4) & (c5=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c3=n_4) & (c5=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_5) & (c3=n_5) & (c5=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c4=n_4) & (c5=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_5) & (c4=n_5) & (c5=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c3=n_5) & (c4=n_5) & (c5=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c6=n_3) & (c8=n_3) & (c9=n_3) & (c10=n_3)) | ((c2=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c3=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_5) & (c3=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c4=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_5) & (c4=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c3=n_5) & (c4=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_6) & (c3=n_6) & (c4=n_6) & (c6=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c5=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c3=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_6) & (c3=n_6) & (c5=n_6) & (c6=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c4=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c3=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c2=n_7) & (c3=n_7) & (c4=n_7) & (c5=n_7) & (c6=n_7) & (c8=n_7) & (c9=n_7) & (c10=n_7)) | ((c7=n_3) & (c8=n_3) & (c9=n_3) & (c10=n_3)) | ((c2=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c3=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_5) & (c3=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c4=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_5) & (c4=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c3=n_5) & (c4=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_6) & (c3=n_6) & (c4=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c5=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c3=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_6) & (c3=n_6) & (c5=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c4=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_6) & (c4=n_6) & (c5=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c3=n_6) & (c4=n_6) & (c5=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c2=n_7) & (c3=n_7) & (c4=n_7) & (c5=n_7) & (c7=n_7) & (c8=n_7) & (c9=n_7) & (c10=n_7)) | ((c6=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c3=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_6) & (c3=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c4=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_6) & (c4=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c3=n_6) & (c4=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c2=n_7) & (c3=n_7) & (c4=n_7) & (c6=n_7) & (c7=n_7) & (c8=n_7) & (c9=n_7) & (c10=n_7)) | ((c5=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c3=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c2=n_7) & (c3=n_7) & (c5=n_7) & (c6=n_7) & (c7=n_7) & (c8=n_7) & (c9=n_7) & (c10=n_7)) | ((c4=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c2=n_7) & (c4=n_7) & (c5=n_7) & (c6=n_7) & (c7=n_7) & (c8=n_7) & (c9=n_7) & (c10=n_7)) | ((c3=n_7) & (c4=n_7) & (c5=n_7) & (c6=n_7) & (c7=n_7) & (c8=n_7) & (c9=n_7) & (c10=n_7)) | ((c2=n_8) & (c3=n_8) & (c4=n_8) & (c5=n_8) & (c6=n_8) & (c7=n_8) & (c8=n_8) & (c9=n_8) & (c10=n_8)));
formula can2 = !((c1=n) | (c3=n) | ((c1=n_1) & (c3=n_1)) | (c4=n) | ((c1=n_1) & (c4=n_1)) | ((c3=n_1) & (c4=n_1)) | ((c1=n_2) & (c3=n_2) & (c4=n_2)) | (c5=n) | ((c1=n_1) & (c5=n_1)) | ((c3=n_1) & (c5=n_1)) | ((c1=n_2) & (c3=n_2) & (c5=n_2)) | ((c4=n_1) & (c5=n_1)) | ((c1=n_2) & (c4=n_2) & (c5=n_2)) | ((c3=n_2) & (c4=n_2) & (c5=n_2)) | ((c1=n_3) & (c3=n_3) & (c4=n_3) & (c5=n_3)) | (c6=n) | ((c1=n_1) & (c6=n_1)) | ((c3=n_1) & (c6=n_1)) | ((c1=n_2) & (c3=n_2) & (c6=n_2)) | ((c4=n_1) & (c6=n_1)) | ((c1=n_2) & (c4=n_2) & (c6=n_2)) | ((c3=n_2) & (c4=n_2) & (c6=n_2)) | ((c1=n_3) & (c3=n_3) & (c4=n_3) & (c6=n_3)) | ((c5=n_1) & (c6=n_1)) | ((c1=n_2) & (c5=n_2) & (c6=n_2)) | ((c3=n_2) & (c5=n_2) & (c6=n_2)) | ((c1=n_3) & (c3=n_3) & (c5=n_3) & (c6=n_3)) | ((c4=n_2) & (c5=n_2) & (c6=n_2)) | ((c1=n_3) & (c4=n_3) & (c5=n_3) & (c6=n_3)) | ((c3=n_3) & (c4=n_3) & (c5=n_3) & (c6=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4)) | (c7=n) | ((c1=n_1) & (c7=n_1)) | ((c3=n_1) & (c7=n_1)) | ((c1=n_2) & (c3=n_2) & (c7=n_2)) | ((c4=n_1) & (c7=n_1)) | ((c1=n_2) & (c4=n_2) & (c7=n_2)) | ((c3=n_2) & (c4=n_2) & (c7=n_2)) | ((c1=n_3) & (c3=n_3) & (c4=n_3) & (c7=n_3)) | ((c5=n_1) & (c7=n_1)) | ((c1=n_2) & (c5=n_2) & (c7=n_2)) | ((c3=n_2) & (c5=n_2) & (c7=n_2)) | ((c1=n_3) & (c3=n_3) & (c5=n_3) & (c7=n_3)) | ((c4=n_2) & (c5=n_2) & (c7=n_2)) | ((c1=n_3) & (c4=n_3) & (c5=n_3) & (c7=n_3)) | ((c3=n_3) & (c4=n_3) & (c5=n_3) & (c7=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c5=n_4) & (c7=n_4)) | ((c6=n_1) & (c7=n_1)) | ((c1=n_2) & (c6=n_2) & (c7=n_2)) | ((c3=n_2) & (c6=n_2) & (c7=n_2)) | ((c1=n_3) & (c3=n_3) & (c6=n_3) & (c7=n_3)) | ((c4=n_2) & (c6=n_2) & (c7=n_2)) | ((c1=n_3) & (c4=n_3) & (c6=n_3) & (c7=n_3)) | ((c3=n_3) & (c4=n_3) & (c6=n_3) & (c7=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c6=n_4) & (c7=n_4)) | ((c5=n_2) & (c6=n_2) & (c7=n_2)) | ((c1=n_3) & (c5=n_3) & (c6=n_3) & (c7=n_3)) | ((c3=n_3) & (c5=n_3) & (c6=n_3) & (c7=n_3)) | ((c1=n_4) & (c3=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4)) | ((c4=n_3) & (c5=n_3) & (c6=n_3) & (c7=n_3)) | ((c1=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4)) | ((c3=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5)) | (c8=n) | ((c1=n_1) & (c8=n_1)) | ((c3=n_1) & (c8=n_1)) | ((c1=n_2) & (c3=n_2) & (c8=n_2)) | ((c4=n_1) & (c8=n_1)) | ((c1=n_2) & (c4=n_2) & (c8=n_2)) | ((c3=n_2) & (c4=n_2) & (c8=n_2)) | ((c1=n_3) & (c3=n_3) & (c4=n_3) & (c8=n_3)) | ((c5=n_1) & (c8=n_1)) | ((c1=n_2) & (c5=n_2) & (c8=n_2)) | ((c3=n_2) & (c5=n_2) & (c8=n_2)) | ((c1=n_3) & (c3=n_3) & (c5=n_3) & (c8=n_3)) | ((c4=n_2) & (c5=n_2) & (c8=n_2)) | ((c1=n_3) & (c4=n_3) & (c5=n_3) & (c8=n_3)) | ((c3=n_3) & (c4=n_3) & (c5=n_3) & (c8=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c5=n_4) & (c8=n_4)) | ((c6=n_1) & (c8=n_1)) | ((c1=n_2) & (c6=n_2) & (c8=n_2)) | ((c3=n_2) & (c6=n_2) & (c8=n_2)) | ((c1=n_3) & (c3=n_3) & (c6=n_3) & (c8=n_3)) | ((c4=n_2) & (c6=n_2) & (c8=n_2)) | ((c1=n_3) & (c4=n_3) & (c6=n_3) & (c8=n_3)) | ((c3=n_3) & (c4=n_3) & (c6=n_3) & (c8=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c6=n_4) & (c8=n_4)) | ((c5=n_2) & (c6=n_2) & (c8=n_2)) | ((c1=n_3) & (c5=n_3) & (c6=n_3) & (c8=n_3)) | ((c3=n_3) & (c5=n_3) & (c6=n_3) & (c8=n_3)) | ((c1=n_4) & (c3=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4)) | ((c4=n_3) & (c5=n_3) & (c6=n_3) & (c8=n_3)) | ((c1=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4)) | ((c3=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5)) | ((c7=n_1) & (c8=n_1)) | ((c1=n_2) & (c7=n_2) & (c8=n_2)) | ((c3=n_2) & (c7=n_2) & (c8=n_2)) | ((c1=n_3) & (c3=n_3) & (c7=n_3) & (c8=n_3)) | ((c4=n_2) & (c7=n_2) & (c8=n_2)) | ((c1=n_3) & (c4=n_3) & (c7=n_3) & (c8=n_3)) | ((c3=n_3) & (c4=n_3) & (c7=n_3) & (c8=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c7=n_4) & (c8=n_4)) | ((c5=n_2) & (c7=n_2) & (c8=n_2)) | ((c1=n_3) & (c5=n_3) & (c7=n_3) & (c8=n_3)) | ((c3=n_3) & (c5=n_3) & (c7=n_3) & (c8=n_3)) | ((c1=n_4) & (c3=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4)) | ((c4=n_3) & (c5=n_3) & (c7=n_3) & (c8=n_3)) | ((c1=n_4) & (c4=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4)) | ((c3=n_4) & (c4=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5)) | ((c6=n_2) & (c7=n_2) & (c8=n_2)) | ((c1=n_3) & (c6=n_3) & (c7=n_3) & (c8=n_3)) | ((c3=n_3) & (c6=n_3) & (c7=n_3) & (c8=n_3)) | ((c1=n_4) & (c3=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4)) | ((c4=n_3) & (c6=n_3) & (c7=n_3) & (c8=n_3)) | ((c1=n_4) & (c4=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4)) | ((c3=n_4) & (c4=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5)) | ((c5=n_3) & (c6=n_3) & (c7=n_3) & (c8=n_3)) | ((c1=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4)) | ((c3=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4)) | ((c1=n_5) & (c3=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5)) | ((c4=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4)) | ((c1=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5)) | ((c3=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5)) | ((c1=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6)) | (c9=n) | ((c1=n_1) & (c9=n_1)) | ((c3=n_1) & (c9=n_1)) | ((c1=n_2) & (c3=n_2) & (c9=n_2)) | ((c4=n_1) & (c9=n_1)) | ((c1=n_2) & (c4=n_2) & (c9=n_2)) | ((c3=n_2) & (c4=n_2) & (c9=n_2)) | ((c1=n_3) & (c3=n_3) & (c4=n_3) & (c9=n_3)) | ((c5=n_1) & (c9=n_1)) | ((c1=n_2) & (c5=n_2) & (c9=n_2)) | ((c3=n_2) & (c5=n_2) & (c9=n_2)) | ((c1=n_3) & (c3=n_3) & (c5=n_3) & (c9=n_3)) | ((c4=n_2) & (c5=n_2) & (c9=n_2)) | ((c1=n_3) & (c4=n_3) & (c5=n_3) & (c9=n_3)) | ((c3=n_3) & (c4=n_3) & (c5=n_3) & (c9=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c5=n_4) & (c9=n_4)) | ((c6=n_1) & (c9=n_1)) | ((c1=n_2) & (c6=n_2) & (c9=n_2)) | ((c3=n_2) & (c6=n_2) & (c9=n_2)) | ((c1=n_3) & (c3=n_3) & (c6=n_3) & (c9=n_3)) | ((c4=n_2) & (c6=n_2) & (c9=n_2)) | ((c1=n_3) & (c4=n_3) & (c6=n_3) & (c9=n_3)) | ((c3=n_3) & (c4=n_3) & (c6=n_3) & (c9=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c6=n_4) & (c9=n_4)) | ((c5=n_2) & (c6=n_2) & (c9=n_2)) | ((c1=n_3) & (c5=n_3) & (c6=n_3) & (c9=n_3)) | ((c3=n_3) & (c5=n_3) & (c6=n_3) & (c9=n_3)) | ((c1=n_4) & (c3=n_4) & (c5=n_4) & (c6=n_4) & (c9=n_4)) | ((c4=n_3) & (c5=n_3) & (c6=n_3) & (c9=n_3)) | ((c1=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4) & (c9=n_4)) | ((c3=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4) & (c9=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c9=n_5)) | ((c7=n_1) & (c9=n_1)) | ((c1=n_2) & (c7=n_2) & (c9=n_2)) | ((c3=n_2) & (c7=n_2) & (c9=n_2)) | ((c1=n_3) & (c3=n_3) & (c7=n_3) & (c9=n_3)) | ((c4=n_2) & (c7=n_2) & (c9=n_2)) | ((c1=n_3) & (c4=n_3) & (c7=n_3) & (c9=n_3)) | ((c3=n_3) & (c4=n_3) & (c7=n_3) & (c9=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c7=n_4) & (c9=n_4)) | ((c5=n_2) & (c7=n_2) & (c9=n_2)) | ((c1=n_3) & (c5=n_3) & (c7=n_3) & (c9=n_3)) | ((c3=n_3) & (c5=n_3) & (c7=n_3) & (c9=n_3)) | ((c1=n_4) & (c3=n_4) & (c5=n_4) & (c7=n_4) & (c9=n_4)) | ((c4=n_3) & (c5=n_3) & (c7=n_3) & (c9=n_3)) | ((c1=n_4) & (c4=n_4) & (c5=n_4) & (c7=n_4) & (c9=n_4)) | ((c3=n_4) & (c4=n_4) & (c5=n_4) & (c7=n_4) & (c9=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c9=n_5)) | ((c6=n_2) & (c7=n_2) & (c9=n_2)) | ((c1=n_3) & (c6=n_3) & (c7=n_3) & (c9=n_3)) | ((c3=n_3) & (c6=n_3) & (c7=n_3) & (c9=n_3)) | ((c1=n_4) & (c3=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4)) | ((c4=n_3) & (c6=n_3) & (c7=n_3) & (c9=n_3)) | ((c1=n_4) & (c4=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4)) | ((c3=n_4) & (c4=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5)) | ((c5=n_3) & (c6=n_3) & (c7=n_3) & (c9=n_3)) | ((c1=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4)) | ((c3=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4)) | ((c1=n_5) & (c3=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5)) | ((c4=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4)) | ((c1=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5)) | ((c3=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5)) | ((c1=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c9=n_6)) | ((c8=n_1) & (c9=n_1)) | ((c1=n_2) & (c8=n_2) & (c9=n_2)) | ((c3=n_2) & (c8=n_2) & (c9=n_2)) | ((c1=n_3) & (c3=n_3) & (c8=n_3) & (c9=n_3)) | ((c4=n_2) & (c8=n_2) & (c9=n_2)) | ((c1=n_3) & (c4=n_3) & (c8=n_3) & (c9=n_3)) | ((c3=n_3) & (c4=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c8=n_4) & (c9=n_4)) | ((c5=n_2) & (c8=n_2) & (c9=n_2)) | ((c1=n_3) & (c5=n_3) & (c8=n_3) & (c9=n_3)) | ((c3=n_3) & (c5=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c3=n_4) & (c5=n_4) & (c8=n_4) & (c9=n_4)) | ((c4=n_3) & (c5=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c4=n_4) & (c5=n_4) & (c8=n_4) & (c9=n_4)) | ((c3=n_4) & (c4=n_4) & (c5=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c8=n_5) & (c9=n_5)) | ((c6=n_2) & (c8=n_2) & (c9=n_2)) | ((c1=n_3) & (c6=n_3) & (c8=n_3) & (c9=n_3)) | ((c3=n_3) & (c6=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c3=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4)) | ((c4=n_3) & (c6=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c4=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4)) | ((c3=n_4) & (c4=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5)) | ((c5=n_3) & (c6=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4)) | ((c3=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c3=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5)) | ((c4=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5)) | ((c3=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5)) | ((c1=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c8=n_6) & (c9=n_6)) | ((c7=n_2) & (c8=n_2) & (c9=n_2)) | ((c1=n_3) & (c7=n_3) & (c8=n_3) & (c9=n_3)) | ((c3=n_3) & (c7=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c3=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c4=n_3) & (c7=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c4=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c3=n_4) & (c4=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c5=n_3) & (c7=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c3=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c3=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c4=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c3=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c1=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6)) | ((c6=n_3) & (c7=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c3=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c3=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c4=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c3=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c1=n_6) & (c3=n_6) & (c4=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6)) | ((c5=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c3=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c1=n_6) & (c3=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6)) | ((c4=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c1=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6)) | ((c3=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6)) | ((c1=n_7) & (c3=n_7) & (c4=n_7) & (c5=n_7) & (c6=n_7) & (c7=n_7) & (c8=n_7) & (c9=n_7)) | (c10=n) | ((c1=n_1) & (c10=n_1)) | ((c3=n_1) & (c10=n_1)) | ((c1=n_2) & (c3=n_2) & (c10=n_2)) | ((c4=n_1) & (c10=n_1)) | ((c1=n_2) & (c4=n_2) & (c10=n_2)) | ((c3=n_2) & (c4=n_2) & (c10=n_2)) | ((c1=n_3) & (c3=n_3) & (c4=n_3) & (c10=n_3)) | ((c5=n_1) & (c10=n_1)) | ((c1=n_2) & (c5=n_2) & (c10=n_2)) | ((c3=n_2) & (c5=n_2) & (c10=n_2)) | ((c1=n_3) & (c3=n_3) & (c5=n_3) & (c10=n_3)) | ((c4=n_2) & (c5=n_2) & (c10=n_2)) | ((c1=n_3) & (c4=n_3) & (c5=n_3) & (c10=n_3)) | ((c3=n_3) & (c4=n_3) & (c5=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c5=n_4) & (c10=n_4)) | ((c6=n_1) & (c10=n_1)) | ((c1=n_2) & (c6=n_2) & (c10=n_2)) | ((c3=n_2) & (c6=n_2) & (c10=n_2)) | ((c1=n_3) & (c3=n_3) & (c6=n_3) & (c10=n_3)) | ((c4=n_2) & (c6=n_2) & (c10=n_2)) | ((c1=n_3) & (c4=n_3) & (c6=n_3) & (c10=n_3)) | ((c3=n_3) & (c4=n_3) & (c6=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c6=n_4) & (c10=n_4)) | ((c5=n_2) & (c6=n_2) & (c10=n_2)) | ((c1=n_3) & (c5=n_3) & (c6=n_3) & (c10=n_3)) | ((c3=n_3) & (c5=n_3) & (c6=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c5=n_4) & (c6=n_4) & (c10=n_4)) | ((c4=n_3) & (c5=n_3) & (c6=n_3) & (c10=n_3)) | ((c1=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4) & (c10=n_4)) | ((c3=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c10=n_5)) | ((c7=n_1) & (c10=n_1)) | ((c1=n_2) & (c7=n_2) & (c10=n_2)) | ((c3=n_2) & (c7=n_2) & (c10=n_2)) | ((c1=n_3) & (c3=n_3) & (c7=n_3) & (c10=n_3)) | ((c4=n_2) & (c7=n_2) & (c10=n_2)) | ((c1=n_3) & (c4=n_3) & (c7=n_3) & (c10=n_3)) | ((c3=n_3) & (c4=n_3) & (c7=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c7=n_4) & (c10=n_4)) | ((c5=n_2) & (c7=n_2) & (c10=n_2)) | ((c1=n_3) & (c5=n_3) & (c7=n_3) & (c10=n_3)) | ((c3=n_3) & (c5=n_3) & (c7=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c5=n_4) & (c7=n_4) & (c10=n_4)) | ((c4=n_3) & (c5=n_3) & (c7=n_3) & (c10=n_3)) | ((c1=n_4) & (c4=n_4) & (c5=n_4) & (c7=n_4) & (c10=n_4)) | ((c3=n_4) & (c4=n_4) & (c5=n_4) & (c7=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c10=n_5)) | ((c6=n_2) & (c7=n_2) & (c10=n_2)) | ((c1=n_3) & (c6=n_3) & (c7=n_3) & (c10=n_3)) | ((c3=n_3) & (c6=n_3) & (c7=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c6=n_4) & (c7=n_4) & (c10=n_4)) | ((c4=n_3) & (c6=n_3) & (c7=n_3) & (c10=n_3)) | ((c1=n_4) & (c4=n_4) & (c6=n_4) & (c7=n_4) & (c10=n_4)) | ((c3=n_4) & (c4=n_4) & (c6=n_4) & (c7=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c10=n_5)) | ((c5=n_3) & (c6=n_3) & (c7=n_3) & (c10=n_3)) | ((c1=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4) & (c10=n_4)) | ((c3=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c10=n_5)) | ((c4=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4) & (c10=n_4)) | ((c1=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c10=n_5)) | ((c3=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c10=n_5)) | ((c1=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c10=n_6)) | ((c8=n_1) & (c10=n_1)) | ((c1=n_2) & (c8=n_2) & (c10=n_2)) | ((c3=n_2) & (c8=n_2) & (c10=n_2)) | ((c1=n_3) & (c3=n_3) & (c8=n_3) & (c10=n_3)) | ((c4=n_2) & (c8=n_2) & (c10=n_2)) | ((c1=n_3) & (c4=n_3) & (c8=n_3) & (c10=n_3)) | ((c3=n_3) & (c4=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c8=n_4) & (c10=n_4)) | ((c5=n_2) & (c8=n_2) & (c10=n_2)) | ((c1=n_3) & (c5=n_3) & (c8=n_3) & (c10=n_3)) | ((c3=n_3) & (c5=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c5=n_4) & (c8=n_4) & (c10=n_4)) | ((c4=n_3) & (c5=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c4=n_4) & (c5=n_4) & (c8=n_4) & (c10=n_4)) | ((c3=n_4) & (c4=n_4) & (c5=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c8=n_5) & (c10=n_5)) | ((c6=n_2) & (c8=n_2) & (c10=n_2)) | ((c1=n_3) & (c6=n_3) & (c8=n_3) & (c10=n_3)) | ((c3=n_3) & (c6=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c6=n_4) & (c8=n_4) & (c10=n_4)) | ((c4=n_3) & (c6=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c4=n_4) & (c6=n_4) & (c8=n_4) & (c10=n_4)) | ((c3=n_4) & (c4=n_4) & (c6=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c6=n_5) & (c8=n_5) & (c10=n_5)) | ((c5=n_3) & (c6=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4) & (c10=n_4)) | ((c3=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5) & (c10=n_5)) | ((c4=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5) & (c10=n_5)) | ((c3=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5) & (c10=n_5)) | ((c1=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c8=n_6) & (c10=n_6)) | ((c7=n_2) & (c8=n_2) & (c10=n_2)) | ((c1=n_3) & (c7=n_3) & (c8=n_3) & (c10=n_3)) | ((c3=n_3) & (c7=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c4=n_3) & (c7=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c4=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c3=n_4) & (c4=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c5=n_3) & (c7=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c3=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c4=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c3=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c1=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c7=n_6) & (c8=n_6) & (c10=n_6)) | ((c6=n_3) & (c7=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c3=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c4=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c3=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c1=n_6) & (c3=n_6) & (c4=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c10=n_6)) | ((c5=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c3=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c1=n_6) & (c3=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c10=n_6)) | ((c4=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c1=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c10=n_6)) | ((c3=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c10=n_6)) | ((c1=n_7) & (c3=n_7) & (c4=n_7) & (c5=n_7) & (c6=n_7) & (c7=n_7) & (c8=n_7) & (c10=n_7)) | ((c9=n_1) & (c10=n_1)) | ((c1=n_2) & (c9=n_2) & (c10=n_2)) | ((c3=n_2) & (c9=n_2) & (c10=n_2)) | ((c1=n_3) & (c3=n_3) & (c9=n_3) & (c10=n_3)) | ((c4=n_2) & (c9=n_2) & (c10=n_2)) | ((c1=n_3) & (c4=n_3) & (c9=n_3) & (c10=n_3)) | ((c3=n_3) & (c4=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c9=n_4) & (c10=n_4)) | ((c5=n_2) & (c9=n_2) & (c10=n_2)) | ((c1=n_3) & (c5=n_3) & (c9=n_3) & (c10=n_3)) | ((c3=n_3) & (c5=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c5=n_4) & (c9=n_4) & (c10=n_4)) | ((c4=n_3) & (c5=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c4=n_4) & (c5=n_4) & (c9=n_4) & (c10=n_4)) | ((c3=n_4) & (c4=n_4) & (c5=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c9=n_5) & (c10=n_5)) | ((c6=n_2) & (c9=n_2) & (c10=n_2)) | ((c1=n_3) & (c6=n_3) & (c9=n_3) & (c10=n_3)) | ((c3=n_3) & (c6=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c6=n_4) & (c9=n_4) & (c10=n_4)) | ((c4=n_3) & (c6=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c4=n_4) & (c6=n_4) & (c9=n_4) & (c10=n_4)) | ((c3=n_4) & (c4=n_4) & (c6=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c6=n_5) & (c9=n_5) & (c10=n_5)) | ((c5=n_3) & (c6=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c5=n_4) & (c6=n_4) & (c9=n_4) & (c10=n_4)) | ((c3=n_4) & (c5=n_4) & (c6=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c5=n_5) & (c6=n_5) & (c9=n_5) & (c10=n_5)) | ((c4=n_4) & (c5=n_4) & (c6=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c9=n_5) & (c10=n_5)) | ((c3=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c9=n_6) & (c10=n_6)) | ((c7=n_2) & (c9=n_2) & (c10=n_2)) | ((c1=n_3) & (c7=n_3) & (c9=n_3) & (c10=n_3)) | ((c3=n_3) & (c7=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c4=n_3) & (c7=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c4=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c3=n_4) & (c4=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c5=n_3) & (c7=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c5=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c3=n_4) & (c5=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c5=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c4=n_4) & (c5=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c3=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c7=n_6) & (c9=n_6) & (c10=n_6)) | ((c6=n_3) & (c7=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c3=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c4=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c3=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c3=n_6) & (c4=n_6) & (c6=n_6) & (c7=n_6) & (c9=n_6) & (c10=n_6)) | ((c5=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c3=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c3=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c9=n_6) & (c10=n_6)) | ((c4=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c9=n_6) & (c10=n_6)) | ((c3=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c9=n_6) & (c10=n_6)) | ((c1=n_7) & (c3=n_7) & (c4=n_7) & (c5=n_7) & (c6=n_7) & (c7=n_7) & (c9=n_7) & (c10=n_7)) | ((c8=n_2) & (c9=n_2) & (c10=n_2)) | ((c1=n_3) & (c8=n_3) & (c9=n_3) & (c10=n_3)) | ((c3=n_3) & (c8=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c4=n_3) & (c8=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c4=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c3=n_4) & (c4=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c5=n_3) & (c8=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c5=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c3=n_4) & (c5=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c5=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c4=n_4) & (c5=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c4=n_5) & (c5=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c3=n_5) & (c4=n_5) & (c5=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c6=n_3) & (c8=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c3=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c4=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c4=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c3=n_5) & (c4=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c3=n_6) & (c4=n_6) & (c6=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c5=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c3=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c3=n_6) & (c5=n_6) & (c6=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c4=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c3=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c1=n_7) & (c3=n_7) & (c4=n_7) & (c5=n_7) & (c6=n_7) & (c8=n_7) & (c9=n_7) & (c10=n_7)) | ((c7=n_3) & (c8=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c3=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c4=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c4=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c3=n_5) & (c4=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c3=n_6) & (c4=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c5=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c3=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c3=n_6) & (c5=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c4=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c4=n_6) & (c5=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c3=n_6) & (c4=n_6) & (c5=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c1=n_7) & (c3=n_7) & (c4=n_7) & (c5=n_7) & (c7=n_7) & (c8=n_7) & (c9=n_7) & (c10=n_7)) | ((c6=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c3=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c3=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c4=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c4=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c3=n_6) & (c4=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c1=n_7) & (c3=n_7) & (c4=n_7) & (c6=n_7) & (c7=n_7) & (c8=n_7) & (c9=n_7) & (c10=n_7)) | ((c5=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c3=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c1=n_7) & (c3=n_7) & (c5=n_7) & (c6=n_7) & (c7=n_7) & (c8=n_7) & (c9=n_7) & (c10=n_7)) | ((c4=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c1=n_7) & (c4=n_7) & (c5=n_7) & (c6=n_7) & (c7=n_7) & (c8=n_7) & (c9=n_7) & (c10=n_7)) | ((c3=n_7) & (c4=n_7) & (c5=n_7) & (c6=n_7) & (c7=n_7) & (c8=n_7) & (c9=n_7) & (c10=n_7)) | ((c1=n_8) & (c3=n_8) & (c4=n_8) & (c5=n_8) & (c6=n_8) & (c7=n_8) & (c8=n_8) & (c9=n_8) & (c10=n_8)));
formula can3 = !((c1=n) | (c2=n) | ((c1=n_1) & (c2=n_1)) | (c4=n) | ((c1=n_1) & (c4=n_1)) | ((c2=n_1) & (c4=n_1)) | ((c1=n_2) & (c2=n_2) & (c4=n_2)) | (c5=n) | ((c1=n_1) & (c5=n_1)) | ((c2=n_1) & (c5=n_1)) | ((c1=n_2) & (c2=n_2) & (c5=n_2)) | ((c4=n_1) & (c5=n_1)) | ((c1=n_2) & (c4=n_2) & (c5=n_2)) | ((c2=n_2) & (c4=n_2) & (c5=n_2)) | ((c1=n_3) & (c2=n_3) & (c4=n_3) & (c5=n_3)) | (c6=n) | ((c1=n_1) & (c6=n_1)) | ((c2=n_1) & (c6=n_1)) | ((c1=n_2) & (c2=n_2) & (c6=n_2)) | ((c4=n_1) & (c6=n_1)) | ((c1=n_2) & (c4=n_2) & (c6=n_2)) | ((c2=n_2) & (c4=n_2) & (c6=n_2)) | ((c1=n_3) & (c2=n_3) & (c4=n_3) & (c6=n_3)) | ((c5=n_1) & (c6=n_1)) | ((c1=n_2) & (c5=n_2) & (c6=n_2)) | ((c2=n_2) & (c5=n_2) & (c6=n_2)) | ((c1=n_3) & (c2=n_3) & (c5=n_3) & (c6=n_3)) | ((c4=n_2) & (c5=n_2) & (c6=n_2)) | ((c1=n_3) & (c4=n_3) & (c5=n_3) & (c6=n_3)) | ((c2=n_3) & (c4=n_3) & (c5=n_3) & (c6=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4)) | (c7=n) | ((c1=n_1) & (c7=n_1)) | ((c2=n_1) & (c7=n_1)) | ((c1=n_2) & (c2=n_2) & (c7=n_2)) | ((c4=n_1) & (c7=n_1)) | ((c1=n_2) & (c4=n_2) & (c7=n_2)) | ((c2=n_2) & (c4=n_2) & (c7=n_2)) | ((c1=n_3) & (c2=n_3) & (c4=n_3) & (c7=n_3)) | ((c5=n_1) & (c7=n_1)) | ((c1=n_2) & (c5=n_2) & (c7=n_2)) | ((c2=n_2) & (c5=n_2) & (c7=n_2)) | ((c1=n_3) & (c2=n_3) & (c5=n_3) & (c7=n_3)) | ((c4=n_2) & (c5=n_2) & (c7=n_2)) | ((c1=n_3) & (c4=n_3) & (c5=n_3) & (c7=n_3)) | ((c2=n_3) & (c4=n_3) & (c5=n_3) & (c7=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c5=n_4) & (c7=n_4)) | ((c6=n_1) & (c7=n_1)) | ((c1=n_2) & (c6=n_2) & (c7=n_2)) | ((c2=n_2) & (c6=n_2) & (c7=n_2)) | ((c1=n_3) & (c2=n_3) & (c6=n_3) & (c7=n_3)) | ((c4=n_2) & (c6=n_2) & (c7=n_2)) | ((c1=n_3) & (c4=n_3) & (c6=n_3) & (c7=n_3)) | ((c2=n_3) & (c4=n_3) & (c6=n_3) & (c7=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c6=n_4) & (c7=n_4)) | ((c5=n_2) & (c6=n_2) & (c7=n_2)) | ((c1=n_3) & (c5=n_3) & (c6=n_3) & (c7=n_3)) | ((c2=n_3) & (c5=n_3) & (c6=n_3) & (c7=n_3)) | ((c1=n_4) & (c2=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4)) | ((c4=n_3) & (c5=n_3) & (c6=n_3) & (c7=n_3)) | ((c1=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4)) | ((c2=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5)) | (c8=n) | ((c1=n_1) & (c8=n_1)) | ((c2=n_1) & (c8=n_1)) | ((c1=n_2) & (c2=n_2) & (c8=n_2)) | ((c4=n_1) & (c8=n_1)) | ((c1=n_2) & (c4=n_2) & (c8=n_2)) | ((c2=n_2) & (c4=n_2) & (c8=n_2)) | ((c1=n_3) & (c2=n_3) & (c4=n_3) & (c8=n_3)) | ((c5=n_1) & (c8=n_1)) | ((c1=n_2) & (c5=n_2) & (c8=n_2)) | ((c2=n_2) & (c5=n_2) & (c8=n_2)) | ((c1=n_3) & (c2=n_3) & (c5=n_3) & (c8=n_3)) | ((c4=n_2) & (c5=n_2) & (c8=n_2)) | ((c1=n_3) & (c4=n_3) & (c5=n_3) & (c8=n_3)) | ((c2=n_3) & (c4=n_3) & (c5=n_3) & (c8=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c5=n_4) & (c8=n_4)) | ((c6=n_1) & (c8=n_1)) | ((c1=n_2) & (c6=n_2) & (c8=n_2)) | ((c2=n_2) & (c6=n_2) & (c8=n_2)) | ((c1=n_3) & (c2=n_3) & (c6=n_3) & (c8=n_3)) | ((c4=n_2) & (c6=n_2) & (c8=n_2)) | ((c1=n_3) & (c4=n_3) & (c6=n_3) & (c8=n_3)) | ((c2=n_3) & (c4=n_3) & (c6=n_3) & (c8=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c6=n_4) & (c8=n_4)) | ((c5=n_2) & (c6=n_2) & (c8=n_2)) | ((c1=n_3) & (c5=n_3) & (c6=n_3) & (c8=n_3)) | ((c2=n_3) & (c5=n_3) & (c6=n_3) & (c8=n_3)) | ((c1=n_4) & (c2=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4)) | ((c4=n_3) & (c5=n_3) & (c6=n_3) & (c8=n_3)) | ((c1=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4)) | ((c2=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5)) | ((c7=n_1) & (c8=n_1)) | ((c1=n_2) & (c7=n_2) & (c8=n_2)) | ((c2=n_2) & (c7=n_2) & (c8=n_2)) | ((c1=n_3) & (c2=n_3) & (c7=n_3) & (c8=n_3)) | ((c4=n_2) & (c7=n_2) & (c8=n_2)) | ((c1=n_3) & (c4=n_3) & (c7=n_3) & (c8=n_3)) | ((c2=n_3) & (c4=n_3) & (c7=n_3) & (c8=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c7=n_4) & (c8=n_4)) | ((c5=n_2) & (c7=n_2) & (c8=n_2)) | ((c1=n_3) & (c5=n_3) & (c7=n_3) & (c8=n_3)) | ((c2=n_3) & (c5=n_3) & (c7=n_3) & (c8=n_3)) | ((c1=n_4) & (c2=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4)) | ((c4=n_3) & (c5=n_3) & (c7=n_3) & (c8=n_3)) | ((c1=n_4) & (c4=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4)) | ((c2=n_4) & (c4=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5)) | ((c6=n_2) & (c7=n_2) & (c8=n_2)) | ((c1=n_3) & (c6=n_3) & (c7=n_3) & (c8=n_3)) | ((c2=n_3) & (c6=n_3) & (c7=n_3) & (c8=n_3)) | ((c1=n_4) & (c2=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4)) | ((c4=n_3) & (c6=n_3) & (c7=n_3) & (c8=n_3)) | ((c1=n_4) & (c4=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4)) | ((c2=n_4) & (c4=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5)) | ((c5=n_3) & (c6=n_3) & (c7=n_3) & (c8=n_3)) | ((c1=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4)) | ((c2=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4)) | ((c1=n_5) & (c2=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5)) | ((c4=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4)) | ((c1=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5)) | ((c2=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5)) | ((c1=n_6) & (c2=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6)) | (c9=n) | ((c1=n_1) & (c9=n_1)) | ((c2=n_1) & (c9=n_1)) | ((c1=n_2) & (c2=n_2) & (c9=n_2)) | ((c4=n_1) & (c9=n_1)) | ((c1=n_2) & (c4=n_2) & (c9=n_2)) | ((c2=n_2) & (c4=n_2) & (c9=n_2)) | ((c1=n_3) & (c2=n_3) & (c4=n_3) & (c9=n_3)) | ((c5=n_1) & (c9=n_1)) | ((c1=n_2) & (c5=n_2) & (c9=n_2)) | ((c2=n_2) & (c5=n_2) & (c9=n_2)) | ((c1=n_3) & (c2=n_3) & (c5=n_3) & (c9=n_3)) | ((c4=n_2) & (c5=n_2) & (c9=n_2)) | ((c1=n_3) & (c4=n_3) & (c5=n_3) & (c9=n_3)) | ((c2=n_3) & (c4=n_3) & (c5=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c5=n_4) & (c9=n_4)) | ((c6=n_1) & (c9=n_1)) | ((c1=n_2) & (c6=n_2) & (c9=n_2)) | ((c2=n_2) & (c6=n_2) & (c9=n_2)) | ((c1=n_3) & (c2=n_3) & (c6=n_3) & (c9=n_3)) | ((c4=n_2) & (c6=n_2) & (c9=n_2)) | ((c1=n_3) & (c4=n_3) & (c6=n_3) & (c9=n_3)) | ((c2=n_3) & (c4=n_3) & (c6=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c6=n_4) & (c9=n_4)) | ((c5=n_2) & (c6=n_2) & (c9=n_2)) | ((c1=n_3) & (c5=n_3) & (c6=n_3) & (c9=n_3)) | ((c2=n_3) & (c5=n_3) & (c6=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c5=n_4) & (c6=n_4) & (c9=n_4)) | ((c4=n_3) & (c5=n_3) & (c6=n_3) & (c9=n_3)) | ((c1=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4) & (c9=n_4)) | ((c2=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c9=n_5)) | ((c7=n_1) & (c9=n_1)) | ((c1=n_2) & (c7=n_2) & (c9=n_2)) | ((c2=n_2) & (c7=n_2) & (c9=n_2)) | ((c1=n_3) & (c2=n_3) & (c7=n_3) & (c9=n_3)) | ((c4=n_2) & (c7=n_2) & (c9=n_2)) | ((c1=n_3) & (c4=n_3) & (c7=n_3) & (c9=n_3)) | ((c2=n_3) & (c4=n_3) & (c7=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c7=n_4) & (c9=n_4)) | ((c5=n_2) & (c7=n_2) & (c9=n_2)) | ((c1=n_3) & (c5=n_3) & (c7=n_3) & (c9=n_3)) | ((c2=n_3) & (c5=n_3) & (c7=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c5=n_4) & (c7=n_4) & (c9=n_4)) | ((c4=n_3) & (c5=n_3) & (c7=n_3) & (c9=n_3)) | ((c1=n_4) & (c4=n_4) & (c5=n_4) & (c7=n_4) & (c9=n_4)) | ((c2=n_4) & (c4=n_4) & (c5=n_4) & (c7=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c9=n_5)) | ((c6=n_2) & (c7=n_2) & (c9=n_2)) | ((c1=n_3) & (c6=n_3) & (c7=n_3) & (c9=n_3)) | ((c2=n_3) & (c6=n_3) & (c7=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4)) | ((c4=n_3) & (c6=n_3) & (c7=n_3) & (c9=n_3)) | ((c1=n_4) & (c4=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4)) | ((c2=n_4) & (c4=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5)) | ((c5=n_3) & (c6=n_3) & (c7=n_3) & (c9=n_3)) | ((c1=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4)) | ((c2=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5)) | ((c4=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4)) | ((c1=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5)) | ((c2=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5)) | ((c1=n_6) & (c2=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c9=n_6)) | ((c8=n_1) & (c9=n_1)) | ((c1=n_2) & (c8=n_2) & (c9=n_2)) | ((c2=n_2) & (c8=n_2) & (c9=n_2)) | ((c1=n_3) & (c2=n_3) & (c8=n_3) & (c9=n_3)) | ((c4=n_2) & (c8=n_2) & (c9=n_2)) | ((c1=n_3) & (c4=n_3) & (c8=n_3) & (c9=n_3)) | ((c2=n_3) & (c4=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c8=n_4) & (c9=n_4)) | ((c5=n_2) & (c8=n_2) & (c9=n_2)) | ((c1=n_3) & (c5=n_3) & (c8=n_3) & (c9=n_3)) | ((c2=n_3) & (c5=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c5=n_4) & (c8=n_4) & (c9=n_4)) | ((c4=n_3) & (c5=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c4=n_4) & (c5=n_4) & (c8=n_4) & (c9=n_4)) | ((c2=n_4) & (c4=n_4) & (c5=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c5=n_5) & (c8=n_5) & (c9=n_5)) | ((c6=n_2) & (c8=n_2) & (c9=n_2)) | ((c1=n_3) & (c6=n_3) & (c8=n_3) & (c9=n_3)) | ((c2=n_3) & (c6=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4)) | ((c4=n_3) & (c6=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c4=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4)) | ((c2=n_4) & (c4=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5)) | ((c5=n_3) & (c6=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4)) | ((c2=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5)) | ((c4=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5)) | ((c2=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5)) | ((c1=n_6) & (c2=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c8=n_6) & (c9=n_6)) | ((c7=n_2) & (c8=n_2) & (c9=n_2)) | ((c1=n_3) & (c7=n_3) & (c8=n_3) & (c9=n_3)) | ((c2=n_3) & (c7=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c4=n_3) & (c7=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c4=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c2=n_4) & (c4=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c5=n_3) & (c7=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c2=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c4=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c2=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c1=n_6) & (c2=n_6) & (c4=n_6) & (c5=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6)) | ((c6=n_3) & (c7=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c2=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c4=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c2=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c1=n_6) & (c2=n_6) & (c4=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6)) | ((c5=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c2=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c1=n_6) & (c2=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6)) | ((c4=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c1=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6)) | ((c2=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6)) | ((c1=n_7) & (c2=n_7) & (c4=n_7) & (c5=n_7) & (c6=n_7) & (c7=n_7) & (c8=n_7) & (c9=n_7)) | (c10=n) | ((c1=n_1) & (c10=n_1)) | ((c2=n_1) & (c10=n_1)) | ((c1=n_2) & (c2=n_2) & (c10=n_2)) | ((c4=n_1) & (c10=n_1)) | ((c1=n_2) & (c4=n_2) & (c10=n_2)) | ((c2=n_2) & (c4=n_2) & (c10=n_2)) | ((c1=n_3) & (c2=n_3) & (c4=n_3) & (c10=n_3)) | ((c5=n_1) & (c10=n_1)) | ((c1=n_2) & (c5=n_2) & (c10=n_2)) | ((c2=n_2) & (c5=n_2) & (c10=n_2)) | ((c1=n_3) & (c2=n_3) & (c5=n_3) & (c10=n_3)) | ((c4=n_2) & (c5=n_2) & (c10=n_2)) | ((c1=n_3) & (c4=n_3) & (c5=n_3) & (c10=n_3)) | ((c2=n_3) & (c4=n_3) & (c5=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c5=n_4) & (c10=n_4)) | ((c6=n_1) & (c10=n_1)) | ((c1=n_2) & (c6=n_2) & (c10=n_2)) | ((c2=n_2) & (c6=n_2) & (c10=n_2)) | ((c1=n_3) & (c2=n_3) & (c6=n_3) & (c10=n_3)) | ((c4=n_2) & (c6=n_2) & (c10=n_2)) | ((c1=n_3) & (c4=n_3) & (c6=n_3) & (c10=n_3)) | ((c2=n_3) & (c4=n_3) & (c6=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c6=n_4) & (c10=n_4)) | ((c5=n_2) & (c6=n_2) & (c10=n_2)) | ((c1=n_3) & (c5=n_3) & (c6=n_3) & (c10=n_3)) | ((c2=n_3) & (c5=n_3) & (c6=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c5=n_4) & (c6=n_4) & (c10=n_4)) | ((c4=n_3) & (c5=n_3) & (c6=n_3) & (c10=n_3)) | ((c1=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4) & (c10=n_4)) | ((c2=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c10=n_5)) | ((c7=n_1) & (c10=n_1)) | ((c1=n_2) & (c7=n_2) & (c10=n_2)) | ((c2=n_2) & (c7=n_2) & (c10=n_2)) | ((c1=n_3) & (c2=n_3) & (c7=n_3) & (c10=n_3)) | ((c4=n_2) & (c7=n_2) & (c10=n_2)) | ((c1=n_3) & (c4=n_3) & (c7=n_3) & (c10=n_3)) | ((c2=n_3) & (c4=n_3) & (c7=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c7=n_4) & (c10=n_4)) | ((c5=n_2) & (c7=n_2) & (c10=n_2)) | ((c1=n_3) & (c5=n_3) & (c7=n_3) & (c10=n_3)) | ((c2=n_3) & (c5=n_3) & (c7=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c5=n_4) & (c7=n_4) & (c10=n_4)) | ((c4=n_3) & (c5=n_3) & (c7=n_3) & (c10=n_3)) | ((c1=n_4) & (c4=n_4) & (c5=n_4) & (c7=n_4) & (c10=n_4)) | ((c2=n_4) & (c4=n_4) & (c5=n_4) & (c7=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c10=n_5)) | ((c6=n_2) & (c7=n_2) & (c10=n_2)) | ((c1=n_3) & (c6=n_3) & (c7=n_3) & (c10=n_3)) | ((c2=n_3) & (c6=n_3) & (c7=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c6=n_4) & (c7=n_4) & (c10=n_4)) | ((c4=n_3) & (c6=n_3) & (c7=n_3) & (c10=n_3)) | ((c1=n_4) & (c4=n_4) & (c6=n_4) & (c7=n_4) & (c10=n_4)) | ((c2=n_4) & (c4=n_4) & (c6=n_4) & (c7=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c10=n_5)) | ((c5=n_3) & (c6=n_3) & (c7=n_3) & (c10=n_3)) | ((c1=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4) & (c10=n_4)) | ((c2=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c10=n_5)) | ((c4=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4) & (c10=n_4)) | ((c1=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c10=n_5)) | ((c2=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c10=n_6)) | ((c8=n_1) & (c10=n_1)) | ((c1=n_2) & (c8=n_2) & (c10=n_2)) | ((c2=n_2) & (c8=n_2) & (c10=n_2)) | ((c1=n_3) & (c2=n_3) & (c8=n_3) & (c10=n_3)) | ((c4=n_2) & (c8=n_2) & (c10=n_2)) | ((c1=n_3) & (c4=n_3) & (c8=n_3) & (c10=n_3)) | ((c2=n_3) & (c4=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c8=n_4) & (c10=n_4)) | ((c5=n_2) & (c8=n_2) & (c10=n_2)) | ((c1=n_3) & (c5=n_3) & (c8=n_3) & (c10=n_3)) | ((c2=n_3) & (c5=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c5=n_4) & (c8=n_4) & (c10=n_4)) | ((c4=n_3) & (c5=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c4=n_4) & (c5=n_4) & (c8=n_4) & (c10=n_4)) | ((c2=n_4) & (c4=n_4) & (c5=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c5=n_5) & (c8=n_5) & (c10=n_5)) | ((c6=n_2) & (c8=n_2) & (c10=n_2)) | ((c1=n_3) & (c6=n_3) & (c8=n_3) & (c10=n_3)) | ((c2=n_3) & (c6=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c6=n_4) & (c8=n_4) & (c10=n_4)) | ((c4=n_3) & (c6=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c4=n_4) & (c6=n_4) & (c8=n_4) & (c10=n_4)) | ((c2=n_4) & (c4=n_4) & (c6=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c6=n_5) & (c8=n_5) & (c10=n_5)) | ((c5=n_3) & (c6=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4) & (c10=n_4)) | ((c2=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5) & (c10=n_5)) | ((c4=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5) & (c10=n_5)) | ((c2=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c8=n_6) & (c10=n_6)) | ((c7=n_2) & (c8=n_2) & (c10=n_2)) | ((c1=n_3) & (c7=n_3) & (c8=n_3) & (c10=n_3)) | ((c2=n_3) & (c7=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c4=n_3) & (c7=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c4=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c2=n_4) & (c4=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c5=n_3) & (c7=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c2=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c4=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c2=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c4=n_6) & (c5=n_6) & (c7=n_6) & (c8=n_6) & (c10=n_6)) | ((c6=n_3) & (c7=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c2=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c4=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c2=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c4=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c10=n_6)) | ((c5=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c2=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c10=n_6)) | ((c4=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c1=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c10=n_6)) | ((c2=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c10=n_6)) | ((c1=n_7) & (c2=n_7) & (c4=n_7) & (c5=n_7) & (c6=n_7) & (c7=n_7) & (c8=n_7) & (c10=n_7)) | ((c9=n_1) & (c10=n_1)) | ((c1=n_2) & (c9=n_2) & (c10=n_2)) | ((c2=n_2) & (c9=n_2) & (c10=n_2)) | ((c1=n_3) & (c2=n_3) & (c9=n_3) & (c10=n_3)) | ((c4=n_2) & (c9=n_2) & (c10=n_2)) | ((c1=n_3) & (c4=n_3) & (c9=n_3) & (c10=n_3)) | ((c2=n_3) & (c4=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c9=n_4) & (c10=n_4)) | ((c5=n_2) & (c9=n_2) & (c10=n_2)) | ((c1=n_3) & (c5=n_3) & (c9=n_3) & (c10=n_3)) | ((c2=n_3) & (c5=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c5=n_4) & (c9=n_4) & (c10=n_4)) | ((c4=n_3) & (c5=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c4=n_4) & (c5=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_4) & (c4=n_4) & (c5=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c5=n_5) & (c9=n_5) & (c10=n_5)) | ((c6=n_2) & (c9=n_2) & (c10=n_2)) | ((c1=n_3) & (c6=n_3) & (c9=n_3) & (c10=n_3)) | ((c2=n_3) & (c6=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c6=n_4) & (c9=n_4) & (c10=n_4)) | ((c4=n_3) & (c6=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c4=n_4) & (c6=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_4) & (c4=n_4) & (c6=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c6=n_5) & (c9=n_5) & (c10=n_5)) | ((c5=n_3) & (c6=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c5=n_4) & (c6=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_4) & (c5=n_4) & (c6=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c5=n_5) & (c6=n_5) & (c9=n_5) & (c10=n_5)) | ((c4=n_4) & (c5=n_4) & (c6=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c9=n_6) & (c10=n_6)) | ((c7=n_2) & (c9=n_2) & (c10=n_2)) | ((c1=n_3) & (c7=n_3) & (c9=n_3) & (c10=n_3)) | ((c2=n_3) & (c7=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c4=n_3) & (c7=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c4=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_4) & (c4=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c5=n_3) & (c7=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c5=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_4) & (c5=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c5=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c4=n_4) & (c5=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c4=n_6) & (c5=n_6) & (c7=n_6) & (c9=n_6) & (c10=n_6)) | ((c6=n_3) & (c7=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c4=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c4=n_6) & (c6=n_6) & (c7=n_6) & (c9=n_6) & (c10=n_6)) | ((c5=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c9=n_6) & (c10=n_6)) | ((c4=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c9=n_6) & (c10=n_6)) | ((c2=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c9=n_6) & (c10=n_6)) | ((c1=n_7) & (c2=n_7) & (c4=n_7) & (c5=n_7) & (c6=n_7) & (c7=n_7) & (c9=n_7) & (c10=n_7)) | ((c8=n_2) & (c9=n_2) & (c10=n_2)) | ((c1=n_3) & (c8=n_3) & (c9=n_3) & (c10=n_3)) | ((c2=n_3) & (c8=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c4=n_3) & (c8=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c4=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_4) & (c4=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c5=n_3) & (c8=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c5=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_4) & (c5=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c5=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c4=n_4) & (c5=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c4=n_5) & (c5=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_5) & (c4=n_5) & (c5=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c4=n_6) & (c5=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c6=n_3) & (c8=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c4=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c4=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_5) & (c4=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c4=n_6) & (c6=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c5=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c5=n_6) & (c6=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c4=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c2=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c1=n_7) & (c2=n_7) & (c4=n_7) & (c5=n_7) & (c6=n_7) & (c8=n_7) & (c9=n_7) & (c10=n_7)) | ((c7=n_3) & (c8=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c4=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c4=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_5) & (c4=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c4=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c5=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c5=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c4=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c4=n_6) & (c5=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c2=n_6) & (c4=n_6) & (c5=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c1=n_7) & (c2=n_7) & (c4=n_7) & (c5=n_7) & (c7=n_7) & (c8=n_7) & (c9=n_7) & (c10=n_7)) | ((c6=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c4=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c4=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c2=n_6) & (c4=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c1=n_7) & (c2=n_7) & (c4=n_7) & (c6=n_7) & (c7=n_7) & (c8=n_7) & (c9=n_7) & (c10=n_7)) | ((c5=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c2=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c1=n_7) & (c2=n_7) & (c5=n_7) & (c6=n_7) & (c7=n_7) & (c8=n_7) & (c9=n_7) & (c10=n_7)) | ((c4=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c1=n_7) & (c4=n_7) & (c5=n_7) & (c6=n_7) & (c7=n_7) & (c8=n_7) & (c9=n_7) & (c10=n_7)) | ((c2=n_7) & (c4=n_7) & (c5=n_7) & (c6=n_7) & (c7=n_7) & (c8=n_7) & (c9=n_7) & (c10=n_7)) | ((c1=n_8) & (c2=n_8) & (c4=n_8) & (c5=n_8) & (c6=n_8) & (c7=n_8) & (c8=n_8) & (c9=n_8) & (c10=n_8)));
formula can4 = !((c1=n) | (c2=n) | ((c1=n_1) & (c2=n_1)) | (c3=n) | ((c1=n_1) & (c3=n_1)) | ((c2=n_1) & (c3=n_1)) | ((c1=n_2) & (c2=n_2) & (c3=n_2)) | (c5=n) | ((c1=n_1) & (c5=n_1)) | ((c2=n_1) & (c5=n_1)) | ((c1=n_2) & (c2=n_2) & (c5=n_2)) | ((c3=n_1) & (c5=n_1)) | ((c1=n_2) & (c3=n_2) & (c5=n_2)) | ((c2=n_2) & (c3=n_2) & (c5=n_2)) | ((c1=n_3) & (c2=n_3) & (c3=n_3) & (c5=n_3)) | (c6=n) | ((c1=n_1) & (c6=n_1)) | ((c2=n_1) & (c6=n_1)) | ((c1=n_2) & (c2=n_2) & (c6=n_2)) | ((c3=n_1) & (c6=n_1)) | ((c1=n_2) & (c3=n_2) & (c6=n_2)) | ((c2=n_2) & (c3=n_2) & (c6=n_2)) | ((c1=n_3) & (c2=n_3) & (c3=n_3) & (c6=n_3)) | ((c5=n_1) & (c6=n_1)) | ((c1=n_2) & (c5=n_2) & (c6=n_2)) | ((c2=n_2) & (c5=n_2) & (c6=n_2)) | ((c1=n_3) & (c2=n_3) & (c5=n_3) & (c6=n_3)) | ((c3=n_2) & (c5=n_2) & (c6=n_2)) | ((c1=n_3) & (c3=n_3) & (c5=n_3) & (c6=n_3)) | ((c2=n_3) & (c3=n_3) & (c5=n_3) & (c6=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c5=n_4) & (c6=n_4)) | (c7=n) | ((c1=n_1) & (c7=n_1)) | ((c2=n_1) & (c7=n_1)) | ((c1=n_2) & (c2=n_2) & (c7=n_2)) | ((c3=n_1) & (c7=n_1)) | ((c1=n_2) & (c3=n_2) & (c7=n_2)) | ((c2=n_2) & (c3=n_2) & (c7=n_2)) | ((c1=n_3) & (c2=n_3) & (c3=n_3) & (c7=n_3)) | ((c5=n_1) & (c7=n_1)) | ((c1=n_2) & (c5=n_2) & (c7=n_2)) | ((c2=n_2) & (c5=n_2) & (c7=n_2)) | ((c1=n_3) & (c2=n_3) & (c5=n_3) & (c7=n_3)) | ((c3=n_2) & (c5=n_2) & (c7=n_2)) | ((c1=n_3) & (c3=n_3) & (c5=n_3) & (c7=n_3)) | ((c2=n_3) & (c3=n_3) & (c5=n_3) & (c7=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c5=n_4) & (c7=n_4)) | ((c6=n_1) & (c7=n_1)) | ((c1=n_2) & (c6=n_2) & (c7=n_2)) | ((c2=n_2) & (c6=n_2) & (c7=n_2)) | ((c1=n_3) & (c2=n_3) & (c6=n_3) & (c7=n_3)) | ((c3=n_2) & (c6=n_2) & (c7=n_2)) | ((c1=n_3) & (c3=n_3) & (c6=n_3) & (c7=n_3)) | ((c2=n_3) & (c3=n_3) & (c6=n_3) & (c7=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c6=n_4) & (c7=n_4)) | ((c5=n_2) & (c6=n_2) & (c7=n_2)) | ((c1=n_3) & (c5=n_3) & (c6=n_3) & (c7=n_3)) | ((c2=n_3) & (c5=n_3) & (c6=n_3) & (c7=n_3)) | ((c1=n_4) & (c2=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4)) | ((c3=n_3) & (c5=n_3) & (c6=n_3) & (c7=n_3)) | ((c1=n_4) & (c3=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4)) | ((c2=n_4) & (c3=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5)) | (c8=n) | ((c1=n_1) & (c8=n_1)) | ((c2=n_1) & (c8=n_1)) | ((c1=n_2) & (c2=n_2) & (c8=n_2)) | ((c3=n_1) & (c8=n_1)) | ((c1=n_2) & (c3=n_2) & (c8=n_2)) | ((c2=n_2) & (c3=n_2) & (c8=n_2)) | ((c1=n_3) & (c2=n_3) & (c3=n_3) & (c8=n_3)) | ((c5=n_1) & (c8=n_1)) | ((c1=n_2) & (c5=n_2) & (c8=n_2)) | ((c2=n_2) & (c5=n_2) & (c8=n_2)) | ((c1=n_3) & (c2=n_3) & (c5=n_3) & (c8=n_3)) | ((c3=n_2) & (c5=n_2) & (c8=n_2)) | ((c1=n_3) & (c3=n_3) & (c5=n_3) & (c8=n_3)) | ((c2=n_3) & (c3=n_3) & (c5=n_3) & (c8=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c5=n_4) & (c8=n_4)) | ((c6=n_1) & (c8=n_1)) | ((c1=n_2) & (c6=n_2) & (c8=n_2)) | ((c2=n_2) & (c6=n_2) & (c8=n_2)) | ((c1=n_3) & (c2=n_3) & (c6=n_3) & (c8=n_3)) | ((c3=n_2) & (c6=n_2) & (c8=n_2)) | ((c1=n_3) & (c3=n_3) & (c6=n_3) & (c8=n_3)) | ((c2=n_3) & (c3=n_3) & (c6=n_3) & (c8=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c6=n_4) & (c8=n_4)) | ((c5=n_2) & (c6=n_2) & (c8=n_2)) | ((c1=n_3) & (c5=n_3) & (c6=n_3) & (c8=n_3)) | ((c2=n_3) & (c5=n_3) & (c6=n_3) & (c8=n_3)) | ((c1=n_4) & (c2=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4)) | ((c3=n_3) & (c5=n_3) & (c6=n_3) & (c8=n_3)) | ((c1=n_4) & (c3=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4)) | ((c2=n_4) & (c3=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5)) | ((c7=n_1) & (c8=n_1)) | ((c1=n_2) & (c7=n_2) & (c8=n_2)) | ((c2=n_2) & (c7=n_2) & (c8=n_2)) | ((c1=n_3) & (c2=n_3) & (c7=n_3) & (c8=n_3)) | ((c3=n_2) & (c7=n_2) & (c8=n_2)) | ((c1=n_3) & (c3=n_3) & (c7=n_3) & (c8=n_3)) | ((c2=n_3) & (c3=n_3) & (c7=n_3) & (c8=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c7=n_4) & (c8=n_4)) | ((c5=n_2) & (c7=n_2) & (c8=n_2)) | ((c1=n_3) & (c5=n_3) & (c7=n_3) & (c8=n_3)) | ((c2=n_3) & (c5=n_3) & (c7=n_3) & (c8=n_3)) | ((c1=n_4) & (c2=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4)) | ((c3=n_3) & (c5=n_3) & (c7=n_3) & (c8=n_3)) | ((c1=n_4) & (c3=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4)) | ((c2=n_4) & (c3=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5)) | ((c6=n_2) & (c7=n_2) & (c8=n_2)) | ((c1=n_3) & (c6=n_3) & (c7=n_3) & (c8=n_3)) | ((c2=n_3) & (c6=n_3) & (c7=n_3) & (c8=n_3)) | ((c1=n_4) & (c2=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4)) | ((c3=n_3) & (c6=n_3) & (c7=n_3) & (c8=n_3)) | ((c1=n_4) & (c3=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4)) | ((c2=n_4) & (c3=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5)) | ((c5=n_3) & (c6=n_3) & (c7=n_3) & (c8=n_3)) | ((c1=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4)) | ((c2=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4)) | ((c1=n_5) & (c2=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5)) | ((c3=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4)) | ((c1=n_5) & (c3=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5)) | ((c2=n_5) & (c3=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6)) | (c9=n) | ((c1=n_1) & (c9=n_1)) | ((c2=n_1) & (c9=n_1)) | ((c1=n_2) & (c2=n_2) & (c9=n_2)) | ((c3=n_1) & (c9=n_1)) | ((c1=n_2) & (c3=n_2) & (c9=n_2)) | ((c2=n_2) & (c3=n_2) & (c9=n_2)) | ((c1=n_3) & (c2=n_3) & (c3=n_3) & (c9=n_3)) | ((c5=n_1) & (c9=n_1)) | ((c1=n_2) & (c5=n_2) & (c9=n_2)) | ((c2=n_2) & (c5=n_2) & (c9=n_2)) | ((c1=n_3) & (c2=n_3) & (c5=n_3) & (c9=n_3)) | ((c3=n_2) & (c5=n_2) & (c9=n_2)) | ((c1=n_3) & (c3=n_3) & (c5=n_3) & (c9=n_3)) | ((c2=n_3) & (c3=n_3) & (c5=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c5=n_4) & (c9=n_4)) | ((c6=n_1) & (c9=n_1)) | ((c1=n_2) & (c6=n_2) & (c9=n_2)) | ((c2=n_2) & (c6=n_2) & (c9=n_2)) | ((c1=n_3) & (c2=n_3) & (c6=n_3) & (c9=n_3)) | ((c3=n_2) & (c6=n_2) & (c9=n_2)) | ((c1=n_3) & (c3=n_3) & (c6=n_3) & (c9=n_3)) | ((c2=n_3) & (c3=n_3) & (c6=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c6=n_4) & (c9=n_4)) | ((c5=n_2) & (c6=n_2) & (c9=n_2)) | ((c1=n_3) & (c5=n_3) & (c6=n_3) & (c9=n_3)) | ((c2=n_3) & (c5=n_3) & (c6=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c5=n_4) & (c6=n_4) & (c9=n_4)) | ((c3=n_3) & (c5=n_3) & (c6=n_3) & (c9=n_3)) | ((c1=n_4) & (c3=n_4) & (c5=n_4) & (c6=n_4) & (c9=n_4)) | ((c2=n_4) & (c3=n_4) & (c5=n_4) & (c6=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c5=n_5) & (c6=n_5) & (c9=n_5)) | ((c7=n_1) & (c9=n_1)) | ((c1=n_2) & (c7=n_2) & (c9=n_2)) | ((c2=n_2) & (c7=n_2) & (c9=n_2)) | ((c1=n_3) & (c2=n_3) & (c7=n_3) & (c9=n_3)) | ((c3=n_2) & (c7=n_2) & (c9=n_2)) | ((c1=n_3) & (c3=n_3) & (c7=n_3) & (c9=n_3)) | ((c2=n_3) & (c3=n_3) & (c7=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c7=n_4) & (c9=n_4)) | ((c5=n_2) & (c7=n_2) & (c9=n_2)) | ((c1=n_3) & (c5=n_3) & (c7=n_3) & (c9=n_3)) | ((c2=n_3) & (c5=n_3) & (c7=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c5=n_4) & (c7=n_4) & (c9=n_4)) | ((c3=n_3) & (c5=n_3) & (c7=n_3) & (c9=n_3)) | ((c1=n_4) & (c3=n_4) & (c5=n_4) & (c7=n_4) & (c9=n_4)) | ((c2=n_4) & (c3=n_4) & (c5=n_4) & (c7=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c5=n_5) & (c7=n_5) & (c9=n_5)) | ((c6=n_2) & (c7=n_2) & (c9=n_2)) | ((c1=n_3) & (c6=n_3) & (c7=n_3) & (c9=n_3)) | ((c2=n_3) & (c6=n_3) & (c7=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4)) | ((c3=n_3) & (c6=n_3) & (c7=n_3) & (c9=n_3)) | ((c1=n_4) & (c3=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4)) | ((c2=n_4) & (c3=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5)) | ((c5=n_3) & (c6=n_3) & (c7=n_3) & (c9=n_3)) | ((c1=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4)) | ((c2=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5)) | ((c3=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4)) | ((c1=n_5) & (c3=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5)) | ((c2=n_5) & (c3=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c9=n_6)) | ((c8=n_1) & (c9=n_1)) | ((c1=n_2) & (c8=n_2) & (c9=n_2)) | ((c2=n_2) & (c8=n_2) & (c9=n_2)) | ((c1=n_3) & (c2=n_3) & (c8=n_3) & (c9=n_3)) | ((c3=n_2) & (c8=n_2) & (c9=n_2)) | ((c1=n_3) & (c3=n_3) & (c8=n_3) & (c9=n_3)) | ((c2=n_3) & (c3=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c8=n_4) & (c9=n_4)) | ((c5=n_2) & (c8=n_2) & (c9=n_2)) | ((c1=n_3) & (c5=n_3) & (c8=n_3) & (c9=n_3)) | ((c2=n_3) & (c5=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c5=n_4) & (c8=n_4) & (c9=n_4)) | ((c3=n_3) & (c5=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c3=n_4) & (c5=n_4) & (c8=n_4) & (c9=n_4)) | ((c2=n_4) & (c3=n_4) & (c5=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c5=n_5) & (c8=n_5) & (c9=n_5)) | ((c6=n_2) & (c8=n_2) & (c9=n_2)) | ((c1=n_3) & (c6=n_3) & (c8=n_3) & (c9=n_3)) | ((c2=n_3) & (c6=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4)) | ((c3=n_3) & (c6=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c3=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4)) | ((c2=n_4) & (c3=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5)) | ((c5=n_3) & (c6=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4)) | ((c2=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5)) | ((c3=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c3=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5)) | ((c2=n_5) & (c3=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c5=n_6) & (c6=n_6) & (c8=n_6) & (c9=n_6)) | ((c7=n_2) & (c8=n_2) & (c9=n_2)) | ((c1=n_3) & (c7=n_3) & (c8=n_3) & (c9=n_3)) | ((c2=n_3) & (c7=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c3=n_3) & (c7=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c3=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c2=n_4) & (c3=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c5=n_3) & (c7=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c2=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c3=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c3=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c2=n_5) & (c3=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c5=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6)) | ((c6=n_3) & (c7=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c2=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c3=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c3=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c2=n_5) & (c3=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6)) | ((c5=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c2=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c1=n_6) & (c2=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6)) | ((c3=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c1=n_6) & (c3=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6)) | ((c2=n_6) & (c3=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6)) | ((c1=n_7) & (c2=n_7) & (c3=n_7) & (c5=n_7) & (c6=n_7) & (c7=n_7) & (c8=n_7) & (c9=n_7)) | (c10=n) | ((c1=n_1) & (c10=n_1)) | ((c2=n_1) & (c10=n_1)) | ((c1=n_2) & (c2=n_2) & (c10=n_2)) | ((c3=n_1) & (c10=n_1)) | ((c1=n_2) & (c3=n_2) & (c10=n_2)) | ((c2=n_2) & (c3=n_2) & (c10=n_2)) | ((c1=n_3) & (c2=n_3) & (c3=n_3) & (c10=n_3)) | ((c5=n_1) & (c10=n_1)) | ((c1=n_2) & (c5=n_2) & (c10=n_2)) | ((c2=n_2) & (c5=n_2) & (c10=n_2)) | ((c1=n_3) & (c2=n_3) & (c5=n_3) & (c10=n_3)) | ((c3=n_2) & (c5=n_2) & (c10=n_2)) | ((c1=n_3) & (c3=n_3) & (c5=n_3) & (c10=n_3)) | ((c2=n_3) & (c3=n_3) & (c5=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c5=n_4) & (c10=n_4)) | ((c6=n_1) & (c10=n_1)) | ((c1=n_2) & (c6=n_2) & (c10=n_2)) | ((c2=n_2) & (c6=n_2) & (c10=n_2)) | ((c1=n_3) & (c2=n_3) & (c6=n_3) & (c10=n_3)) | ((c3=n_2) & (c6=n_2) & (c10=n_2)) | ((c1=n_3) & (c3=n_3) & (c6=n_3) & (c10=n_3)) | ((c2=n_3) & (c3=n_3) & (c6=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c6=n_4) & (c10=n_4)) | ((c5=n_2) & (c6=n_2) & (c10=n_2)) | ((c1=n_3) & (c5=n_3) & (c6=n_3) & (c10=n_3)) | ((c2=n_3) & (c5=n_3) & (c6=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c5=n_4) & (c6=n_4) & (c10=n_4)) | ((c3=n_3) & (c5=n_3) & (c6=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c5=n_4) & (c6=n_4) & (c10=n_4)) | ((c2=n_4) & (c3=n_4) & (c5=n_4) & (c6=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c5=n_5) & (c6=n_5) & (c10=n_5)) | ((c7=n_1) & (c10=n_1)) | ((c1=n_2) & (c7=n_2) & (c10=n_2)) | ((c2=n_2) & (c7=n_2) & (c10=n_2)) | ((c1=n_3) & (c2=n_3) & (c7=n_3) & (c10=n_3)) | ((c3=n_2) & (c7=n_2) & (c10=n_2)) | ((c1=n_3) & (c3=n_3) & (c7=n_3) & (c10=n_3)) | ((c2=n_3) & (c3=n_3) & (c7=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c7=n_4) & (c10=n_4)) | ((c5=n_2) & (c7=n_2) & (c10=n_2)) | ((c1=n_3) & (c5=n_3) & (c7=n_3) & (c10=n_3)) | ((c2=n_3) & (c5=n_3) & (c7=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c5=n_4) & (c7=n_4) & (c10=n_4)) | ((c3=n_3) & (c5=n_3) & (c7=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c5=n_4) & (c7=n_4) & (c10=n_4)) | ((c2=n_4) & (c3=n_4) & (c5=n_4) & (c7=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c5=n_5) & (c7=n_5) & (c10=n_5)) | ((c6=n_2) & (c7=n_2) & (c10=n_2)) | ((c1=n_3) & (c6=n_3) & (c7=n_3) & (c10=n_3)) | ((c2=n_3) & (c6=n_3) & (c7=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c6=n_4) & (c7=n_4) & (c10=n_4)) | ((c3=n_3) & (c6=n_3) & (c7=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c6=n_4) & (c7=n_4) & (c10=n_4)) | ((c2=n_4) & (c3=n_4) & (c6=n_4) & (c7=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c6=n_5) & (c7=n_5) & (c10=n_5)) | ((c5=n_3) & (c6=n_3) & (c7=n_3) & (c10=n_3)) | ((c1=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4) & (c10=n_4)) | ((c2=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c10=n_5)) | ((c3=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c10=n_5)) | ((c2=n_5) & (c3=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c10=n_6)) | ((c8=n_1) & (c10=n_1)) | ((c1=n_2) & (c8=n_2) & (c10=n_2)) | ((c2=n_2) & (c8=n_2) & (c10=n_2)) | ((c1=n_3) & (c2=n_3) & (c8=n_3) & (c10=n_3)) | ((c3=n_2) & (c8=n_2) & (c10=n_2)) | ((c1=n_3) & (c3=n_3) & (c8=n_3) & (c10=n_3)) | ((c2=n_3) & (c3=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c8=n_4) & (c10=n_4)) | ((c5=n_2) & (c8=n_2) & (c10=n_2)) | ((c1=n_3) & (c5=n_3) & (c8=n_3) & (c10=n_3)) | ((c2=n_3) & (c5=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c5=n_4) & (c8=n_4) & (c10=n_4)) | ((c3=n_3) & (c5=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c5=n_4) & (c8=n_4) & (c10=n_4)) | ((c2=n_4) & (c3=n_4) & (c5=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c5=n_5) & (c8=n_5) & (c10=n_5)) | ((c6=n_2) & (c8=n_2) & (c10=n_2)) | ((c1=n_3) & (c6=n_3) & (c8=n_3) & (c10=n_3)) | ((c2=n_3) & (c6=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c6=n_4) & (c8=n_4) & (c10=n_4)) | ((c3=n_3) & (c6=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c6=n_4) & (c8=n_4) & (c10=n_4)) | ((c2=n_4) & (c3=n_4) & (c6=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c6=n_5) & (c8=n_5) & (c10=n_5)) | ((c5=n_3) & (c6=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4) & (c10=n_4)) | ((c2=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5) & (c10=n_5)) | ((c3=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5) & (c10=n_5)) | ((c2=n_5) & (c3=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c5=n_6) & (c6=n_6) & (c8=n_6) & (c10=n_6)) | ((c7=n_2) & (c8=n_2) & (c10=n_2)) | ((c1=n_3) & (c7=n_3) & (c8=n_3) & (c10=n_3)) | ((c2=n_3) & (c7=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c3=n_3) & (c7=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c2=n_4) & (c3=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c5=n_3) & (c7=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c2=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c3=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c2=n_5) & (c3=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c5=n_6) & (c7=n_6) & (c8=n_6) & (c10=n_6)) | ((c6=n_3) & (c7=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c2=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c3=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c2=n_5) & (c3=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c10=n_6)) | ((c5=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c2=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c10=n_6)) | ((c3=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c1=n_6) & (c3=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c10=n_6)) | ((c2=n_6) & (c3=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c10=n_6)) | ((c1=n_7) & (c2=n_7) & (c3=n_7) & (c5=n_7) & (c6=n_7) & (c7=n_7) & (c8=n_7) & (c10=n_7)) | ((c9=n_1) & (c10=n_1)) | ((c1=n_2) & (c9=n_2) & (c10=n_2)) | ((c2=n_2) & (c9=n_2) & (c10=n_2)) | ((c1=n_3) & (c2=n_3) & (c9=n_3) & (c10=n_3)) | ((c3=n_2) & (c9=n_2) & (c10=n_2)) | ((c1=n_3) & (c3=n_3) & (c9=n_3) & (c10=n_3)) | ((c2=n_3) & (c3=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c9=n_4) & (c10=n_4)) | ((c5=n_2) & (c9=n_2) & (c10=n_2)) | ((c1=n_3) & (c5=n_3) & (c9=n_3) & (c10=n_3)) | ((c2=n_3) & (c5=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c5=n_4) & (c9=n_4) & (c10=n_4)) | ((c3=n_3) & (c5=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c5=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_4) & (c3=n_4) & (c5=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c5=n_5) & (c9=n_5) & (c10=n_5)) | ((c6=n_2) & (c9=n_2) & (c10=n_2)) | ((c1=n_3) & (c6=n_3) & (c9=n_3) & (c10=n_3)) | ((c2=n_3) & (c6=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c6=n_4) & (c9=n_4) & (c10=n_4)) | ((c3=n_3) & (c6=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c6=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_4) & (c3=n_4) & (c6=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c6=n_5) & (c9=n_5) & (c10=n_5)) | ((c5=n_3) & (c6=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c5=n_4) & (c6=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_4) & (c5=n_4) & (c6=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c5=n_5) & (c6=n_5) & (c9=n_5) & (c10=n_5)) | ((c3=n_4) & (c5=n_4) & (c6=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c5=n_5) & (c6=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_5) & (c3=n_5) & (c5=n_5) & (c6=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c5=n_6) & (c6=n_6) & (c9=n_6) & (c10=n_6)) | ((c7=n_2) & (c9=n_2) & (c10=n_2)) | ((c1=n_3) & (c7=n_3) & (c9=n_3) & (c10=n_3)) | ((c2=n_3) & (c7=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c3=n_3) & (c7=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_4) & (c3=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c5=n_3) & (c7=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c5=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_4) & (c5=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c5=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c3=n_4) & (c5=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c5=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_5) & (c3=n_5) & (c5=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c5=n_6) & (c7=n_6) & (c9=n_6) & (c10=n_6)) | ((c6=n_3) & (c7=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c3=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_5) & (c3=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c6=n_6) & (c7=n_6) & (c9=n_6) & (c10=n_6)) | ((c5=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c9=n_6) & (c10=n_6)) | ((c3=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c3=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c9=n_6) & (c10=n_6)) | ((c2=n_6) & (c3=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c9=n_6) & (c10=n_6)) | ((c1=n_7) & (c2=n_7) & (c3=n_7) & (c5=n_7) & (c6=n_7) & (c7=n_7) & (c9=n_7) & (c10=n_7)) | ((c8=n_2) & (c9=n_2) & (c10=n_2)) | ((c1=n_3) & (c8=n_3) & (c9=n_3) & (c10=n_3)) | ((c2=n_3) & (c8=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c3=n_3) & (c8=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_4) & (c3=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c5=n_3) & (c8=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c5=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_4) & (c5=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c5=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c3=n_4) & (c5=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c5=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_5) & (c3=n_5) & (c5=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c5=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c6=n_3) & (c8=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c3=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_5) & (c3=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c6=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c5=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c5=n_6) & (c6=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c3=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c3=n_6) & (c5=n_6) & (c6=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c2=n_6) & (c3=n_6) & (c5=n_6) & (c6=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c1=n_7) & (c2=n_7) & (c3=n_7) & (c5=n_7) & (c6=n_7) & (c8=n_7) & (c9=n_7) & (c10=n_7)) | ((c7=n_3) & (c8=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c3=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_5) & (c3=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c5=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c5=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c3=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c3=n_6) & (c5=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c2=n_6) & (c3=n_6) & (c5=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c1=n_7) & (c2=n_7) & (c3=n_7) & (c5=n_7) & (c7=n_7) & (c8=n_7) & (c9=n_7) & (c10=n_7)) | ((c6=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c3=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c3=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c2=n_6) & (c3=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c1=n_7) & (c2=n_7) & (c3=n_7) & (c6=n_7) & (c7=n_7) & (c8=n_7) & (c9=n_7) & (c10=n_7)) | ((c5=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c2=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c1=n_7) & (c2=n_7) & (c5=n_7) & (c6=n_7) & (c7=n_7) & (c8=n_7) & (c9=n_7) & (c10=n_7)) | ((c3=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c1=n_7) & (c3=n_7) & (c5=n_7) & (c6=n_7) & (c7=n_7) & (c8=n_7) & (c9=n_7) & (c10=n_7)) | ((c2=n_7) & (c3=n_7) & (c5=n_7) & (c6=n_7) & (c7=n_7) & (c8=n_7) & (c9=n_7) & (c10=n_7)) | ((c1=n_8) & (c2=n_8) & (c3=n_8) & (c5=n_8) & (c6=n_8) & (c7=n_8) & (c8=n_8) & (c9=n_8) & (c10=n_8)));
formula can5 = !((c1=n) | (c2=n) | ((c1=n_1) & (c2=n_1)) | (c3=n) | ((c1=n_1) & (c3=n_1)) | ((c2=n_1) & (c3=n_1)) | ((c1=n_2) & (c2=n_2) & (c3=n_2)) | (c4=n) | ((c1=n_1) & (c4=n_1)) | ((c2=n_1) & (c4=n_1)) | ((c1=n_2) & (c2=n_2) & (c4=n_2)) | ((c3=n_1) & (c4=n_1)) | ((c1=n_2) & (c3=n_2) & (c4=n_2)) | ((c2=n_2) & (c3=n_2) & (c4=n_2)) | ((c1=n_3) & (c2=n_3) & (c3=n_3) & (c4=n_3)) | (c6=n) | ((c1=n_1) & (c6=n_1)) | ((c2=n_1) & (c6=n_1)) | ((c1=n_2) & (c2=n_2) & (c6=n_2)) | ((c3=n_1) & (c6=n_1)) | ((c1=n_2) & (c3=n_2) & (c6=n_2)) | ((c2=n_2) & (c3=n_2) & (c6=n_2)) | ((c1=n_3) & (c2=n_3) & (c3=n_3) & (c6=n_3)) | ((c4=n_1) & (c6=n_1)) | ((c1=n_2) & (c4=n_2) & (c6=n_2)) | ((c2=n_2) & (c4=n_2) & (c6=n_2)) | ((c1=n_3) & (c2=n_3) & (c4=n_3) & (c6=n_3)) | ((c3=n_2) & (c4=n_2) & (c6=n_2)) | ((c1=n_3) & (c3=n_3) & (c4=n_3) & (c6=n_3)) | ((c2=n_3) & (c3=n_3) & (c4=n_3) & (c6=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c4=n_4) & (c6=n_4)) | (c7=n) | ((c1=n_1) & (c7=n_1)) | ((c2=n_1) & (c7=n_1)) | ((c1=n_2) & (c2=n_2) & (c7=n_2)) | ((c3=n_1) & (c7=n_1)) | ((c1=n_2) & (c3=n_2) & (c7=n_2)) | ((c2=n_2) & (c3=n_2) & (c7=n_2)) | ((c1=n_3) & (c2=n_3) & (c3=n_3) & (c7=n_3)) | ((c4=n_1) & (c7=n_1)) | ((c1=n_2) & (c4=n_2) & (c7=n_2)) | ((c2=n_2) & (c4=n_2) & (c7=n_2)) | ((c1=n_3) & (c2=n_3) & (c4=n_3) & (c7=n_3)) | ((c3=n_2) & (c4=n_2) & (c7=n_2)) | ((c1=n_3) & (c3=n_3) & (c4=n_3) & (c7=n_3)) | ((c2=n_3) & (c3=n_3) & (c4=n_3) & (c7=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c4=n_4) & (c7=n_4)) | ((c6=n_1) & (c7=n_1)) | ((c1=n_2) & (c6=n_2) & (c7=n_2)) | ((c2=n_2) & (c6=n_2) & (c7=n_2)) | ((c1=n_3) & (c2=n_3) & (c6=n_3) & (c7=n_3)) | ((c3=n_2) & (c6=n_2) & (c7=n_2)) | ((c1=n_3) & (c3=n_3) & (c6=n_3) & (c7=n_3)) | ((c2=n_3) & (c3=n_3) & (c6=n_3) & (c7=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c6=n_4) & (c7=n_4)) | ((c4=n_2) & (c6=n_2) & (c7=n_2)) | ((c1=n_3) & (c4=n_3) & (c6=n_3) & (c7=n_3)) | ((c2=n_3) & (c4=n_3) & (c6=n_3) & (c7=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c6=n_4) & (c7=n_4)) | ((c3=n_3) & (c4=n_3) & (c6=n_3) & (c7=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c6=n_4) & (c7=n_4)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c6=n_4) & (c7=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5)) | (c8=n) | ((c1=n_1) & (c8=n_1)) | ((c2=n_1) & (c8=n_1)) | ((c1=n_2) & (c2=n_2) & (c8=n_2)) | ((c3=n_1) & (c8=n_1)) | ((c1=n_2) & (c3=n_2) & (c8=n_2)) | ((c2=n_2) & (c3=n_2) & (c8=n_2)) | ((c1=n_3) & (c2=n_3) & (c3=n_3) & (c8=n_3)) | ((c4=n_1) & (c8=n_1)) | ((c1=n_2) & (c4=n_2) & (c8=n_2)) | ((c2=n_2) & (c4=n_2) & (c8=n_2)) | ((c1=n_3) & (c2=n_3) & (c4=n_3) & (c8=n_3)) | ((c3=n_2) & (c4=n_2) & (c8=n_2)) | ((c1=n_3) & (c3=n_3) & (c4=n_3) & (c8=n_3)) | ((c2=n_3) & (c3=n_3) & (c4=n_3) & (c8=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c4=n_4) & (c8=n_4)) | ((c6=n_1) & (c8=n_1)) | ((c1=n_2) & (c6=n_2) & (c8=n_2)) | ((c2=n_2) & (c6=n_2) & (c8=n_2)) | ((c1=n_3) & (c2=n_3) & (c6=n_3) & (c8=n_3)) | ((c3=n_2) & (c6=n_2) & (c8=n_2)) | ((c1=n_3) & (c3=n_3) & (c6=n_3) & (c8=n_3)) | ((c2=n_3) & (c3=n_3) & (c6=n_3) & (c8=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c6=n_4) & (c8=n_4)) | ((c4=n_2) & (c6=n_2) & (c8=n_2)) | ((c1=n_3) & (c4=n_3) & (c6=n_3) & (c8=n_3)) | ((c2=n_3) & (c4=n_3) & (c6=n_3) & (c8=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c6=n_4) & (c8=n_4)) | ((c3=n_3) & (c4=n_3) & (c6=n_3) & (c8=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c6=n_4) & (c8=n_4)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c6=n_4) & (c8=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c4=n_5) & (c6=n_5) & (c8=n_5)) | ((c7=n_1) & (c8=n_1)) | ((c1=n_2) & (c7=n_2) & (c8=n_2)) | ((c2=n_2) & (c7=n_2) & (c8=n_2)) | ((c1=n_3) & (c2=n_3) & (c7=n_3) & (c8=n_3)) | ((c3=n_2) & (c7=n_2) & (c8=n_2)) | ((c1=n_3) & (c3=n_3) & (c7=n_3) & (c8=n_3)) | ((c2=n_3) & (c3=n_3) & (c7=n_3) & (c8=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c7=n_4) & (c8=n_4)) | ((c4=n_2) & (c7=n_2) & (c8=n_2)) | ((c1=n_3) & (c4=n_3) & (c7=n_3) & (c8=n_3)) | ((c2=n_3) & (c4=n_3) & (c7=n_3) & (c8=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c7=n_4) & (c8=n_4)) | ((c3=n_3) & (c4=n_3) & (c7=n_3) & (c8=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c7=n_4) & (c8=n_4)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c7=n_4) & (c8=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c4=n_5) & (c7=n_5) & (c8=n_5)) | ((c6=n_2) & (c7=n_2) & (c8=n_2)) | ((c1=n_3) & (c6=n_3) & (c7=n_3) & (c8=n_3)) | ((c2=n_3) & (c6=n_3) & (c7=n_3) & (c8=n_3)) | ((c1=n_4) & (c2=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4)) | ((c3=n_3) & (c6=n_3) & (c7=n_3) & (c8=n_3)) | ((c1=n_4) & (c3=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4)) | ((c2=n_4) & (c3=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5)) | ((c4=n_3) & (c6=n_3) & (c7=n_3) & (c8=n_3)) | ((c1=n_4) & (c4=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4)) | ((c2=n_4) & (c4=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5)) | ((c3=n_4) & (c4=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c4=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6)) | (c9=n) | ((c1=n_1) & (c9=n_1)) | ((c2=n_1) & (c9=n_1)) | ((c1=n_2) & (c2=n_2) & (c9=n_2)) | ((c3=n_1) & (c9=n_1)) | ((c1=n_2) & (c3=n_2) & (c9=n_2)) | ((c2=n_2) & (c3=n_2) & (c9=n_2)) | ((c1=n_3) & (c2=n_3) & (c3=n_3) & (c9=n_3)) | ((c4=n_1) & (c9=n_1)) | ((c1=n_2) & (c4=n_2) & (c9=n_2)) | ((c2=n_2) & (c4=n_2) & (c9=n_2)) | ((c1=n_3) & (c2=n_3) & (c4=n_3) & (c9=n_3)) | ((c3=n_2) & (c4=n_2) & (c9=n_2)) | ((c1=n_3) & (c3=n_3) & (c4=n_3) & (c9=n_3)) | ((c2=n_3) & (c3=n_3) & (c4=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c4=n_4) & (c9=n_4)) | ((c6=n_1) & (c9=n_1)) | ((c1=n_2) & (c6=n_2) & (c9=n_2)) | ((c2=n_2) & (c6=n_2) & (c9=n_2)) | ((c1=n_3) & (c2=n_3) & (c6=n_3) & (c9=n_3)) | ((c3=n_2) & (c6=n_2) & (c9=n_2)) | ((c1=n_3) & (c3=n_3) & (c6=n_3) & (c9=n_3)) | ((c2=n_3) & (c3=n_3) & (c6=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c6=n_4) & (c9=n_4)) | ((c4=n_2) & (c6=n_2) & (c9=n_2)) | ((c1=n_3) & (c4=n_3) & (c6=n_3) & (c9=n_3)) | ((c2=n_3) & (c4=n_3) & (c6=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c6=n_4) & (c9=n_4)) | ((c3=n_3) & (c4=n_3) & (c6=n_3) & (c9=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c6=n_4) & (c9=n_4)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c6=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c4=n_5) & (c6=n_5) & (c9=n_5)) | ((c7=n_1) & (c9=n_1)) | ((c1=n_2) & (c7=n_2) & (c9=n_2)) | ((c2=n_2) & (c7=n_2) & (c9=n_2)) | ((c1=n_3) & (c2=n_3) & (c7=n_3) & (c9=n_3)) | ((c3=n_2) & (c7=n_2) & (c9=n_2)) | ((c1=n_3) & (c3=n_3) & (c7=n_3) & (c9=n_3)) | ((c2=n_3) & (c3=n_3) & (c7=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c7=n_4) & (c9=n_4)) | ((c4=n_2) & (c7=n_2) & (c9=n_2)) | ((c1=n_3) & (c4=n_3) & (c7=n_3) & (c9=n_3)) | ((c2=n_3) & (c4=n_3) & (c7=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c7=n_4) & (c9=n_4)) | ((c3=n_3) & (c4=n_3) & (c7=n_3) & (c9=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c7=n_4) & (c9=n_4)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c7=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c4=n_5) & (c7=n_5) & (c9=n_5)) | ((c6=n_2) & (c7=n_2) & (c9=n_2)) | ((c1=n_3) & (c6=n_3) & (c7=n_3) & (c9=n_3)) | ((c2=n_3) & (c6=n_3) & (c7=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4)) | ((c3=n_3) & (c6=n_3) & (c7=n_3) & (c9=n_3)) | ((c1=n_4) & (c3=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4)) | ((c2=n_4) & (c3=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5)) | ((c4=n_3) & (c6=n_3) & (c7=n_3) & (c9=n_3)) | ((c1=n_4) & (c4=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4)) | ((c2=n_4) & (c4=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5)) | ((c3=n_4) & (c4=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c4=n_6) & (c6=n_6) & (c7=n_6) & (c9=n_6)) | ((c8=n_1) & (c9=n_1)) | ((c1=n_2) & (c8=n_2) & (c9=n_2)) | ((c2=n_2) & (c8=n_2) & (c9=n_2)) | ((c1=n_3) & (c2=n_3) & (c8=n_3) & (c9=n_3)) | ((c3=n_2) & (c8=n_2) & (c9=n_2)) | ((c1=n_3) & (c3=n_3) & (c8=n_3) & (c9=n_3)) | ((c2=n_3) & (c3=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c8=n_4) & (c9=n_4)) | ((c4=n_2) & (c8=n_2) & (c9=n_2)) | ((c1=n_3) & (c4=n_3) & (c8=n_3) & (c9=n_3)) | ((c2=n_3) & (c4=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c8=n_4) & (c9=n_4)) | ((c3=n_3) & (c4=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c8=n_4) & (c9=n_4)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c4=n_5) & (c8=n_5) & (c9=n_5)) | ((c6=n_2) & (c8=n_2) & (c9=n_2)) | ((c1=n_3) & (c6=n_3) & (c8=n_3) & (c9=n_3)) | ((c2=n_3) & (c6=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4)) | ((c3=n_3) & (c6=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c3=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4)) | ((c2=n_4) & (c3=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5)) | ((c4=n_3) & (c6=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c4=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4)) | ((c2=n_4) & (c4=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5)) | ((c3=n_4) & (c4=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c4=n_6) & (c6=n_6) & (c8=n_6) & (c9=n_6)) | ((c7=n_2) & (c8=n_2) & (c9=n_2)) | ((c1=n_3) & (c7=n_3) & (c8=n_3) & (c9=n_3)) | ((c2=n_3) & (c7=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c3=n_3) & (c7=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c3=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c2=n_4) & (c3=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c4=n_3) & (c7=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c4=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c2=n_4) & (c4=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c3=n_4) & (c4=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c4=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6)) | ((c6=n_3) & (c7=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c2=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c3=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c3=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c2=n_5) & (c3=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6)) | ((c4=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c2=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c1=n_6) & (c2=n_6) & (c4=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6)) | ((c3=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c1=n_6) & (c3=n_6) & (c4=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6)) | ((c2=n_6) & (c3=n_6) & (c4=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6)) | ((c1=n_7) & (c2=n_7) & (c3=n_7) & (c4=n_7) & (c6=n_7) & (c7=n_7) & (c8=n_7) & (c9=n_7)) | (c10=n) | ((c1=n_1) & (c10=n_1)) | ((c2=n_1) & (c10=n_1)) | ((c1=n_2) & (c2=n_2) & (c10=n_2)) | ((c3=n_1) & (c10=n_1)) | ((c1=n_2) & (c3=n_2) & (c10=n_2)) | ((c2=n_2) & (c3=n_2) & (c10=n_2)) | ((c1=n_3) & (c2=n_3) & (c3=n_3) & (c10=n_3)) | ((c4=n_1) & (c10=n_1)) | ((c1=n_2) & (c4=n_2) & (c10=n_2)) | ((c2=n_2) & (c4=n_2) & (c10=n_2)) | ((c1=n_3) & (c2=n_3) & (c4=n_3) & (c10=n_3)) | ((c3=n_2) & (c4=n_2) & (c10=n_2)) | ((c1=n_3) & (c3=n_3) & (c4=n_3) & (c10=n_3)) | ((c2=n_3) & (c3=n_3) & (c4=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c4=n_4) & (c10=n_4)) | ((c6=n_1) & (c10=n_1)) | ((c1=n_2) & (c6=n_2) & (c10=n_2)) | ((c2=n_2) & (c6=n_2) & (c10=n_2)) | ((c1=n_3) & (c2=n_3) & (c6=n_3) & (c10=n_3)) | ((c3=n_2) & (c6=n_2) & (c10=n_2)) | ((c1=n_3) & (c3=n_3) & (c6=n_3) & (c10=n_3)) | ((c2=n_3) & (c3=n_3) & (c6=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c6=n_4) & (c10=n_4)) | ((c4=n_2) & (c6=n_2) & (c10=n_2)) | ((c1=n_3) & (c4=n_3) & (c6=n_3) & (c10=n_3)) | ((c2=n_3) & (c4=n_3) & (c6=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c6=n_4) & (c10=n_4)) | ((c3=n_3) & (c4=n_3) & (c6=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c6=n_4) & (c10=n_4)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c6=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c4=n_5) & (c6=n_5) & (c10=n_5)) | ((c7=n_1) & (c10=n_1)) | ((c1=n_2) & (c7=n_2) & (c10=n_2)) | ((c2=n_2) & (c7=n_2) & (c10=n_2)) | ((c1=n_3) & (c2=n_3) & (c7=n_3) & (c10=n_3)) | ((c3=n_2) & (c7=n_2) & (c10=n_2)) | ((c1=n_3) & (c3=n_3) & (c7=n_3) & (c10=n_3)) | ((c2=n_3) & (c3=n_3) & (c7=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c7=n_4) & (c10=n_4)) | ((c4=n_2) & (c7=n_2) & (c10=n_2)) | ((c1=n_3) & (c4=n_3) & (c7=n_3) & (c10=n_3)) | ((c2=n_3) & (c4=n_3) & (c7=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c7=n_4) & (c10=n_4)) | ((c3=n_3) & (c4=n_3) & (c7=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c7=n_4) & (c10=n_4)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c7=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c4=n_5) & (c7=n_5) & (c10=n_5)) | ((c6=n_2) & (c7=n_2) & (c10=n_2)) | ((c1=n_3) & (c6=n_3) & (c7=n_3) & (c10=n_3)) | ((c2=n_3) & (c6=n_3) & (c7=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c6=n_4) & (c7=n_4) & (c10=n_4)) | ((c3=n_3) & (c6=n_3) & (c7=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c6=n_4) & (c7=n_4) & (c10=n_4)) | ((c2=n_4) & (c3=n_4) & (c6=n_4) & (c7=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c6=n_5) & (c7=n_5) & (c10=n_5)) | ((c4=n_3) & (c6=n_3) & (c7=n_3) & (c10=n_3)) | ((c1=n_4) & (c4=n_4) & (c6=n_4) & (c7=n_4) & (c10=n_4)) | ((c2=n_4) & (c4=n_4) & (c6=n_4) & (c7=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c10=n_5)) | ((c3=n_4) & (c4=n_4) & (c6=n_4) & (c7=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c10=n_5)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c4=n_6) & (c6=n_6) & (c7=n_6) & (c10=n_6)) | ((c8=n_1) & (c10=n_1)) | ((c1=n_2) & (c8=n_2) & (c10=n_2)) | ((c2=n_2) & (c8=n_2) & (c10=n_2)) | ((c1=n_3) & (c2=n_3) & (c8=n_3) & (c10=n_3)) | ((c3=n_2) & (c8=n_2) & (c10=n_2)) | ((c1=n_3) & (c3=n_3) & (c8=n_3) & (c10=n_3)) | ((c2=n_3) & (c3=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c8=n_4) & (c10=n_4)) | ((c4=n_2) & (c8=n_2) & (c10=n_2)) | ((c1=n_3) & (c4=n_3) & (c8=n_3) & (c10=n_3)) | ((c2=n_3) & (c4=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c8=n_4) & (c10=n_4)) | ((c3=n_3) & (c4=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c8=n_4) & (c10=n_4)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c4=n_5) & (c8=n_5) & (c10=n_5)) | ((c6=n_2) & (c8=n_2) & (c10=n_2)) | ((c1=n_3) & (c6=n_3) & (c8=n_3) & (c10=n_3)) | ((c2=n_3) & (c6=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c6=n_4) & (c8=n_4) & (c10=n_4)) | ((c3=n_3) & (c6=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c6=n_4) & (c8=n_4) & (c10=n_4)) | ((c2=n_4) & (c3=n_4) & (c6=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c6=n_5) & (c8=n_5) & (c10=n_5)) | ((c4=n_3) & (c6=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c4=n_4) & (c6=n_4) & (c8=n_4) & (c10=n_4)) | ((c2=n_4) & (c4=n_4) & (c6=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c6=n_5) & (c8=n_5) & (c10=n_5)) | ((c3=n_4) & (c4=n_4) & (c6=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c6=n_5) & (c8=n_5) & (c10=n_5)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c6=n_5) & (c8=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c4=n_6) & (c6=n_6) & (c8=n_6) & (c10=n_6)) | ((c7=n_2) & (c8=n_2) & (c10=n_2)) | ((c1=n_3) & (c7=n_3) & (c8=n_3) & (c10=n_3)) | ((c2=n_3) & (c7=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c3=n_3) & (c7=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c2=n_4) & (c3=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c4=n_3) & (c7=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c4=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c2=n_4) & (c4=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c3=n_4) & (c4=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c4=n_6) & (c7=n_6) & (c8=n_6) & (c10=n_6)) | ((c6=n_3) & (c7=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c2=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c3=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c2=n_5) & (c3=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c10=n_6)) | ((c4=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c2=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c4=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c10=n_6)) | ((c3=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c1=n_6) & (c3=n_6) & (c4=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c10=n_6)) | ((c2=n_6) & (c3=n_6) & (c4=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c10=n_6)) | ((c1=n_7) & (c2=n_7) & (c3=n_7) & (c4=n_7) & (c6=n_7) & (c7=n_7) & (c8=n_7) & (c10=n_7)) | ((c9=n_1) & (c10=n_1)) | ((c1=n_2) & (c9=n_2) & (c10=n_2)) | ((c2=n_2) & (c9=n_2) & (c10=n_2)) | ((c1=n_3) & (c2=n_3) & (c9=n_3) & (c10=n_3)) | ((c3=n_2) & (c9=n_2) & (c10=n_2)) | ((c1=n_3) & (c3=n_3) & (c9=n_3) & (c10=n_3)) | ((c2=n_3) & (c3=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c9=n_4) & (c10=n_4)) | ((c4=n_2) & (c9=n_2) & (c10=n_2)) | ((c1=n_3) & (c4=n_3) & (c9=n_3) & (c10=n_3)) | ((c2=n_3) & (c4=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c9=n_4) & (c10=n_4)) | ((c3=n_3) & (c4=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c4=n_5) & (c9=n_5) & (c10=n_5)) | ((c6=n_2) & (c9=n_2) & (c10=n_2)) | ((c1=n_3) & (c6=n_3) & (c9=n_3) & (c10=n_3)) | ((c2=n_3) & (c6=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c6=n_4) & (c9=n_4) & (c10=n_4)) | ((c3=n_3) & (c6=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c6=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_4) & (c3=n_4) & (c6=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c6=n_5) & (c9=n_5) & (c10=n_5)) | ((c4=n_3) & (c6=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c4=n_4) & (c6=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_4) & (c4=n_4) & (c6=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c6=n_5) & (c9=n_5) & (c10=n_5)) | ((c3=n_4) & (c4=n_4) & (c6=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c6=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c6=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c4=n_6) & (c6=n_6) & (c9=n_6) & (c10=n_6)) | ((c7=n_2) & (c9=n_2) & (c10=n_2)) | ((c1=n_3) & (c7=n_3) & (c9=n_3) & (c10=n_3)) | ((c2=n_3) & (c7=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c3=n_3) & (c7=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_4) & (c3=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c4=n_3) & (c7=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c4=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_4) & (c4=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c3=n_4) & (c4=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c4=n_6) & (c7=n_6) & (c9=n_6) & (c10=n_6)) | ((c6=n_3) & (c7=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c3=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_5) & (c3=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c6=n_6) & (c7=n_6) & (c9=n_6) & (c10=n_6)) | ((c4=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c4=n_6) & (c6=n_6) & (c7=n_6) & (c9=n_6) & (c10=n_6)) | ((c3=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c3=n_6) & (c4=n_6) & (c6=n_6) & (c7=n_6) & (c9=n_6) & (c10=n_6)) | ((c2=n_6) & (c3=n_6) & (c4=n_6) & (c6=n_6) & (c7=n_6) & (c9=n_6) & (c10=n_6)) | ((c1=n_7) & (c2=n_7) & (c3=n_7) & (c4=n_7) & (c6=n_7) & (c7=n_7) & (c9=n_7) & (c10=n_7)) | ((c8=n_2) & (c9=n_2) & (c10=n_2)) | ((c1=n_3) & (c8=n_3) & (c9=n_3) & (c10=n_3)) | ((c2=n_3) & (c8=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c3=n_3) & (c8=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_4) & (c3=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c4=n_3) & (c8=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c4=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_4) & (c4=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c3=n_4) & (c4=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c4=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c6=n_3) & (c8=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c3=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_5) & (c3=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c6=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c4=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c4=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_5) & (c4=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c4=n_6) & (c6=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c3=n_5) & (c4=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c3=n_6) & (c4=n_6) & (c6=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c2=n_6) & (c3=n_6) & (c4=n_6) & (c6=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c1=n_7) & (c2=n_7) & (c3=n_7) & (c4=n_7) & (c6=n_7) & (c8=n_7) & (c9=n_7) & (c10=n_7)) | ((c7=n_3) & (c8=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c3=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_5) & (c3=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c4=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c4=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_5) & (c4=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c4=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c3=n_5) & (c4=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c3=n_6) & (c4=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c2=n_6) & (c3=n_6) & (c4=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c1=n_7) & (c2=n_7) & (c3=n_7) & (c4=n_7) & (c7=n_7) & (c8=n_7) & (c9=n_7) & (c10=n_7)) | ((c6=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c3=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c3=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c2=n_6) & (c3=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c1=n_7) & (c2=n_7) & (c3=n_7) & (c6=n_7) & (c7=n_7) & (c8=n_7) & (c9=n_7) & (c10=n_7)) | ((c4=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c4=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c2=n_6) & (c4=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c1=n_7) & (c2=n_7) & (c4=n_7) & (c6=n_7) & (c7=n_7) & (c8=n_7) & (c9=n_7) & (c10=n_7)) | ((c3=n_6) & (c4=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c1=n_7) & (c3=n_7) & (c4=n_7) & (c6=n_7) & (c7=n_7) & (c8=n_7) & (c9=n_7) & (c10=n_7)) | ((c2=n_7) & (c3=n_7) & (c4=n_7) & (c6=n_7) & (c7=n_7) & (c8=n_7) & (c9=n_7) & (c10=n_7)) | ((c1=n_8) & (c2=n_8) & (c3=n_8) & (c4=n_8) & (c6=n_8) & (c7=n_8) & (c8=n_8) & (c9=n_8) & (c10=n_8)));
formula can6 = !((c1=n) | (c2=n) | ((c1=n_1) & (c2=n_1)) | (c3=n) | ((c1=n_1) & (c3=n_1)) | ((c2=n_1) & (c3=n_1)) | ((c1=n_2) & (c2=n_2) & (c3=n_2)) | (c4=n) | ((c1=n_1) & (c4=n_1)) | ((c2=n_1) & (c4=n_1)) | ((c1=n_2) & (c2=n_2) & (c4=n_2)) | ((c3=n_1) & (c4=n_1)) | ((c1=n_2) & (c3=n_2) & (c4=n_2)) | ((c2=n_2) & (c3=n_2) & (c4=n_2)) | ((c1=n_3) & (c2=n_3) & (c3=n_3) & (c4=n_3)) | (c5=n) | ((c1=n_1) & (c5=n_1)) | ((c2=n_1) & (c5=n_1)) | ((c1=n_2) & (c2=n_2) & (c5=n_2)) | ((c3=n_1) & (c5=n_1)) | ((c1=n_2) & (c3=n_2) & (c5=n_2)) | ((c2=n_2) & (c3=n_2) & (c5=n_2)) | ((c1=n_3) & (c2=n_3) & (c3=n_3) & (c5=n_3)) | ((c4=n_1) & (c5=n_1)) | ((c1=n_2) & (c4=n_2) & (c5=n_2)) | ((c2=n_2) & (c4=n_2) & (c5=n_2)) | ((c1=n_3) & (c2=n_3) & (c4=n_3) & (c5=n_3)) | ((c3=n_2) & (c4=n_2) & (c5=n_2)) | ((c1=n_3) & (c3=n_3) & (c4=n_3) & (c5=n_3)) | ((c2=n_3) & (c3=n_3) & (c4=n_3) & (c5=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c4=n_4) & (c5=n_4)) | (c7=n) | ((c1=n_1) & (c7=n_1)) | ((c2=n_1) & (c7=n_1)) | ((c1=n_2) & (c2=n_2) & (c7=n_2)) | ((c3=n_1) & (c7=n_1)) | ((c1=n_2) & (c3=n_2) & (c7=n_2)) | ((c2=n_2) & (c3=n_2) & (c7=n_2)) | ((c1=n_3) & (c2=n_3) & (c3=n_3) & (c7=n_3)) | ((c4=n_1) & (c7=n_1)) | ((c1=n_2) & (c4=n_2) & (c7=n_2)) | ((c2=n_2) & (c4=n_2) & (c7=n_2)) | ((c1=n_3) & (c2=n_3) & (c4=n_3) & (c7=n_3)) | ((c3=n_2) & (c4=n_2) & (c7=n_2)) | ((c1=n_3) & (c3=n_3) & (c4=n_3) & (c7=n_3)) | ((c2=n_3) & (c3=n_3) & (c4=n_3) & (c7=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c4=n_4) & (c7=n_4)) | ((c5=n_1) & (c7=n_1)) | ((c1=n_2) & (c5=n_2) & (c7=n_2)) | ((c2=n_2) & (c5=n_2) & (c7=n_2)) | ((c1=n_3) & (c2=n_3) & (c5=n_3) & (c7=n_3)) | ((c3=n_2) & (c5=n_2) & (c7=n_2)) | ((c1=n_3) & (c3=n_3) & (c5=n_3) & (c7=n_3)) | ((c2=n_3) & (c3=n_3) & (c5=n_3) & (c7=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c5=n_4) & (c7=n_4)) | ((c4=n_2) & (c5=n_2) & (c7=n_2)) | ((c1=n_3) & (c4=n_3) & (c5=n_3) & (c7=n_3)) | ((c2=n_3) & (c4=n_3) & (c5=n_3) & (c7=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c5=n_4) & (c7=n_4)) | ((c3=n_3) & (c4=n_3) & (c5=n_3) & (c7=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c5=n_4) & (c7=n_4)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c5=n_4) & (c7=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5)) | (c8=n) | ((c1=n_1) & (c8=n_1)) | ((c2=n_1) & (c8=n_1)) | ((c1=n_2) & (c2=n_2) & (c8=n_2)) | ((c3=n_1) & (c8=n_1)) | ((c1=n_2) & (c3=n_2) & (c8=n_2)) | ((c2=n_2) & (c3=n_2) & (c8=n_2)) | ((c1=n_3) & (c2=n_3) & (c3=n_3) & (c8=n_3)) | ((c4=n_1) & (c8=n_1)) | ((c1=n_2) & (c4=n_2) & (c8=n_2)) | ((c2=n_2) & (c4=n_2) & (c8=n_2)) | ((c1=n_3) & (c2=n_3) & (c4=n_3) & (c8=n_3)) | ((c3=n_2) & (c4=n_2) & (c8=n_2)) | ((c1=n_3) & (c3=n_3) & (c4=n_3) & (c8=n_3)) | ((c2=n_3) & (c3=n_3) & (c4=n_3) & (c8=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c4=n_4) & (c8=n_4)) | ((c5=n_1) & (c8=n_1)) | ((c1=n_2) & (c5=n_2) & (c8=n_2)) | ((c2=n_2) & (c5=n_2) & (c8=n_2)) | ((c1=n_3) & (c2=n_3) & (c5=n_3) & (c8=n_3)) | ((c3=n_2) & (c5=n_2) & (c8=n_2)) | ((c1=n_3) & (c3=n_3) & (c5=n_3) & (c8=n_3)) | ((c2=n_3) & (c3=n_3) & (c5=n_3) & (c8=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c5=n_4) & (c8=n_4)) | ((c4=n_2) & (c5=n_2) & (c8=n_2)) | ((c1=n_3) & (c4=n_3) & (c5=n_3) & (c8=n_3)) | ((c2=n_3) & (c4=n_3) & (c5=n_3) & (c8=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c5=n_4) & (c8=n_4)) | ((c3=n_3) & (c4=n_3) & (c5=n_3) & (c8=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c5=n_4) & (c8=n_4)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c5=n_4) & (c8=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c8=n_5)) | ((c7=n_1) & (c8=n_1)) | ((c1=n_2) & (c7=n_2) & (c8=n_2)) | ((c2=n_2) & (c7=n_2) & (c8=n_2)) | ((c1=n_3) & (c2=n_3) & (c7=n_3) & (c8=n_3)) | ((c3=n_2) & (c7=n_2) & (c8=n_2)) | ((c1=n_3) & (c3=n_3) & (c7=n_3) & (c8=n_3)) | ((c2=n_3) & (c3=n_3) & (c7=n_3) & (c8=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c7=n_4) & (c8=n_4)) | ((c4=n_2) & (c7=n_2) & (c8=n_2)) | ((c1=n_3) & (c4=n_3) & (c7=n_3) & (c8=n_3)) | ((c2=n_3) & (c4=n_3) & (c7=n_3) & (c8=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c7=n_4) & (c8=n_4)) | ((c3=n_3) & (c4=n_3) & (c7=n_3) & (c8=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c7=n_4) & (c8=n_4)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c7=n_4) & (c8=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c4=n_5) & (c7=n_5) & (c8=n_5)) | ((c5=n_2) & (c7=n_2) & (c8=n_2)) | ((c1=n_3) & (c5=n_3) & (c7=n_3) & (c8=n_3)) | ((c2=n_3) & (c5=n_3) & (c7=n_3) & (c8=n_3)) | ((c1=n_4) & (c2=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4)) | ((c3=n_3) & (c5=n_3) & (c7=n_3) & (c8=n_3)) | ((c1=n_4) & (c3=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4)) | ((c2=n_4) & (c3=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5)) | ((c4=n_3) & (c5=n_3) & (c7=n_3) & (c8=n_3)) | ((c1=n_4) & (c4=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4)) | ((c2=n_4) & (c4=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5)) | ((c3=n_4) & (c4=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c7=n_6) & (c8=n_6)) | (c9=n) | ((c1=n_1) & (c9=n_1)) | ((c2=n_1) & (c9=n_1)) | ((c1=n_2) & (c2=n_2) & (c9=n_2)) | ((c3=n_1) & (c9=n_1)) | ((c1=n_2) & (c3=n_2) & (c9=n_2)) | ((c2=n_2) & (c3=n_2) & (c9=n_2)) | ((c1=n_3) & (c2=n_3) & (c3=n_3) & (c9=n_3)) | ((c4=n_1) & (c9=n_1)) | ((c1=n_2) & (c4=n_2) & (c9=n_2)) | ((c2=n_2) & (c4=n_2) & (c9=n_2)) | ((c1=n_3) & (c2=n_3) & (c4=n_3) & (c9=n_3)) | ((c3=n_2) & (c4=n_2) & (c9=n_2)) | ((c1=n_3) & (c3=n_3) & (c4=n_3) & (c9=n_3)) | ((c2=n_3) & (c3=n_3) & (c4=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c4=n_4) & (c9=n_4)) | ((c5=n_1) & (c9=n_1)) | ((c1=n_2) & (c5=n_2) & (c9=n_2)) | ((c2=n_2) & (c5=n_2) & (c9=n_2)) | ((c1=n_3) & (c2=n_3) & (c5=n_3) & (c9=n_3)) | ((c3=n_2) & (c5=n_2) & (c9=n_2)) | ((c1=n_3) & (c3=n_3) & (c5=n_3) & (c9=n_3)) | ((c2=n_3) & (c3=n_3) & (c5=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c5=n_4) & (c9=n_4)) | ((c4=n_2) & (c5=n_2) & (c9=n_2)) | ((c1=n_3) & (c4=n_3) & (c5=n_3) & (c9=n_3)) | ((c2=n_3) & (c4=n_3) & (c5=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c5=n_4) & (c9=n_4)) | ((c3=n_3) & (c4=n_3) & (c5=n_3) & (c9=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c5=n_4) & (c9=n_4)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c5=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c9=n_5)) | ((c7=n_1) & (c9=n_1)) | ((c1=n_2) & (c7=n_2) & (c9=n_2)) | ((c2=n_2) & (c7=n_2) & (c9=n_2)) | ((c1=n_3) & (c2=n_3) & (c7=n_3) & (c9=n_3)) | ((c3=n_2) & (c7=n_2) & (c9=n_2)) | ((c1=n_3) & (c3=n_3) & (c7=n_3) & (c9=n_3)) | ((c2=n_3) & (c3=n_3) & (c7=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c7=n_4) & (c9=n_4)) | ((c4=n_2) & (c7=n_2) & (c9=n_2)) | ((c1=n_3) & (c4=n_3) & (c7=n_3) & (c9=n_3)) | ((c2=n_3) & (c4=n_3) & (c7=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c7=n_4) & (c9=n_4)) | ((c3=n_3) & (c4=n_3) & (c7=n_3) & (c9=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c7=n_4) & (c9=n_4)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c7=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c4=n_5) & (c7=n_5) & (c9=n_5)) | ((c5=n_2) & (c7=n_2) & (c9=n_2)) | ((c1=n_3) & (c5=n_3) & (c7=n_3) & (c9=n_3)) | ((c2=n_3) & (c5=n_3) & (c7=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c5=n_4) & (c7=n_4) & (c9=n_4)) | ((c3=n_3) & (c5=n_3) & (c7=n_3) & (c9=n_3)) | ((c1=n_4) & (c3=n_4) & (c5=n_4) & (c7=n_4) & (c9=n_4)) | ((c2=n_4) & (c3=n_4) & (c5=n_4) & (c7=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c5=n_5) & (c7=n_5) & (c9=n_5)) | ((c4=n_3) & (c5=n_3) & (c7=n_3) & (c9=n_3)) | ((c1=n_4) & (c4=n_4) & (c5=n_4) & (c7=n_4) & (c9=n_4)) | ((c2=n_4) & (c4=n_4) & (c5=n_4) & (c7=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c9=n_5)) | ((c3=n_4) & (c4=n_4) & (c5=n_4) & (c7=n_4) & (c9=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c9=n_5)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c9=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c7=n_6) & (c9=n_6)) | ((c8=n_1) & (c9=n_1)) | ((c1=n_2) & (c8=n_2) & (c9=n_2)) | ((c2=n_2) & (c8=n_2) & (c9=n_2)) | ((c1=n_3) & (c2=n_3) & (c8=n_3) & (c9=n_3)) | ((c3=n_2) & (c8=n_2) & (c9=n_2)) | ((c1=n_3) & (c3=n_3) & (c8=n_3) & (c9=n_3)) | ((c2=n_3) & (c3=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c8=n_4) & (c9=n_4)) | ((c4=n_2) & (c8=n_2) & (c9=n_2)) | ((c1=n_3) & (c4=n_3) & (c8=n_3) & (c9=n_3)) | ((c2=n_3) & (c4=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c8=n_4) & (c9=n_4)) | ((c3=n_3) & (c4=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c8=n_4) & (c9=n_4)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c4=n_5) & (c8=n_5) & (c9=n_5)) | ((c5=n_2) & (c8=n_2) & (c9=n_2)) | ((c1=n_3) & (c5=n_3) & (c8=n_3) & (c9=n_3)) | ((c2=n_3) & (c5=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c5=n_4) & (c8=n_4) & (c9=n_4)) | ((c3=n_3) & (c5=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c3=n_4) & (c5=n_4) & (c8=n_4) & (c9=n_4)) | ((c2=n_4) & (c3=n_4) & (c5=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c5=n_5) & (c8=n_5) & (c9=n_5)) | ((c4=n_3) & (c5=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c4=n_4) & (c5=n_4) & (c8=n_4) & (c9=n_4)) | ((c2=n_4) & (c4=n_4) & (c5=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c5=n_5) & (c8=n_5) & (c9=n_5)) | ((c3=n_4) & (c4=n_4) & (c5=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c8=n_5) & (c9=n_5)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c8=n_5) & (c9=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c8=n_6) & (c9=n_6)) | ((c7=n_2) & (c8=n_2) & (c9=n_2)) | ((c1=n_3) & (c7=n_3) & (c8=n_3) & (c9=n_3)) | ((c2=n_3) & (c7=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c3=n_3) & (c7=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c3=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c2=n_4) & (c3=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c4=n_3) & (c7=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c4=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c2=n_4) & (c4=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c3=n_4) & (c4=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c4=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6)) | ((c5=n_3) & (c7=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c2=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c3=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c3=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c2=n_5) & (c3=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c5=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6)) | ((c4=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c2=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c1=n_6) & (c2=n_6) & (c4=n_6) & (c5=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6)) | ((c3=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c1=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6)) | ((c2=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6)) | ((c1=n_7) & (c2=n_7) & (c3=n_7) & (c4=n_7) & (c5=n_7) & (c7=n_7) & (c8=n_7) & (c9=n_7)) | (c10=n) | ((c1=n_1) & (c10=n_1)) | ((c2=n_1) & (c10=n_1)) | ((c1=n_2) & (c2=n_2) & (c10=n_2)) | ((c3=n_1) & (c10=n_1)) | ((c1=n_2) & (c3=n_2) & (c10=n_2)) | ((c2=n_2) & (c3=n_2) & (c10=n_2)) | ((c1=n_3) & (c2=n_3) & (c3=n_3) & (c10=n_3)) | ((c4=n_1) & (c10=n_1)) | ((c1=n_2) & (c4=n_2) & (c10=n_2)) | ((c2=n_2) & (c4=n_2) & (c10=n_2)) | ((c1=n_3) & (c2=n_3) & (c4=n_3) & (c10=n_3)) | ((c3=n_2) & (c4=n_2) & (c10=n_2)) | ((c1=n_3) & (c3=n_3) & (c4=n_3) & (c10=n_3)) | ((c2=n_3) & (c3=n_3) & (c4=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c4=n_4) & (c10=n_4)) | ((c5=n_1) & (c10=n_1)) | ((c1=n_2) & (c5=n_2) & (c10=n_2)) | ((c2=n_2) & (c5=n_2) & (c10=n_2)) | ((c1=n_3) & (c2=n_3) & (c5=n_3) & (c10=n_3)) | ((c3=n_2) & (c5=n_2) & (c10=n_2)) | ((c1=n_3) & (c3=n_3) & (c5=n_3) & (c10=n_3)) | ((c2=n_3) & (c3=n_3) & (c5=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c5=n_4) & (c10=n_4)) | ((c4=n_2) & (c5=n_2) & (c10=n_2)) | ((c1=n_3) & (c4=n_3) & (c5=n_3) & (c10=n_3)) | ((c2=n_3) & (c4=n_3) & (c5=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c5=n_4) & (c10=n_4)) | ((c3=n_3) & (c4=n_3) & (c5=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c5=n_4) & (c10=n_4)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c5=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c10=n_5)) | ((c7=n_1) & (c10=n_1)) | ((c1=n_2) & (c7=n_2) & (c10=n_2)) | ((c2=n_2) & (c7=n_2) & (c10=n_2)) | ((c1=n_3) & (c2=n_3) & (c7=n_3) & (c10=n_3)) | ((c3=n_2) & (c7=n_2) & (c10=n_2)) | ((c1=n_3) & (c3=n_3) & (c7=n_3) & (c10=n_3)) | ((c2=n_3) & (c3=n_3) & (c7=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c7=n_4) & (c10=n_4)) | ((c4=n_2) & (c7=n_2) & (c10=n_2)) | ((c1=n_3) & (c4=n_3) & (c7=n_3) & (c10=n_3)) | ((c2=n_3) & (c4=n_3) & (c7=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c7=n_4) & (c10=n_4)) | ((c3=n_3) & (c4=n_3) & (c7=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c7=n_4) & (c10=n_4)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c7=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c4=n_5) & (c7=n_5) & (c10=n_5)) | ((c5=n_2) & (c7=n_2) & (c10=n_2)) | ((c1=n_3) & (c5=n_3) & (c7=n_3) & (c10=n_3)) | ((c2=n_3) & (c5=n_3) & (c7=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c5=n_4) & (c7=n_4) & (c10=n_4)) | ((c3=n_3) & (c5=n_3) & (c7=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c5=n_4) & (c7=n_4) & (c10=n_4)) | ((c2=n_4) & (c3=n_4) & (c5=n_4) & (c7=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c5=n_5) & (c7=n_5) & (c10=n_5)) | ((c4=n_3) & (c5=n_3) & (c7=n_3) & (c10=n_3)) | ((c1=n_4) & (c4=n_4) & (c5=n_4) & (c7=n_4) & (c10=n_4)) | ((c2=n_4) & (c4=n_4) & (c5=n_4) & (c7=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c10=n_5)) | ((c3=n_4) & (c4=n_4) & (c5=n_4) & (c7=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c10=n_5)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c7=n_6) & (c10=n_6)) | ((c8=n_1) & (c10=n_1)) | ((c1=n_2) & (c8=n_2) & (c10=n_2)) | ((c2=n_2) & (c8=n_2) & (c10=n_2)) | ((c1=n_3) & (c2=n_3) & (c8=n_3) & (c10=n_3)) | ((c3=n_2) & (c8=n_2) & (c10=n_2)) | ((c1=n_3) & (c3=n_3) & (c8=n_3) & (c10=n_3)) | ((c2=n_3) & (c3=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c8=n_4) & (c10=n_4)) | ((c4=n_2) & (c8=n_2) & (c10=n_2)) | ((c1=n_3) & (c4=n_3) & (c8=n_3) & (c10=n_3)) | ((c2=n_3) & (c4=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c8=n_4) & (c10=n_4)) | ((c3=n_3) & (c4=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c8=n_4) & (c10=n_4)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c4=n_5) & (c8=n_5) & (c10=n_5)) | ((c5=n_2) & (c8=n_2) & (c10=n_2)) | ((c1=n_3) & (c5=n_3) & (c8=n_3) & (c10=n_3)) | ((c2=n_3) & (c5=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c5=n_4) & (c8=n_4) & (c10=n_4)) | ((c3=n_3) & (c5=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c5=n_4) & (c8=n_4) & (c10=n_4)) | ((c2=n_4) & (c3=n_4) & (c5=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c5=n_5) & (c8=n_5) & (c10=n_5)) | ((c4=n_3) & (c5=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c4=n_4) & (c5=n_4) & (c8=n_4) & (c10=n_4)) | ((c2=n_4) & (c4=n_4) & (c5=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c5=n_5) & (c8=n_5) & (c10=n_5)) | ((c3=n_4) & (c4=n_4) & (c5=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c8=n_5) & (c10=n_5)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c8=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c8=n_6) & (c10=n_6)) | ((c7=n_2) & (c8=n_2) & (c10=n_2)) | ((c1=n_3) & (c7=n_3) & (c8=n_3) & (c10=n_3)) | ((c2=n_3) & (c7=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c3=n_3) & (c7=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c2=n_4) & (c3=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c4=n_3) & (c7=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c4=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c2=n_4) & (c4=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c3=n_4) & (c4=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c4=n_6) & (c7=n_6) & (c8=n_6) & (c10=n_6)) | ((c5=n_3) & (c7=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c2=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c3=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c2=n_5) & (c3=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c5=n_6) & (c7=n_6) & (c8=n_6) & (c10=n_6)) | ((c4=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c2=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c4=n_6) & (c5=n_6) & (c7=n_6) & (c8=n_6) & (c10=n_6)) | ((c3=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c1=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c7=n_6) & (c8=n_6) & (c10=n_6)) | ((c2=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c7=n_6) & (c8=n_6) & (c10=n_6)) | ((c1=n_7) & (c2=n_7) & (c3=n_7) & (c4=n_7) & (c5=n_7) & (c7=n_7) & (c8=n_7) & (c10=n_7)) | ((c9=n_1) & (c10=n_1)) | ((c1=n_2) & (c9=n_2) & (c10=n_2)) | ((c2=n_2) & (c9=n_2) & (c10=n_2)) | ((c1=n_3) & (c2=n_3) & (c9=n_3) & (c10=n_3)) | ((c3=n_2) & (c9=n_2) & (c10=n_2)) | ((c1=n_3) & (c3=n_3) & (c9=n_3) & (c10=n_3)) | ((c2=n_3) & (c3=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c9=n_4) & (c10=n_4)) | ((c4=n_2) & (c9=n_2) & (c10=n_2)) | ((c1=n_3) & (c4=n_3) & (c9=n_3) & (c10=n_3)) | ((c2=n_3) & (c4=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c9=n_4) & (c10=n_4)) | ((c3=n_3) & (c4=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c4=n_5) & (c9=n_5) & (c10=n_5)) | ((c5=n_2) & (c9=n_2) & (c10=n_2)) | ((c1=n_3) & (c5=n_3) & (c9=n_3) & (c10=n_3)) | ((c2=n_3) & (c5=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c5=n_4) & (c9=n_4) & (c10=n_4)) | ((c3=n_3) & (c5=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c5=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_4) & (c3=n_4) & (c5=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c5=n_5) & (c9=n_5) & (c10=n_5)) | ((c4=n_3) & (c5=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c4=n_4) & (c5=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_4) & (c4=n_4) & (c5=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c5=n_5) & (c9=n_5) & (c10=n_5)) | ((c3=n_4) & (c4=n_4) & (c5=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c9=n_6) & (c10=n_6)) | ((c7=n_2) & (c9=n_2) & (c10=n_2)) | ((c1=n_3) & (c7=n_3) & (c9=n_3) & (c10=n_3)) | ((c2=n_3) & (c7=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c3=n_3) & (c7=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_4) & (c3=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c4=n_3) & (c7=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c4=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_4) & (c4=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c3=n_4) & (c4=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c4=n_6) & (c7=n_6) & (c9=n_6) & (c10=n_6)) | ((c5=n_3) & (c7=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c5=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_4) & (c5=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c5=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c3=n_4) & (c5=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c5=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_5) & (c3=n_5) & (c5=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c5=n_6) & (c7=n_6) & (c9=n_6) & (c10=n_6)) | ((c4=n_4) & (c5=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c4=n_6) & (c5=n_6) & (c7=n_6) & (c9=n_6) & (c10=n_6)) | ((c3=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c7=n_6) & (c9=n_6) & (c10=n_6)) | ((c2=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c7=n_6) & (c9=n_6) & (c10=n_6)) | ((c1=n_7) & (c2=n_7) & (c3=n_7) & (c4=n_7) & (c5=n_7) & (c7=n_7) & (c9=n_7) & (c10=n_7)) | ((c8=n_2) & (c9=n_2) & (c10=n_2)) | ((c1=n_3) & (c8=n_3) & (c9=n_3) & (c10=n_3)) | ((c2=n_3) & (c8=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c3=n_3) & (c8=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_4) & (c3=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c4=n_3) & (c8=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c4=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_4) & (c4=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c3=n_4) & (c4=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c4=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c5=n_3) & (c8=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c5=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_4) & (c5=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c5=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c3=n_4) & (c5=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c5=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_5) & (c3=n_5) & (c5=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c5=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c4=n_4) & (c5=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c4=n_5) & (c5=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_5) & (c4=n_5) & (c5=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c4=n_6) & (c5=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c3=n_5) & (c4=n_5) & (c5=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c2=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c1=n_7) & (c2=n_7) & (c3=n_7) & (c4=n_7) & (c5=n_7) & (c8=n_7) & (c9=n_7) & (c10=n_7)) | ((c7=n_3) & (c8=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c3=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_5) & (c3=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c4=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c4=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_5) & (c4=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c4=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c3=n_5) & (c4=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c3=n_6) & (c4=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c2=n_6) & (c3=n_6) & (c4=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c1=n_7) & (c2=n_7) & (c3=n_7) & (c4=n_7) & (c7=n_7) & (c8=n_7) & (c9=n_7) & (c10=n_7)) | ((c5=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c5=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c3=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c3=n_6) & (c5=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c2=n_6) & (c3=n_6) & (c5=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c1=n_7) & (c2=n_7) & (c3=n_7) & (c5=n_7) & (c7=n_7) & (c8=n_7) & (c9=n_7) & (c10=n_7)) | ((c4=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c4=n_6) & (c5=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c2=n_6) & (c4=n_6) & (c5=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c1=n_7) & (c2=n_7) & (c4=n_7) & (c5=n_7) & (c7=n_7) & (c8=n_7) & (c9=n_7) & (c10=n_7)) | ((c3=n_6) & (c4=n_6) & (c5=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c1=n_7) & (c3=n_7) & (c4=n_7) & (c5=n_7) & (c7=n_7) & (c8=n_7) & (c9=n_7) & (c10=n_7)) | ((c2=n_7) & (c3=n_7) & (c4=n_7) & (c5=n_7) & (c7=n_7) & (c8=n_7) & (c9=n_7) & (c10=n_7)) | ((c1=n_8) & (c2=n_8) & (c3=n_8) & (c4=n_8) & (c5=n_8) & (c7=n_8) & (c8=n_8) & (c9=n_8) & (c10=n_8)));
formula can7 = !((c1=n) | (c2=n) | ((c1=n_1) & (c2=n_1)) | (c3=n) | ((c1=n_1) & (c3=n_1)) | ((c2=n_1) & (c3=n_1)) | ((c1=n_2) & (c2=n_2) & (c3=n_2)) | (c4=n) | ((c1=n_1) & (c4=n_1)) | ((c2=n_1) & (c4=n_1)) | ((c1=n_2) & (c2=n_2) & (c4=n_2)) | ((c3=n_1) & (c4=n_1)) | ((c1=n_2) & (c3=n_2) & (c4=n_2)) | ((c2=n_2) & (c3=n_2) & (c4=n_2)) | ((c1=n_3) & (c2=n_3) & (c3=n_3) & (c4=n_3)) | (c5=n) | ((c1=n_1) & (c5=n_1)) | ((c2=n_1) & (c5=n_1)) | ((c1=n_2) & (c2=n_2) & (c5=n_2)) | ((c3=n_1) & (c5=n_1)) | ((c1=n_2) & (c3=n_2) & (c5=n_2)) | ((c2=n_2) & (c3=n_2) & (c5=n_2)) | ((c1=n_3) & (c2=n_3) & (c3=n_3) & (c5=n_3)) | ((c4=n_1) & (c5=n_1)) | ((c1=n_2) & (c4=n_2) & (c5=n_2)) | ((c2=n_2) & (c4=n_2) & (c5=n_2)) | ((c1=n_3) & (c2=n_3) & (c4=n_3) & (c5=n_3)) | ((c3=n_2) & (c4=n_2) & (c5=n_2)) | ((c1=n_3) & (c3=n_3) & (c4=n_3) & (c5=n_3)) | ((c2=n_3) & (c3=n_3) & (c4=n_3) & (c5=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c4=n_4) & (c5=n_4)) | (c6=n) | ((c1=n_1) & (c6=n_1)) | ((c2=n_1) & (c6=n_1)) | ((c1=n_2) & (c2=n_2) & (c6=n_2)) | ((c3=n_1) & (c6=n_1)) | ((c1=n_2) & (c3=n_2) & (c6=n_2)) | ((c2=n_2) & (c3=n_2) & (c6=n_2)) | ((c1=n_3) & (c2=n_3) & (c3=n_3) & (c6=n_3)) | ((c4=n_1) & (c6=n_1)) | ((c1=n_2) & (c4=n_2) & (c6=n_2)) | ((c2=n_2) & (c4=n_2) & (c6=n_2)) | ((c1=n_3) & (c2=n_3) & (c4=n_3) & (c6=n_3)) | ((c3=n_2) & (c4=n_2) & (c6=n_2)) | ((c1=n_3) & (c3=n_3) & (c4=n_3) & (c6=n_3)) | ((c2=n_3) & (c3=n_3) & (c4=n_3) & (c6=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c4=n_4) & (c6=n_4)) | ((c5=n_1) & (c6=n_1)) | ((c1=n_2) & (c5=n_2) & (c6=n_2)) | ((c2=n_2) & (c5=n_2) & (c6=n_2)) | ((c1=n_3) & (c2=n_3) & (c5=n_3) & (c6=n_3)) | ((c3=n_2) & (c5=n_2) & (c6=n_2)) | ((c1=n_3) & (c3=n_3) & (c5=n_3) & (c6=n_3)) | ((c2=n_3) & (c3=n_3) & (c5=n_3) & (c6=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c5=n_4) & (c6=n_4)) | ((c4=n_2) & (c5=n_2) & (c6=n_2)) | ((c1=n_3) & (c4=n_3) & (c5=n_3) & (c6=n_3)) | ((c2=n_3) & (c4=n_3) & (c5=n_3) & (c6=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4)) | ((c3=n_3) & (c4=n_3) & (c5=n_3) & (c6=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5)) | (c8=n) | ((c1=n_1) & (c8=n_1)) | ((c2=n_1) & (c8=n_1)) | ((c1=n_2) & (c2=n_2) & (c8=n_2)) | ((c3=n_1) & (c8=n_1)) | ((c1=n_2) & (c3=n_2) & (c8=n_2)) | ((c2=n_2) & (c3=n_2) & (c8=n_2)) | ((c1=n_3) & (c2=n_3) & (c3=n_3) & (c8=n_3)) | ((c4=n_1) & (c8=n_1)) | ((c1=n_2) & (c4=n_2) & (c8=n_2)) | ((c2=n_2) & (c4=n_2) & (c8=n_2)) | ((c1=n_3) & (c2=n_3) & (c4=n_3) & (c8=n_3)) | ((c3=n_2) & (c4=n_2) & (c8=n_2)) | ((c1=n_3) & (c3=n_3) & (c4=n_3) & (c8=n_3)) | ((c2=n_3) & (c3=n_3) & (c4=n_3) & (c8=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c4=n_4) & (c8=n_4)) | ((c5=n_1) & (c8=n_1)) | ((c1=n_2) & (c5=n_2) & (c8=n_2)) | ((c2=n_2) & (c5=n_2) & (c8=n_2)) | ((c1=n_3) & (c2=n_3) & (c5=n_3) & (c8=n_3)) | ((c3=n_2) & (c5=n_2) & (c8=n_2)) | ((c1=n_3) & (c3=n_3) & (c5=n_3) & (c8=n_3)) | ((c2=n_3) & (c3=n_3) & (c5=n_3) & (c8=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c5=n_4) & (c8=n_4)) | ((c4=n_2) & (c5=n_2) & (c8=n_2)) | ((c1=n_3) & (c4=n_3) & (c5=n_3) & (c8=n_3)) | ((c2=n_3) & (c4=n_3) & (c5=n_3) & (c8=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c5=n_4) & (c8=n_4)) | ((c3=n_3) & (c4=n_3) & (c5=n_3) & (c8=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c5=n_4) & (c8=n_4)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c5=n_4) & (c8=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c8=n_5)) | ((c6=n_1) & (c8=n_1)) | ((c1=n_2) & (c6=n_2) & (c8=n_2)) | ((c2=n_2) & (c6=n_2) & (c8=n_2)) | ((c1=n_3) & (c2=n_3) & (c6=n_3) & (c8=n_3)) | ((c3=n_2) & (c6=n_2) & (c8=n_2)) | ((c1=n_3) & (c3=n_3) & (c6=n_3) & (c8=n_3)) | ((c2=n_3) & (c3=n_3) & (c6=n_3) & (c8=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c6=n_4) & (c8=n_4)) | ((c4=n_2) & (c6=n_2) & (c8=n_2)) | ((c1=n_3) & (c4=n_3) & (c6=n_3) & (c8=n_3)) | ((c2=n_3) & (c4=n_3) & (c6=n_3) & (c8=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c6=n_4) & (c8=n_4)) | ((c3=n_3) & (c4=n_3) & (c6=n_3) & (c8=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c6=n_4) & (c8=n_4)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c6=n_4) & (c8=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c4=n_5) & (c6=n_5) & (c8=n_5)) | ((c5=n_2) & (c6=n_2) & (c8=n_2)) | ((c1=n_3) & (c5=n_3) & (c6=n_3) & (c8=n_3)) | ((c2=n_3) & (c5=n_3) & (c6=n_3) & (c8=n_3)) | ((c1=n_4) & (c2=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4)) | ((c3=n_3) & (c5=n_3) & (c6=n_3) & (c8=n_3)) | ((c1=n_4) & (c3=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4)) | ((c2=n_4) & (c3=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5)) | ((c4=n_3) & (c5=n_3) & (c6=n_3) & (c8=n_3)) | ((c1=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4)) | ((c2=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5)) | ((c3=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c8=n_6)) | (c9=n) | ((c1=n_1) & (c9=n_1)) | ((c2=n_1) & (c9=n_1)) | ((c1=n_2) & (c2=n_2) & (c9=n_2)) | ((c3=n_1) & (c9=n_1)) | ((c1=n_2) & (c3=n_2) & (c9=n_2)) | ((c2=n_2) & (c3=n_2) & (c9=n_2)) | ((c1=n_3) & (c2=n_3) & (c3=n_3) & (c9=n_3)) | ((c4=n_1) & (c9=n_1)) | ((c1=n_2) & (c4=n_2) & (c9=n_2)) | ((c2=n_2) & (c4=n_2) & (c9=n_2)) | ((c1=n_3) & (c2=n_3) & (c4=n_3) & (c9=n_3)) | ((c3=n_2) & (c4=n_2) & (c9=n_2)) | ((c1=n_3) & (c3=n_3) & (c4=n_3) & (c9=n_3)) | ((c2=n_3) & (c3=n_3) & (c4=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c4=n_4) & (c9=n_4)) | ((c5=n_1) & (c9=n_1)) | ((c1=n_2) & (c5=n_2) & (c9=n_2)) | ((c2=n_2) & (c5=n_2) & (c9=n_2)) | ((c1=n_3) & (c2=n_3) & (c5=n_3) & (c9=n_3)) | ((c3=n_2) & (c5=n_2) & (c9=n_2)) | ((c1=n_3) & (c3=n_3) & (c5=n_3) & (c9=n_3)) | ((c2=n_3) & (c3=n_3) & (c5=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c5=n_4) & (c9=n_4)) | ((c4=n_2) & (c5=n_2) & (c9=n_2)) | ((c1=n_3) & (c4=n_3) & (c5=n_3) & (c9=n_3)) | ((c2=n_3) & (c4=n_3) & (c5=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c5=n_4) & (c9=n_4)) | ((c3=n_3) & (c4=n_3) & (c5=n_3) & (c9=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c5=n_4) & (c9=n_4)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c5=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c9=n_5)) | ((c6=n_1) & (c9=n_1)) | ((c1=n_2) & (c6=n_2) & (c9=n_2)) | ((c2=n_2) & (c6=n_2) & (c9=n_2)) | ((c1=n_3) & (c2=n_3) & (c6=n_3) & (c9=n_3)) | ((c3=n_2) & (c6=n_2) & (c9=n_2)) | ((c1=n_3) & (c3=n_3) & (c6=n_3) & (c9=n_3)) | ((c2=n_3) & (c3=n_3) & (c6=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c6=n_4) & (c9=n_4)) | ((c4=n_2) & (c6=n_2) & (c9=n_2)) | ((c1=n_3) & (c4=n_3) & (c6=n_3) & (c9=n_3)) | ((c2=n_3) & (c4=n_3) & (c6=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c6=n_4) & (c9=n_4)) | ((c3=n_3) & (c4=n_3) & (c6=n_3) & (c9=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c6=n_4) & (c9=n_4)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c6=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c4=n_5) & (c6=n_5) & (c9=n_5)) | ((c5=n_2) & (c6=n_2) & (c9=n_2)) | ((c1=n_3) & (c5=n_3) & (c6=n_3) & (c9=n_3)) | ((c2=n_3) & (c5=n_3) & (c6=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c5=n_4) & (c6=n_4) & (c9=n_4)) | ((c3=n_3) & (c5=n_3) & (c6=n_3) & (c9=n_3)) | ((c1=n_4) & (c3=n_4) & (c5=n_4) & (c6=n_4) & (c9=n_4)) | ((c2=n_4) & (c3=n_4) & (c5=n_4) & (c6=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c5=n_5) & (c6=n_5) & (c9=n_5)) | ((c4=n_3) & (c5=n_3) & (c6=n_3) & (c9=n_3)) | ((c1=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4) & (c9=n_4)) | ((c2=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c9=n_5)) | ((c3=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4) & (c9=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c9=n_5)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c9=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c9=n_6)) | ((c8=n_1) & (c9=n_1)) | ((c1=n_2) & (c8=n_2) & (c9=n_2)) | ((c2=n_2) & (c8=n_2) & (c9=n_2)) | ((c1=n_3) & (c2=n_3) & (c8=n_3) & (c9=n_3)) | ((c3=n_2) & (c8=n_2) & (c9=n_2)) | ((c1=n_3) & (c3=n_3) & (c8=n_3) & (c9=n_3)) | ((c2=n_3) & (c3=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c8=n_4) & (c9=n_4)) | ((c4=n_2) & (c8=n_2) & (c9=n_2)) | ((c1=n_3) & (c4=n_3) & (c8=n_3) & (c9=n_3)) | ((c2=n_3) & (c4=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c8=n_4) & (c9=n_4)) | ((c3=n_3) & (c4=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c8=n_4) & (c9=n_4)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c4=n_5) & (c8=n_5) & (c9=n_5)) | ((c5=n_2) & (c8=n_2) & (c9=n_2)) | ((c1=n_3) & (c5=n_3) & (c8=n_3) & (c9=n_3)) | ((c2=n_3) & (c5=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c5=n_4) & (c8=n_4) & (c9=n_4)) | ((c3=n_3) & (c5=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c3=n_4) & (c5=n_4) & (c8=n_4) & (c9=n_4)) | ((c2=n_4) & (c3=n_4) & (c5=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c5=n_5) & (c8=n_5) & (c9=n_5)) | ((c4=n_3) & (c5=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c4=n_4) & (c5=n_4) & (c8=n_4) & (c9=n_4)) | ((c2=n_4) & (c4=n_4) & (c5=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c5=n_5) & (c8=n_5) & (c9=n_5)) | ((c3=n_4) & (c4=n_4) & (c5=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c8=n_5) & (c9=n_5)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c8=n_5) & (c9=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c8=n_6) & (c9=n_6)) | ((c6=n_2) & (c8=n_2) & (c9=n_2)) | ((c1=n_3) & (c6=n_3) & (c8=n_3) & (c9=n_3)) | ((c2=n_3) & (c6=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4)) | ((c3=n_3) & (c6=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c3=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4)) | ((c2=n_4) & (c3=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5)) | ((c4=n_3) & (c6=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c4=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4)) | ((c2=n_4) & (c4=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5)) | ((c3=n_4) & (c4=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c4=n_6) & (c6=n_6) & (c8=n_6) & (c9=n_6)) | ((c5=n_3) & (c6=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4)) | ((c2=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5)) | ((c3=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c3=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5)) | ((c2=n_5) & (c3=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c5=n_6) & (c6=n_6) & (c8=n_6) & (c9=n_6)) | ((c4=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5)) | ((c2=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5)) | ((c1=n_6) & (c2=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c8=n_6) & (c9=n_6)) | ((c3=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5)) | ((c1=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c8=n_6) & (c9=n_6)) | ((c2=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c8=n_6) & (c9=n_6)) | ((c1=n_7) & (c2=n_7) & (c3=n_7) & (c4=n_7) & (c5=n_7) & (c6=n_7) & (c8=n_7) & (c9=n_7)) | (c10=n) | ((c1=n_1) & (c10=n_1)) | ((c2=n_1) & (c10=n_1)) | ((c1=n_2) & (c2=n_2) & (c10=n_2)) | ((c3=n_1) & (c10=n_1)) | ((c1=n_2) & (c3=n_2) & (c10=n_2)) | ((c2=n_2) & (c3=n_2) & (c10=n_2)) | ((c1=n_3) & (c2=n_3) & (c3=n_3) & (c10=n_3)) | ((c4=n_1) & (c10=n_1)) | ((c1=n_2) & (c4=n_2) & (c10=n_2)) | ((c2=n_2) & (c4=n_2) & (c10=n_2)) | ((c1=n_3) & (c2=n_3) & (c4=n_3) & (c10=n_3)) | ((c3=n_2) & (c4=n_2) & (c10=n_2)) | ((c1=n_3) & (c3=n_3) & (c4=n_3) & (c10=n_3)) | ((c2=n_3) & (c3=n_3) & (c4=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c4=n_4) & (c10=n_4)) | ((c5=n_1) & (c10=n_1)) | ((c1=n_2) & (c5=n_2) & (c10=n_2)) | ((c2=n_2) & (c5=n_2) & (c10=n_2)) | ((c1=n_3) & (c2=n_3) & (c5=n_3) & (c10=n_3)) | ((c3=n_2) & (c5=n_2) & (c10=n_2)) | ((c1=n_3) & (c3=n_3) & (c5=n_3) & (c10=n_3)) | ((c2=n_3) & (c3=n_3) & (c5=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c5=n_4) & (c10=n_4)) | ((c4=n_2) & (c5=n_2) & (c10=n_2)) | ((c1=n_3) & (c4=n_3) & (c5=n_3) & (c10=n_3)) | ((c2=n_3) & (c4=n_3) & (c5=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c5=n_4) & (c10=n_4)) | ((c3=n_3) & (c4=n_3) & (c5=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c5=n_4) & (c10=n_4)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c5=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c10=n_5)) | ((c6=n_1) & (c10=n_1)) | ((c1=n_2) & (c6=n_2) & (c10=n_2)) | ((c2=n_2) & (c6=n_2) & (c10=n_2)) | ((c1=n_3) & (c2=n_3) & (c6=n_3) & (c10=n_3)) | ((c3=n_2) & (c6=n_2) & (c10=n_2)) | ((c1=n_3) & (c3=n_3) & (c6=n_3) & (c10=n_3)) | ((c2=n_3) & (c3=n_3) & (c6=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c6=n_4) & (c10=n_4)) | ((c4=n_2) & (c6=n_2) & (c10=n_2)) | ((c1=n_3) & (c4=n_3) & (c6=n_3) & (c10=n_3)) | ((c2=n_3) & (c4=n_3) & (c6=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c6=n_4) & (c10=n_4)) | ((c3=n_3) & (c4=n_3) & (c6=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c6=n_4) & (c10=n_4)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c6=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c4=n_5) & (c6=n_5) & (c10=n_5)) | ((c5=n_2) & (c6=n_2) & (c10=n_2)) | ((c1=n_3) & (c5=n_3) & (c6=n_3) & (c10=n_3)) | ((c2=n_3) & (c5=n_3) & (c6=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c5=n_4) & (c6=n_4) & (c10=n_4)) | ((c3=n_3) & (c5=n_3) & (c6=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c5=n_4) & (c6=n_4) & (c10=n_4)) | ((c2=n_4) & (c3=n_4) & (c5=n_4) & (c6=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c5=n_5) & (c6=n_5) & (c10=n_5)) | ((c4=n_3) & (c5=n_3) & (c6=n_3) & (c10=n_3)) | ((c1=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4) & (c10=n_4)) | ((c2=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c10=n_5)) | ((c3=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c10=n_5)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c10=n_6)) | ((c8=n_1) & (c10=n_1)) | ((c1=n_2) & (c8=n_2) & (c10=n_2)) | ((c2=n_2) & (c8=n_2) & (c10=n_2)) | ((c1=n_3) & (c2=n_3) & (c8=n_3) & (c10=n_3)) | ((c3=n_2) & (c8=n_2) & (c10=n_2)) | ((c1=n_3) & (c3=n_3) & (c8=n_3) & (c10=n_3)) | ((c2=n_3) & (c3=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c8=n_4) & (c10=n_4)) | ((c4=n_2) & (c8=n_2) & (c10=n_2)) | ((c1=n_3) & (c4=n_3) & (c8=n_3) & (c10=n_3)) | ((c2=n_3) & (c4=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c8=n_4) & (c10=n_4)) | ((c3=n_3) & (c4=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c8=n_4) & (c10=n_4)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c4=n_5) & (c8=n_5) & (c10=n_5)) | ((c5=n_2) & (c8=n_2) & (c10=n_2)) | ((c1=n_3) & (c5=n_3) & (c8=n_3) & (c10=n_3)) | ((c2=n_3) & (c5=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c5=n_4) & (c8=n_4) & (c10=n_4)) | ((c3=n_3) & (c5=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c5=n_4) & (c8=n_4) & (c10=n_4)) | ((c2=n_4) & (c3=n_4) & (c5=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c5=n_5) & (c8=n_5) & (c10=n_5)) | ((c4=n_3) & (c5=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c4=n_4) & (c5=n_4) & (c8=n_4) & (c10=n_4)) | ((c2=n_4) & (c4=n_4) & (c5=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c5=n_5) & (c8=n_5) & (c10=n_5)) | ((c3=n_4) & (c4=n_4) & (c5=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c8=n_5) & (c10=n_5)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c8=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c8=n_6) & (c10=n_6)) | ((c6=n_2) & (c8=n_2) & (c10=n_2)) | ((c1=n_3) & (c6=n_3) & (c8=n_3) & (c10=n_3)) | ((c2=n_3) & (c6=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c6=n_4) & (c8=n_4) & (c10=n_4)) | ((c3=n_3) & (c6=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c6=n_4) & (c8=n_4) & (c10=n_4)) | ((c2=n_4) & (c3=n_4) & (c6=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c6=n_5) & (c8=n_5) & (c10=n_5)) | ((c4=n_3) & (c6=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c4=n_4) & (c6=n_4) & (c8=n_4) & (c10=n_4)) | ((c2=n_4) & (c4=n_4) & (c6=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c6=n_5) & (c8=n_5) & (c10=n_5)) | ((c3=n_4) & (c4=n_4) & (c6=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c6=n_5) & (c8=n_5) & (c10=n_5)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c6=n_5) & (c8=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c4=n_6) & (c6=n_6) & (c8=n_6) & (c10=n_6)) | ((c5=n_3) & (c6=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4) & (c10=n_4)) | ((c2=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5) & (c10=n_5)) | ((c3=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5) & (c10=n_5)) | ((c2=n_5) & (c3=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c5=n_6) & (c6=n_6) & (c8=n_6) & (c10=n_6)) | ((c4=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5) & (c10=n_5)) | ((c2=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c8=n_6) & (c10=n_6)) | ((c3=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5) & (c10=n_5)) | ((c1=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c8=n_6) & (c10=n_6)) | ((c2=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c8=n_6) & (c10=n_6)) | ((c1=n_7) & (c2=n_7) & (c3=n_7) & (c4=n_7) & (c5=n_7) & (c6=n_7) & (c8=n_7) & (c10=n_7)) | ((c9=n_1) & (c10=n_1)) | ((c1=n_2) & (c9=n_2) & (c10=n_2)) | ((c2=n_2) & (c9=n_2) & (c10=n_2)) | ((c1=n_3) & (c2=n_3) & (c9=n_3) & (c10=n_3)) | ((c3=n_2) & (c9=n_2) & (c10=n_2)) | ((c1=n_3) & (c3=n_3) & (c9=n_3) & (c10=n_3)) | ((c2=n_3) & (c3=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c9=n_4) & (c10=n_4)) | ((c4=n_2) & (c9=n_2) & (c10=n_2)) | ((c1=n_3) & (c4=n_3) & (c9=n_3) & (c10=n_3)) | ((c2=n_3) & (c4=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c9=n_4) & (c10=n_4)) | ((c3=n_3) & (c4=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c4=n_5) & (c9=n_5) & (c10=n_5)) | ((c5=n_2) & (c9=n_2) & (c10=n_2)) | ((c1=n_3) & (c5=n_3) & (c9=n_3) & (c10=n_3)) | ((c2=n_3) & (c5=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c5=n_4) & (c9=n_4) & (c10=n_4)) | ((c3=n_3) & (c5=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c5=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_4) & (c3=n_4) & (c5=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c5=n_5) & (c9=n_5) & (c10=n_5)) | ((c4=n_3) & (c5=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c4=n_4) & (c5=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_4) & (c4=n_4) & (c5=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c5=n_5) & (c9=n_5) & (c10=n_5)) | ((c3=n_4) & (c4=n_4) & (c5=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c9=n_6) & (c10=n_6)) | ((c6=n_2) & (c9=n_2) & (c10=n_2)) | ((c1=n_3) & (c6=n_3) & (c9=n_3) & (c10=n_3)) | ((c2=n_3) & (c6=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c6=n_4) & (c9=n_4) & (c10=n_4)) | ((c3=n_3) & (c6=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c6=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_4) & (c3=n_4) & (c6=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c6=n_5) & (c9=n_5) & (c10=n_5)) | ((c4=n_3) & (c6=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c4=n_4) & (c6=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_4) & (c4=n_4) & (c6=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c6=n_5) & (c9=n_5) & (c10=n_5)) | ((c3=n_4) & (c4=n_4) & (c6=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c6=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c6=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c4=n_6) & (c6=n_6) & (c9=n_6) & (c10=n_6)) | ((c5=n_3) & (c6=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c5=n_4) & (c6=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_4) & (c5=n_4) & (c6=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c5=n_5) & (c6=n_5) & (c9=n_5) & (c10=n_5)) | ((c3=n_4) & (c5=n_4) & (c6=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c5=n_5) & (c6=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_5) & (c3=n_5) & (c5=n_5) & (c6=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c5=n_6) & (c6=n_6) & (c9=n_6) & (c10=n_6)) | ((c4=n_4) & (c5=n_4) & (c6=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c9=n_6) & (c10=n_6)) | ((c3=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c9=n_6) & (c10=n_6)) | ((c2=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c9=n_6) & (c10=n_6)) | ((c1=n_7) & (c2=n_7) & (c3=n_7) & (c4=n_7) & (c5=n_7) & (c6=n_7) & (c9=n_7) & (c10=n_7)) | ((c8=n_2) & (c9=n_2) & (c10=n_2)) | ((c1=n_3) & (c8=n_3) & (c9=n_3) & (c10=n_3)) | ((c2=n_3) & (c8=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c3=n_3) & (c8=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_4) & (c3=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c4=n_3) & (c8=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c4=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_4) & (c4=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c3=n_4) & (c4=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c4=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c5=n_3) & (c8=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c5=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_4) & (c5=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c5=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c3=n_4) & (c5=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c5=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_5) & (c3=n_5) & (c5=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c5=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c4=n_4) & (c5=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c4=n_5) & (c5=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_5) & (c4=n_5) & (c5=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c4=n_6) & (c5=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c3=n_5) & (c4=n_5) & (c5=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c2=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c1=n_7) & (c2=n_7) & (c3=n_7) & (c4=n_7) & (c5=n_7) & (c8=n_7) & (c9=n_7) & (c10=n_7)) | ((c6=n_3) & (c8=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c3=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_5) & (c3=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c6=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c4=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c4=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_5) & (c4=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c4=n_6) & (c6=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c3=n_5) & (c4=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c3=n_6) & (c4=n_6) & (c6=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c2=n_6) & (c3=n_6) & (c4=n_6) & (c6=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c1=n_7) & (c2=n_7) & (c3=n_7) & (c4=n_7) & (c6=n_7) & (c8=n_7) & (c9=n_7) & (c10=n_7)) | ((c5=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c5=n_6) & (c6=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c3=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c3=n_6) & (c5=n_6) & (c6=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c2=n_6) & (c3=n_6) & (c5=n_6) & (c6=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c1=n_7) & (c2=n_7) & (c3=n_7) & (c5=n_7) & (c6=n_7) & (c8=n_7) & (c9=n_7) & (c10=n_7)) | ((c4=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c2=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c1=n_7) & (c2=n_7) & (c4=n_7) & (c5=n_7) & (c6=n_7) & (c8=n_7) & (c9=n_7) & (c10=n_7)) | ((c3=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c8=n_6) & (c9=n_6) & (c10=n_6)) | ((c1=n_7) & (c3=n_7) & (c4=n_7) & (c5=n_7) & (c6=n_7) & (c8=n_7) & (c9=n_7) & (c10=n_7)) | ((c2=n_7) & (c3=n_7) & (c4=n_7) & (c5=n_7) & (c6=n_7) & (c8=n_7) & (c9=n_7) & (c10=n_7)) | ((c1=n_8) & (c2=n_8) & (c3=n_8) & (c4=n_8) & (c5=n_8) & (c6=n_8) & (c8=n_8) & (c9=n_8) & (c10=n_8)));
formula can8 = !((c1=n) | (c2=n) | ((c1=n_1) & (c2=n_1)) | (c3=n) | ((c1=n_1) & (c3=n_1)) | ((c2=n_1) & (c3=n_1)) | ((c1=n_2) & (c2=n_2) & (c3=n_2)) | (c4=n) | ((c1=n_1) & (c4=n_1)) | ((c2=n_1) & (c4=n_1)) | ((c1=n_2) & (c2=n_2) & (c4=n_2)) | ((c3=n_1) & (c4=n_1)) | ((c1=n_2) & (c3=n_2) & (c4=n_2)) | ((c2=n_2) & (c3=n_2) & (c4=n_2)) | ((c1=n_3) & (c2=n_3) & (c3=n_3) & (c4=n_3)) | (c5=n) | ((c1=n_1) & (c5=n_1)) | ((c2=n_1) & (c5=n_1)) | ((c1=n_2) & (c2=n_2) & (c5=n_2)) | ((c3=n_1) & (c5=n_1)) | ((c1=n_2) & (c3=n_2) & (c5=n_2)) | ((c2=n_2) & (c3=n_2) & (c5=n_2)) | ((c1=n_3) & (c2=n_3) & (c3=n_3) & (c5=n_3)) | ((c4=n_1) & (c5=n_1)) | ((c1=n_2) & (c4=n_2) & (c5=n_2)) | ((c2=n_2) & (c4=n_2) & (c5=n_2)) | ((c1=n_3) & (c2=n_3) & (c4=n_3) & (c5=n_3)) | ((c3=n_2) & (c4=n_2) & (c5=n_2)) | ((c1=n_3) & (c3=n_3) & (c4=n_3) & (c5=n_3)) | ((c2=n_3) & (c3=n_3) & (c4=n_3) & (c5=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c4=n_4) & (c5=n_4)) | (c6=n) | ((c1=n_1) & (c6=n_1)) | ((c2=n_1) & (c6=n_1)) | ((c1=n_2) & (c2=n_2) & (c6=n_2)) | ((c3=n_1) & (c6=n_1)) | ((c1=n_2) & (c3=n_2) & (c6=n_2)) | ((c2=n_2) & (c3=n_2) & (c6=n_2)) | ((c1=n_3) & (c2=n_3) & (c3=n_3) & (c6=n_3)) | ((c4=n_1) & (c6=n_1)) | ((c1=n_2) & (c4=n_2) & (c6=n_2)) | ((c2=n_2) & (c4=n_2) & (c6=n_2)) | ((c1=n_3) & (c2=n_3) & (c4=n_3) & (c6=n_3)) | ((c3=n_2) & (c4=n_2) & (c6=n_2)) | ((c1=n_3) & (c3=n_3) & (c4=n_3) & (c6=n_3)) | ((c2=n_3) & (c3=n_3) & (c4=n_3) & (c6=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c4=n_4) & (c6=n_4)) | ((c5=n_1) & (c6=n_1)) | ((c1=n_2) & (c5=n_2) & (c6=n_2)) | ((c2=n_2) & (c5=n_2) & (c6=n_2)) | ((c1=n_3) & (c2=n_3) & (c5=n_3) & (c6=n_3)) | ((c3=n_2) & (c5=n_2) & (c6=n_2)) | ((c1=n_3) & (c3=n_3) & (c5=n_3) & (c6=n_3)) | ((c2=n_3) & (c3=n_3) & (c5=n_3) & (c6=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c5=n_4) & (c6=n_4)) | ((c4=n_2) & (c5=n_2) & (c6=n_2)) | ((c1=n_3) & (c4=n_3) & (c5=n_3) & (c6=n_3)) | ((c2=n_3) & (c4=n_3) & (c5=n_3) & (c6=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4)) | ((c3=n_3) & (c4=n_3) & (c5=n_3) & (c6=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5)) | (c7=n) | ((c1=n_1) & (c7=n_1)) | ((c2=n_1) & (c7=n_1)) | ((c1=n_2) & (c2=n_2) & (c7=n_2)) | ((c3=n_1) & (c7=n_1)) | ((c1=n_2) & (c3=n_2) & (c7=n_2)) | ((c2=n_2) & (c3=n_2) & (c7=n_2)) | ((c1=n_3) & (c2=n_3) & (c3=n_3) & (c7=n_3)) | ((c4=n_1) & (c7=n_1)) | ((c1=n_2) & (c4=n_2) & (c7=n_2)) | ((c2=n_2) & (c4=n_2) & (c7=n_2)) | ((c1=n_3) & (c2=n_3) & (c4=n_3) & (c7=n_3)) | ((c3=n_2) & (c4=n_2) & (c7=n_2)) | ((c1=n_3) & (c3=n_3) & (c4=n_3) & (c7=n_3)) | ((c2=n_3) & (c3=n_3) & (c4=n_3) & (c7=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c4=n_4) & (c7=n_4)) | ((c5=n_1) & (c7=n_1)) | ((c1=n_2) & (c5=n_2) & (c7=n_2)) | ((c2=n_2) & (c5=n_2) & (c7=n_2)) | ((c1=n_3) & (c2=n_3) & (c5=n_3) & (c7=n_3)) | ((c3=n_2) & (c5=n_2) & (c7=n_2)) | ((c1=n_3) & (c3=n_3) & (c5=n_3) & (c7=n_3)) | ((c2=n_3) & (c3=n_3) & (c5=n_3) & (c7=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c5=n_4) & (c7=n_4)) | ((c4=n_2) & (c5=n_2) & (c7=n_2)) | ((c1=n_3) & (c4=n_3) & (c5=n_3) & (c7=n_3)) | ((c2=n_3) & (c4=n_3) & (c5=n_3) & (c7=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c5=n_4) & (c7=n_4)) | ((c3=n_3) & (c4=n_3) & (c5=n_3) & (c7=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c5=n_4) & (c7=n_4)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c5=n_4) & (c7=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5)) | ((c6=n_1) & (c7=n_1)) | ((c1=n_2) & (c6=n_2) & (c7=n_2)) | ((c2=n_2) & (c6=n_2) & (c7=n_2)) | ((c1=n_3) & (c2=n_3) & (c6=n_3) & (c7=n_3)) | ((c3=n_2) & (c6=n_2) & (c7=n_2)) | ((c1=n_3) & (c3=n_3) & (c6=n_3) & (c7=n_3)) | ((c2=n_3) & (c3=n_3) & (c6=n_3) & (c7=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c6=n_4) & (c7=n_4)) | ((c4=n_2) & (c6=n_2) & (c7=n_2)) | ((c1=n_3) & (c4=n_3) & (c6=n_3) & (c7=n_3)) | ((c2=n_3) & (c4=n_3) & (c6=n_3) & (c7=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c6=n_4) & (c7=n_4)) | ((c3=n_3) & (c4=n_3) & (c6=n_3) & (c7=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c6=n_4) & (c7=n_4)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c6=n_4) & (c7=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5)) | ((c5=n_2) & (c6=n_2) & (c7=n_2)) | ((c1=n_3) & (c5=n_3) & (c6=n_3) & (c7=n_3)) | ((c2=n_3) & (c5=n_3) & (c6=n_3) & (c7=n_3)) | ((c1=n_4) & (c2=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4)) | ((c3=n_3) & (c5=n_3) & (c6=n_3) & (c7=n_3)) | ((c1=n_4) & (c3=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4)) | ((c2=n_4) & (c3=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5)) | ((c4=n_3) & (c5=n_3) & (c6=n_3) & (c7=n_3)) | ((c1=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4)) | ((c2=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5)) | ((c3=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6)) | (c9=n) | ((c1=n_1) & (c9=n_1)) | ((c2=n_1) & (c9=n_1)) | ((c1=n_2) & (c2=n_2) & (c9=n_2)) | ((c3=n_1) & (c9=n_1)) | ((c1=n_2) & (c3=n_2) & (c9=n_2)) | ((c2=n_2) & (c3=n_2) & (c9=n_2)) | ((c1=n_3) & (c2=n_3) & (c3=n_3) & (c9=n_3)) | ((c4=n_1) & (c9=n_1)) | ((c1=n_2) & (c4=n_2) & (c9=n_2)) | ((c2=n_2) & (c4=n_2) & (c9=n_2)) | ((c1=n_3) & (c2=n_3) & (c4=n_3) & (c9=n_3)) | ((c3=n_2) & (c4=n_2) & (c9=n_2)) | ((c1=n_3) & (c3=n_3) & (c4=n_3) & (c9=n_3)) | ((c2=n_3) & (c3=n_3) & (c4=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c4=n_4) & (c9=n_4)) | ((c5=n_1) & (c9=n_1)) | ((c1=n_2) & (c5=n_2) & (c9=n_2)) | ((c2=n_2) & (c5=n_2) & (c9=n_2)) | ((c1=n_3) & (c2=n_3) & (c5=n_3) & (c9=n_3)) | ((c3=n_2) & (c5=n_2) & (c9=n_2)) | ((c1=n_3) & (c3=n_3) & (c5=n_3) & (c9=n_3)) | ((c2=n_3) & (c3=n_3) & (c5=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c5=n_4) & (c9=n_4)) | ((c4=n_2) & (c5=n_2) & (c9=n_2)) | ((c1=n_3) & (c4=n_3) & (c5=n_3) & (c9=n_3)) | ((c2=n_3) & (c4=n_3) & (c5=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c5=n_4) & (c9=n_4)) | ((c3=n_3) & (c4=n_3) & (c5=n_3) & (c9=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c5=n_4) & (c9=n_4)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c5=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c9=n_5)) | ((c6=n_1) & (c9=n_1)) | ((c1=n_2) & (c6=n_2) & (c9=n_2)) | ((c2=n_2) & (c6=n_2) & (c9=n_2)) | ((c1=n_3) & (c2=n_3) & (c6=n_3) & (c9=n_3)) | ((c3=n_2) & (c6=n_2) & (c9=n_2)) | ((c1=n_3) & (c3=n_3) & (c6=n_3) & (c9=n_3)) | ((c2=n_3) & (c3=n_3) & (c6=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c6=n_4) & (c9=n_4)) | ((c4=n_2) & (c6=n_2) & (c9=n_2)) | ((c1=n_3) & (c4=n_3) & (c6=n_3) & (c9=n_3)) | ((c2=n_3) & (c4=n_3) & (c6=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c6=n_4) & (c9=n_4)) | ((c3=n_3) & (c4=n_3) & (c6=n_3) & (c9=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c6=n_4) & (c9=n_4)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c6=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c4=n_5) & (c6=n_5) & (c9=n_5)) | ((c5=n_2) & (c6=n_2) & (c9=n_2)) | ((c1=n_3) & (c5=n_3) & (c6=n_3) & (c9=n_3)) | ((c2=n_3) & (c5=n_3) & (c6=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c5=n_4) & (c6=n_4) & (c9=n_4)) | ((c3=n_3) & (c5=n_3) & (c6=n_3) & (c9=n_3)) | ((c1=n_4) & (c3=n_4) & (c5=n_4) & (c6=n_4) & (c9=n_4)) | ((c2=n_4) & (c3=n_4) & (c5=n_4) & (c6=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c5=n_5) & (c6=n_5) & (c9=n_5)) | ((c4=n_3) & (c5=n_3) & (c6=n_3) & (c9=n_3)) | ((c1=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4) & (c9=n_4)) | ((c2=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c9=n_5)) | ((c3=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4) & (c9=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c9=n_5)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c9=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c9=n_6)) | ((c7=n_1) & (c9=n_1)) | ((c1=n_2) & (c7=n_2) & (c9=n_2)) | ((c2=n_2) & (c7=n_2) & (c9=n_2)) | ((c1=n_3) & (c2=n_3) & (c7=n_3) & (c9=n_3)) | ((c3=n_2) & (c7=n_2) & (c9=n_2)) | ((c1=n_3) & (c3=n_3) & (c7=n_3) & (c9=n_3)) | ((c2=n_3) & (c3=n_3) & (c7=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c7=n_4) & (c9=n_4)) | ((c4=n_2) & (c7=n_2) & (c9=n_2)) | ((c1=n_3) & (c4=n_3) & (c7=n_3) & (c9=n_3)) | ((c2=n_3) & (c4=n_3) & (c7=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c7=n_4) & (c9=n_4)) | ((c3=n_3) & (c4=n_3) & (c7=n_3) & (c9=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c7=n_4) & (c9=n_4)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c7=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c4=n_5) & (c7=n_5) & (c9=n_5)) | ((c5=n_2) & (c7=n_2) & (c9=n_2)) | ((c1=n_3) & (c5=n_3) & (c7=n_3) & (c9=n_3)) | ((c2=n_3) & (c5=n_3) & (c7=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c5=n_4) & (c7=n_4) & (c9=n_4)) | ((c3=n_3) & (c5=n_3) & (c7=n_3) & (c9=n_3)) | ((c1=n_4) & (c3=n_4) & (c5=n_4) & (c7=n_4) & (c9=n_4)) | ((c2=n_4) & (c3=n_4) & (c5=n_4) & (c7=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c5=n_5) & (c7=n_5) & (c9=n_5)) | ((c4=n_3) & (c5=n_3) & (c7=n_3) & (c9=n_3)) | ((c1=n_4) & (c4=n_4) & (c5=n_4) & (c7=n_4) & (c9=n_4)) | ((c2=n_4) & (c4=n_4) & (c5=n_4) & (c7=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c9=n_5)) | ((c3=n_4) & (c4=n_4) & (c5=n_4) & (c7=n_4) & (c9=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c9=n_5)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c9=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c7=n_6) & (c9=n_6)) | ((c6=n_2) & (c7=n_2) & (c9=n_2)) | ((c1=n_3) & (c6=n_3) & (c7=n_3) & (c9=n_3)) | ((c2=n_3) & (c6=n_3) & (c7=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4)) | ((c3=n_3) & (c6=n_3) & (c7=n_3) & (c9=n_3)) | ((c1=n_4) & (c3=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4)) | ((c2=n_4) & (c3=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5)) | ((c4=n_3) & (c6=n_3) & (c7=n_3) & (c9=n_3)) | ((c1=n_4) & (c4=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4)) | ((c2=n_4) & (c4=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5)) | ((c3=n_4) & (c4=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c4=n_6) & (c6=n_6) & (c7=n_6) & (c9=n_6)) | ((c5=n_3) & (c6=n_3) & (c7=n_3) & (c9=n_3)) | ((c1=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4)) | ((c2=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5)) | ((c3=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4)) | ((c1=n_5) & (c3=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5)) | ((c2=n_5) & (c3=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c9=n_6)) | ((c4=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4)) | ((c1=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5)) | ((c2=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5)) | ((c1=n_6) & (c2=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c9=n_6)) | ((c3=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5)) | ((c1=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c9=n_6)) | ((c2=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c9=n_6)) | ((c1=n_7) & (c2=n_7) & (c3=n_7) & (c4=n_7) & (c5=n_7) & (c6=n_7) & (c7=n_7) & (c9=n_7)) | (c10=n) | ((c1=n_1) & (c10=n_1)) | ((c2=n_1) & (c10=n_1)) | ((c1=n_2) & (c2=n_2) & (c10=n_2)) | ((c3=n_1) & (c10=n_1)) | ((c1=n_2) & (c3=n_2) & (c10=n_2)) | ((c2=n_2) & (c3=n_2) & (c10=n_2)) | ((c1=n_3) & (c2=n_3) & (c3=n_3) & (c10=n_3)) | ((c4=n_1) & (c10=n_1)) | ((c1=n_2) & (c4=n_2) & (c10=n_2)) | ((c2=n_2) & (c4=n_2) & (c10=n_2)) | ((c1=n_3) & (c2=n_3) & (c4=n_3) & (c10=n_3)) | ((c3=n_2) & (c4=n_2) & (c10=n_2)) | ((c1=n_3) & (c3=n_3) & (c4=n_3) & (c10=n_3)) | ((c2=n_3) & (c3=n_3) & (c4=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c4=n_4) & (c10=n_4)) | ((c5=n_1) & (c10=n_1)) | ((c1=n_2) & (c5=n_2) & (c10=n_2)) | ((c2=n_2) & (c5=n_2) & (c10=n_2)) | ((c1=n_3) & (c2=n_3) & (c5=n_3) & (c10=n_3)) | ((c3=n_2) & (c5=n_2) & (c10=n_2)) | ((c1=n_3) & (c3=n_3) & (c5=n_3) & (c10=n_3)) | ((c2=n_3) & (c3=n_3) & (c5=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c5=n_4) & (c10=n_4)) | ((c4=n_2) & (c5=n_2) & (c10=n_2)) | ((c1=n_3) & (c4=n_3) & (c5=n_3) & (c10=n_3)) | ((c2=n_3) & (c4=n_3) & (c5=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c5=n_4) & (c10=n_4)) | ((c3=n_3) & (c4=n_3) & (c5=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c5=n_4) & (c10=n_4)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c5=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c10=n_5)) | ((c6=n_1) & (c10=n_1)) | ((c1=n_2) & (c6=n_2) & (c10=n_2)) | ((c2=n_2) & (c6=n_2) & (c10=n_2)) | ((c1=n_3) & (c2=n_3) & (c6=n_3) & (c10=n_3)) | ((c3=n_2) & (c6=n_2) & (c10=n_2)) | ((c1=n_3) & (c3=n_3) & (c6=n_3) & (c10=n_3)) | ((c2=n_3) & (c3=n_3) & (c6=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c6=n_4) & (c10=n_4)) | ((c4=n_2) & (c6=n_2) & (c10=n_2)) | ((c1=n_3) & (c4=n_3) & (c6=n_3) & (c10=n_3)) | ((c2=n_3) & (c4=n_3) & (c6=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c6=n_4) & (c10=n_4)) | ((c3=n_3) & (c4=n_3) & (c6=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c6=n_4) & (c10=n_4)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c6=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c4=n_5) & (c6=n_5) & (c10=n_5)) | ((c5=n_2) & (c6=n_2) & (c10=n_2)) | ((c1=n_3) & (c5=n_3) & (c6=n_3) & (c10=n_3)) | ((c2=n_3) & (c5=n_3) & (c6=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c5=n_4) & (c6=n_4) & (c10=n_4)) | ((c3=n_3) & (c5=n_3) & (c6=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c5=n_4) & (c6=n_4) & (c10=n_4)) | ((c2=n_4) & (c3=n_4) & (c5=n_4) & (c6=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c5=n_5) & (c6=n_5) & (c10=n_5)) | ((c4=n_3) & (c5=n_3) & (c6=n_3) & (c10=n_3)) | ((c1=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4) & (c10=n_4)) | ((c2=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c10=n_5)) | ((c3=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c10=n_5)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c10=n_6)) | ((c7=n_1) & (c10=n_1)) | ((c1=n_2) & (c7=n_2) & (c10=n_2)) | ((c2=n_2) & (c7=n_2) & (c10=n_2)) | ((c1=n_3) & (c2=n_3) & (c7=n_3) & (c10=n_3)) | ((c3=n_2) & (c7=n_2) & (c10=n_2)) | ((c1=n_3) & (c3=n_3) & (c7=n_3) & (c10=n_3)) | ((c2=n_3) & (c3=n_3) & (c7=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c7=n_4) & (c10=n_4)) | ((c4=n_2) & (c7=n_2) & (c10=n_2)) | ((c1=n_3) & (c4=n_3) & (c7=n_3) & (c10=n_3)) | ((c2=n_3) & (c4=n_3) & (c7=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c7=n_4) & (c10=n_4)) | ((c3=n_3) & (c4=n_3) & (c7=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c7=n_4) & (c10=n_4)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c7=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c4=n_5) & (c7=n_5) & (c10=n_5)) | ((c5=n_2) & (c7=n_2) & (c10=n_2)) | ((c1=n_3) & (c5=n_3) & (c7=n_3) & (c10=n_3)) | ((c2=n_3) & (c5=n_3) & (c7=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c5=n_4) & (c7=n_4) & (c10=n_4)) | ((c3=n_3) & (c5=n_3) & (c7=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c5=n_4) & (c7=n_4) & (c10=n_4)) | ((c2=n_4) & (c3=n_4) & (c5=n_4) & (c7=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c5=n_5) & (c7=n_5) & (c10=n_5)) | ((c4=n_3) & (c5=n_3) & (c7=n_3) & (c10=n_3)) | ((c1=n_4) & (c4=n_4) & (c5=n_4) & (c7=n_4) & (c10=n_4)) | ((c2=n_4) & (c4=n_4) & (c5=n_4) & (c7=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c10=n_5)) | ((c3=n_4) & (c4=n_4) & (c5=n_4) & (c7=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c10=n_5)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c7=n_6) & (c10=n_6)) | ((c6=n_2) & (c7=n_2) & (c10=n_2)) | ((c1=n_3) & (c6=n_3) & (c7=n_3) & (c10=n_3)) | ((c2=n_3) & (c6=n_3) & (c7=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c6=n_4) & (c7=n_4) & (c10=n_4)) | ((c3=n_3) & (c6=n_3) & (c7=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c6=n_4) & (c7=n_4) & (c10=n_4)) | ((c2=n_4) & (c3=n_4) & (c6=n_4) & (c7=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c6=n_5) & (c7=n_5) & (c10=n_5)) | ((c4=n_3) & (c6=n_3) & (c7=n_3) & (c10=n_3)) | ((c1=n_4) & (c4=n_4) & (c6=n_4) & (c7=n_4) & (c10=n_4)) | ((c2=n_4) & (c4=n_4) & (c6=n_4) & (c7=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c10=n_5)) | ((c3=n_4) & (c4=n_4) & (c6=n_4) & (c7=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c10=n_5)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c4=n_6) & (c6=n_6) & (c7=n_6) & (c10=n_6)) | ((c5=n_3) & (c6=n_3) & (c7=n_3) & (c10=n_3)) | ((c1=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4) & (c10=n_4)) | ((c2=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c10=n_5)) | ((c3=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c10=n_5)) | ((c2=n_5) & (c3=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c10=n_6)) | ((c4=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4) & (c10=n_4)) | ((c1=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c10=n_5)) | ((c2=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c10=n_6)) | ((c3=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c10=n_5)) | ((c1=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c10=n_6)) | ((c2=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c10=n_6)) | ((c1=n_7) & (c2=n_7) & (c3=n_7) & (c4=n_7) & (c5=n_7) & (c6=n_7) & (c7=n_7) & (c10=n_7)) | ((c9=n_1) & (c10=n_1)) | ((c1=n_2) & (c9=n_2) & (c10=n_2)) | ((c2=n_2) & (c9=n_2) & (c10=n_2)) | ((c1=n_3) & (c2=n_3) & (c9=n_3) & (c10=n_3)) | ((c3=n_2) & (c9=n_2) & (c10=n_2)) | ((c1=n_3) & (c3=n_3) & (c9=n_3) & (c10=n_3)) | ((c2=n_3) & (c3=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c9=n_4) & (c10=n_4)) | ((c4=n_2) & (c9=n_2) & (c10=n_2)) | ((c1=n_3) & (c4=n_3) & (c9=n_3) & (c10=n_3)) | ((c2=n_3) & (c4=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c9=n_4) & (c10=n_4)) | ((c3=n_3) & (c4=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c4=n_5) & (c9=n_5) & (c10=n_5)) | ((c5=n_2) & (c9=n_2) & (c10=n_2)) | ((c1=n_3) & (c5=n_3) & (c9=n_3) & (c10=n_3)) | ((c2=n_3) & (c5=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c5=n_4) & (c9=n_4) & (c10=n_4)) | ((c3=n_3) & (c5=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c5=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_4) & (c3=n_4) & (c5=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c5=n_5) & (c9=n_5) & (c10=n_5)) | ((c4=n_3) & (c5=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c4=n_4) & (c5=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_4) & (c4=n_4) & (c5=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c5=n_5) & (c9=n_5) & (c10=n_5)) | ((c3=n_4) & (c4=n_4) & (c5=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c9=n_6) & (c10=n_6)) | ((c6=n_2) & (c9=n_2) & (c10=n_2)) | ((c1=n_3) & (c6=n_3) & (c9=n_3) & (c10=n_3)) | ((c2=n_3) & (c6=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c6=n_4) & (c9=n_4) & (c10=n_4)) | ((c3=n_3) & (c6=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c6=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_4) & (c3=n_4) & (c6=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c6=n_5) & (c9=n_5) & (c10=n_5)) | ((c4=n_3) & (c6=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c4=n_4) & (c6=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_4) & (c4=n_4) & (c6=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c6=n_5) & (c9=n_5) & (c10=n_5)) | ((c3=n_4) & (c4=n_4) & (c6=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c6=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c6=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c4=n_6) & (c6=n_6) & (c9=n_6) & (c10=n_6)) | ((c5=n_3) & (c6=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c5=n_4) & (c6=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_4) & (c5=n_4) & (c6=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c5=n_5) & (c6=n_5) & (c9=n_5) & (c10=n_5)) | ((c3=n_4) & (c5=n_4) & (c6=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c5=n_5) & (c6=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_5) & (c3=n_5) & (c5=n_5) & (c6=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c5=n_6) & (c6=n_6) & (c9=n_6) & (c10=n_6)) | ((c4=n_4) & (c5=n_4) & (c6=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c9=n_6) & (c10=n_6)) | ((c3=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c9=n_6) & (c10=n_6)) | ((c2=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c9=n_6) & (c10=n_6)) | ((c1=n_7) & (c2=n_7) & (c3=n_7) & (c4=n_7) & (c5=n_7) & (c6=n_7) & (c9=n_7) & (c10=n_7)) | ((c7=n_2) & (c9=n_2) & (c10=n_2)) | ((c1=n_3) & (c7=n_3) & (c9=n_3) & (c10=n_3)) | ((c2=n_3) & (c7=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c3=n_3) & (c7=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_4) & (c3=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c4=n_3) & (c7=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c4=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_4) & (c4=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c3=n_4) & (c4=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c4=n_6) & (c7=n_6) & (c9=n_6) & (c10=n_6)) | ((c5=n_3) & (c7=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c5=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_4) & (c5=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c5=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c3=n_4) & (c5=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c5=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_5) & (c3=n_5) & (c5=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c5=n_6) & (c7=n_6) & (c9=n_6) & (c10=n_6)) | ((c4=n_4) & (c5=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c4=n_6) & (c5=n_6) & (c7=n_6) & (c9=n_6) & (c10=n_6)) | ((c3=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c7=n_6) & (c9=n_6) & (c10=n_6)) | ((c2=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c7=n_6) & (c9=n_6) & (c10=n_6)) | ((c1=n_7) & (c2=n_7) & (c3=n_7) & (c4=n_7) & (c5=n_7) & (c7=n_7) & (c9=n_7) & (c10=n_7)) | ((c6=n_3) & (c7=n_3) & (c9=n_3) & (c10=n_3)) | ((c1=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c2=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c3=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_5) & (c3=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c6=n_6) & (c7=n_6) & (c9=n_6) & (c10=n_6)) | ((c4=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c4=n_6) & (c6=n_6) & (c7=n_6) & (c9=n_6) & (c10=n_6)) | ((c3=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c3=n_6) & (c4=n_6) & (c6=n_6) & (c7=n_6) & (c9=n_6) & (c10=n_6)) | ((c2=n_6) & (c3=n_6) & (c4=n_6) & (c6=n_6) & (c7=n_6) & (c9=n_6) & (c10=n_6)) | ((c1=n_7) & (c2=n_7) & (c3=n_7) & (c4=n_7) & (c6=n_7) & (c7=n_7) & (c9=n_7) & (c10=n_7)) | ((c5=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4) & (c10=n_4)) | ((c1=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c2=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c9=n_6) & (c10=n_6)) | ((c3=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c3=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c9=n_6) & (c10=n_6)) | ((c2=n_6) & (c3=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c9=n_6) & (c10=n_6)) | ((c1=n_7) & (c2=n_7) & (c3=n_7) & (c5=n_7) & (c6=n_7) & (c7=n_7) & (c9=n_7) & (c10=n_7)) | ((c4=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5) & (c10=n_5)) | ((c1=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c9=n_6) & (c10=n_6)) | ((c2=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c9=n_6) & (c10=n_6)) | ((c1=n_7) & (c2=n_7) & (c4=n_7) & (c5=n_7) & (c6=n_7) & (c7=n_7) & (c9=n_7) & (c10=n_7)) | ((c3=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c9=n_6) & (c10=n_6)) | ((c1=n_7) & (c3=n_7) & (c4=n_7) & (c5=n_7) & (c6=n_7) & (c7=n_7) & (c9=n_7) & (c10=n_7)) | ((c2=n_7) & (c3=n_7) & (c4=n_7) & (c5=n_7) & (c6=n_7) & (c7=n_7) & (c9=n_7) & (c10=n_7)) | ((c1=n_8) & (c2=n_8) & (c3=n_8) & (c4=n_8) & (c5=n_8) & (c6=n_8) & (c7=n_8) & (c9=n_8) & (c10=n_8)));
formula can9 = !((c1=n) | (c2=n) | ((c1=n_1) & (c2=n_1)) | (c3=n) | ((c1=n_1) & (c3=n_1)) | ((c2=n_1) & (c3=n_1)) | ((c1=n_2) & (c2=n_2) & (c3=n_2)) | (c4=n) | ((c1=n_1) & (c4=n_1)) | ((c2=n_1) & (c4=n_1)) | ((c1=n_2) & (c2=n_2) & (c4=n_2)) | ((c3=n_1) & (c4=n_1)) | ((c1=n_2) & (c3=n_2) & (c4=n_2)) | ((c2=n_2) & (c3=n_2) & (c4=n_2)) | ((c1=n_3) & (c2=n_3) & (c3=n_3) & (c4=n_3)) | (c5=n) | ((c1=n_1) & (c5=n_1)) | ((c2=n_1) & (c5=n_1)) | ((c1=n_2) & (c2=n_2) & (c5=n_2)) | ((c3=n_1) & (c5=n_1)) | ((c1=n_2) & (c3=n_2) & (c5=n_2)) | ((c2=n_2) & (c3=n_2) & (c5=n_2)) | ((c1=n_3) & (c2=n_3) & (c3=n_3) & (c5=n_3)) | ((c4=n_1) & (c5=n_1)) | ((c1=n_2) & (c4=n_2) & (c5=n_2)) | ((c2=n_2) & (c4=n_2) & (c5=n_2)) | ((c1=n_3) & (c2=n_3) & (c4=n_3) & (c5=n_3)) | ((c3=n_2) & (c4=n_2) & (c5=n_2)) | ((c1=n_3) & (c3=n_3) & (c4=n_3) & (c5=n_3)) | ((c2=n_3) & (c3=n_3) & (c4=n_3) & (c5=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c4=n_4) & (c5=n_4)) | (c6=n) | ((c1=n_1) & (c6=n_1)) | ((c2=n_1) & (c6=n_1)) | ((c1=n_2) & (c2=n_2) & (c6=n_2)) | ((c3=n_1) & (c6=n_1)) | ((c1=n_2) & (c3=n_2) & (c6=n_2)) | ((c2=n_2) & (c3=n_2) & (c6=n_2)) | ((c1=n_3) & (c2=n_3) & (c3=n_3) & (c6=n_3)) | ((c4=n_1) & (c6=n_1)) | ((c1=n_2) & (c4=n_2) & (c6=n_2)) | ((c2=n_2) & (c4=n_2) & (c6=n_2)) | ((c1=n_3) & (c2=n_3) & (c4=n_3) & (c6=n_3)) | ((c3=n_2) & (c4=n_2) & (c6=n_2)) | ((c1=n_3) & (c3=n_3) & (c4=n_3) & (c6=n_3)) | ((c2=n_3) & (c3=n_3) & (c4=n_3) & (c6=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c4=n_4) & (c6=n_4)) | ((c5=n_1) & (c6=n_1)) | ((c1=n_2) & (c5=n_2) & (c6=n_2)) | ((c2=n_2) & (c5=n_2) & (c6=n_2)) | ((c1=n_3) & (c2=n_3) & (c5=n_3) & (c6=n_3)) | ((c3=n_2) & (c5=n_2) & (c6=n_2)) | ((c1=n_3) & (c3=n_3) & (c5=n_3) & (c6=n_3)) | ((c2=n_3) & (c3=n_3) & (c5=n_3) & (c6=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c5=n_4) & (c6=n_4)) | ((c4=n_2) & (c5=n_2) & (c6=n_2)) | ((c1=n_3) & (c4=n_3) & (c5=n_3) & (c6=n_3)) | ((c2=n_3) & (c4=n_3) & (c5=n_3) & (c6=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4)) | ((c3=n_3) & (c4=n_3) & (c5=n_3) & (c6=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5)) | (c7=n) | ((c1=n_1) & (c7=n_1)) | ((c2=n_1) & (c7=n_1)) | ((c1=n_2) & (c2=n_2) & (c7=n_2)) | ((c3=n_1) & (c7=n_1)) | ((c1=n_2) & (c3=n_2) & (c7=n_2)) | ((c2=n_2) & (c3=n_2) & (c7=n_2)) | ((c1=n_3) & (c2=n_3) & (c3=n_3) & (c7=n_3)) | ((c4=n_1) & (c7=n_1)) | ((c1=n_2) & (c4=n_2) & (c7=n_2)) | ((c2=n_2) & (c4=n_2) & (c7=n_2)) | ((c1=n_3) & (c2=n_3) & (c4=n_3) & (c7=n_3)) | ((c3=n_2) & (c4=n_2) & (c7=n_2)) | ((c1=n_3) & (c3=n_3) & (c4=n_3) & (c7=n_3)) | ((c2=n_3) & (c3=n_3) & (c4=n_3) & (c7=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c4=n_4) & (c7=n_4)) | ((c5=n_1) & (c7=n_1)) | ((c1=n_2) & (c5=n_2) & (c7=n_2)) | ((c2=n_2) & (c5=n_2) & (c7=n_2)) | ((c1=n_3) & (c2=n_3) & (c5=n_3) & (c7=n_3)) | ((c3=n_2) & (c5=n_2) & (c7=n_2)) | ((c1=n_3) & (c3=n_3) & (c5=n_3) & (c7=n_3)) | ((c2=n_3) & (c3=n_3) & (c5=n_3) & (c7=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c5=n_4) & (c7=n_4)) | ((c4=n_2) & (c5=n_2) & (c7=n_2)) | ((c1=n_3) & (c4=n_3) & (c5=n_3) & (c7=n_3)) | ((c2=n_3) & (c4=n_3) & (c5=n_3) & (c7=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c5=n_4) & (c7=n_4)) | ((c3=n_3) & (c4=n_3) & (c5=n_3) & (c7=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c5=n_4) & (c7=n_4)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c5=n_4) & (c7=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5)) | ((c6=n_1) & (c7=n_1)) | ((c1=n_2) & (c6=n_2) & (c7=n_2)) | ((c2=n_2) & (c6=n_2) & (c7=n_2)) | ((c1=n_3) & (c2=n_3) & (c6=n_3) & (c7=n_3)) | ((c3=n_2) & (c6=n_2) & (c7=n_2)) | ((c1=n_3) & (c3=n_3) & (c6=n_3) & (c7=n_3)) | ((c2=n_3) & (c3=n_3) & (c6=n_3) & (c7=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c6=n_4) & (c7=n_4)) | ((c4=n_2) & (c6=n_2) & (c7=n_2)) | ((c1=n_3) & (c4=n_3) & (c6=n_3) & (c7=n_3)) | ((c2=n_3) & (c4=n_3) & (c6=n_3) & (c7=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c6=n_4) & (c7=n_4)) | ((c3=n_3) & (c4=n_3) & (c6=n_3) & (c7=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c6=n_4) & (c7=n_4)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c6=n_4) & (c7=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5)) | ((c5=n_2) & (c6=n_2) & (c7=n_2)) | ((c1=n_3) & (c5=n_3) & (c6=n_3) & (c7=n_3)) | ((c2=n_3) & (c5=n_3) & (c6=n_3) & (c7=n_3)) | ((c1=n_4) & (c2=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4)) | ((c3=n_3) & (c5=n_3) & (c6=n_3) & (c7=n_3)) | ((c1=n_4) & (c3=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4)) | ((c2=n_4) & (c3=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5)) | ((c4=n_3) & (c5=n_3) & (c6=n_3) & (c7=n_3)) | ((c1=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4)) | ((c2=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5)) | ((c3=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6)) | (c8=n) | ((c1=n_1) & (c8=n_1)) | ((c2=n_1) & (c8=n_1)) | ((c1=n_2) & (c2=n_2) & (c8=n_2)) | ((c3=n_1) & (c8=n_1)) | ((c1=n_2) & (c3=n_2) & (c8=n_2)) | ((c2=n_2) & (c3=n_2) & (c8=n_2)) | ((c1=n_3) & (c2=n_3) & (c3=n_3) & (c8=n_3)) | ((c4=n_1) & (c8=n_1)) | ((c1=n_2) & (c4=n_2) & (c8=n_2)) | ((c2=n_2) & (c4=n_2) & (c8=n_2)) | ((c1=n_3) & (c2=n_3) & (c4=n_3) & (c8=n_3)) | ((c3=n_2) & (c4=n_2) & (c8=n_2)) | ((c1=n_3) & (c3=n_3) & (c4=n_3) & (c8=n_3)) | ((c2=n_3) & (c3=n_3) & (c4=n_3) & (c8=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c4=n_4) & (c8=n_4)) | ((c5=n_1) & (c8=n_1)) | ((c1=n_2) & (c5=n_2) & (c8=n_2)) | ((c2=n_2) & (c5=n_2) & (c8=n_2)) | ((c1=n_3) & (c2=n_3) & (c5=n_3) & (c8=n_3)) | ((c3=n_2) & (c5=n_2) & (c8=n_2)) | ((c1=n_3) & (c3=n_3) & (c5=n_3) & (c8=n_3)) | ((c2=n_3) & (c3=n_3) & (c5=n_3) & (c8=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c5=n_4) & (c8=n_4)) | ((c4=n_2) & (c5=n_2) & (c8=n_2)) | ((c1=n_3) & (c4=n_3) & (c5=n_3) & (c8=n_3)) | ((c2=n_3) & (c4=n_3) & (c5=n_3) & (c8=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c5=n_4) & (c8=n_4)) | ((c3=n_3) & (c4=n_3) & (c5=n_3) & (c8=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c5=n_4) & (c8=n_4)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c5=n_4) & (c8=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c8=n_5)) | ((c6=n_1) & (c8=n_1)) | ((c1=n_2) & (c6=n_2) & (c8=n_2)) | ((c2=n_2) & (c6=n_2) & (c8=n_2)) | ((c1=n_3) & (c2=n_3) & (c6=n_3) & (c8=n_3)) | ((c3=n_2) & (c6=n_2) & (c8=n_2)) | ((c1=n_3) & (c3=n_3) & (c6=n_3) & (c8=n_3)) | ((c2=n_3) & (c3=n_3) & (c6=n_3) & (c8=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c6=n_4) & (c8=n_4)) | ((c4=n_2) & (c6=n_2) & (c8=n_2)) | ((c1=n_3) & (c4=n_3) & (c6=n_3) & (c8=n_3)) | ((c2=n_3) & (c4=n_3) & (c6=n_3) & (c8=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c6=n_4) & (c8=n_4)) | ((c3=n_3) & (c4=n_3) & (c6=n_3) & (c8=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c6=n_4) & (c8=n_4)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c6=n_4) & (c8=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c4=n_5) & (c6=n_5) & (c8=n_5)) | ((c5=n_2) & (c6=n_2) & (c8=n_2)) | ((c1=n_3) & (c5=n_3) & (c6=n_3) & (c8=n_3)) | ((c2=n_3) & (c5=n_3) & (c6=n_3) & (c8=n_3)) | ((c1=n_4) & (c2=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4)) | ((c3=n_3) & (c5=n_3) & (c6=n_3) & (c8=n_3)) | ((c1=n_4) & (c3=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4)) | ((c2=n_4) & (c3=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5)) | ((c4=n_3) & (c5=n_3) & (c6=n_3) & (c8=n_3)) | ((c1=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4)) | ((c2=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5)) | ((c3=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c8=n_6)) | ((c7=n_1) & (c8=n_1)) | ((c1=n_2) & (c7=n_2) & (c8=n_2)) | ((c2=n_2) & (c7=n_2) & (c8=n_2)) | ((c1=n_3) & (c2=n_3) & (c7=n_3) & (c8=n_3)) | ((c3=n_2) & (c7=n_2) & (c8=n_2)) | ((c1=n_3) & (c3=n_3) & (c7=n_3) & (c8=n_3)) | ((c2=n_3) & (c3=n_3) & (c7=n_3) & (c8=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c7=n_4) & (c8=n_4)) | ((c4=n_2) & (c7=n_2) & (c8=n_2)) | ((c1=n_3) & (c4=n_3) & (c7=n_3) & (c8=n_3)) | ((c2=n_3) & (c4=n_3) & (c7=n_3) & (c8=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c7=n_4) & (c8=n_4)) | ((c3=n_3) & (c4=n_3) & (c7=n_3) & (c8=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c7=n_4) & (c8=n_4)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c7=n_4) & (c8=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c4=n_5) & (c7=n_5) & (c8=n_5)) | ((c5=n_2) & (c7=n_2) & (c8=n_2)) | ((c1=n_3) & (c5=n_3) & (c7=n_3) & (c8=n_3)) | ((c2=n_3) & (c5=n_3) & (c7=n_3) & (c8=n_3)) | ((c1=n_4) & (c2=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4)) | ((c3=n_3) & (c5=n_3) & (c7=n_3) & (c8=n_3)) | ((c1=n_4) & (c3=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4)) | ((c2=n_4) & (c3=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5)) | ((c4=n_3) & (c5=n_3) & (c7=n_3) & (c8=n_3)) | ((c1=n_4) & (c4=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4)) | ((c2=n_4) & (c4=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5)) | ((c3=n_4) & (c4=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c7=n_6) & (c8=n_6)) | ((c6=n_2) & (c7=n_2) & (c8=n_2)) | ((c1=n_3) & (c6=n_3) & (c7=n_3) & (c8=n_3)) | ((c2=n_3) & (c6=n_3) & (c7=n_3) & (c8=n_3)) | ((c1=n_4) & (c2=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4)) | ((c3=n_3) & (c6=n_3) & (c7=n_3) & (c8=n_3)) | ((c1=n_4) & (c3=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4)) | ((c2=n_4) & (c3=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5)) | ((c4=n_3) & (c6=n_3) & (c7=n_3) & (c8=n_3)) | ((c1=n_4) & (c4=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4)) | ((c2=n_4) & (c4=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5)) | ((c3=n_4) & (c4=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c4=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6)) | ((c5=n_3) & (c6=n_3) & (c7=n_3) & (c8=n_3)) | ((c1=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4)) | ((c2=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4)) | ((c1=n_5) & (c2=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5)) | ((c3=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4)) | ((c1=n_5) & (c3=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5)) | ((c2=n_5) & (c3=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6)) | ((c4=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4)) | ((c1=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5)) | ((c2=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5)) | ((c1=n_6) & (c2=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6)) | ((c3=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5)) | ((c1=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6)) | ((c2=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6)) | ((c1=n_7) & (c2=n_7) & (c3=n_7) & (c4=n_7) & (c5=n_7) & (c6=n_7) & (c7=n_7) & (c8=n_7)) | (c10=n) | ((c1=n_1) & (c10=n_1)) | ((c2=n_1) & (c10=n_1)) | ((c1=n_2) & (c2=n_2) & (c10=n_2)) | ((c3=n_1) & (c10=n_1)) | ((c1=n_2) & (c3=n_2) & (c10=n_2)) | ((c2=n_2) & (c3=n_2) & (c10=n_2)) | ((c1=n_3) & (c2=n_3) & (c3=n_3) & (c10=n_3)) | ((c4=n_1) & (c10=n_1)) | ((c1=n_2) & (c4=n_2) & (c10=n_2)) | ((c2=n_2) & (c4=n_2) & (c10=n_2)) | ((c1=n_3) & (c2=n_3) & (c4=n_3) & (c10=n_3)) | ((c3=n_2) & (c4=n_2) & (c10=n_2)) | ((c1=n_3) & (c3=n_3) & (c4=n_3) & (c10=n_3)) | ((c2=n_3) & (c3=n_3) & (c4=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c4=n_4) & (c10=n_4)) | ((c5=n_1) & (c10=n_1)) | ((c1=n_2) & (c5=n_2) & (c10=n_2)) | ((c2=n_2) & (c5=n_2) & (c10=n_2)) | ((c1=n_3) & (c2=n_3) & (c5=n_3) & (c10=n_3)) | ((c3=n_2) & (c5=n_2) & (c10=n_2)) | ((c1=n_3) & (c3=n_3) & (c5=n_3) & (c10=n_3)) | ((c2=n_3) & (c3=n_3) & (c5=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c5=n_4) & (c10=n_4)) | ((c4=n_2) & (c5=n_2) & (c10=n_2)) | ((c1=n_3) & (c4=n_3) & (c5=n_3) & (c10=n_3)) | ((c2=n_3) & (c4=n_3) & (c5=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c5=n_4) & (c10=n_4)) | ((c3=n_3) & (c4=n_3) & (c5=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c5=n_4) & (c10=n_4)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c5=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c10=n_5)) | ((c6=n_1) & (c10=n_1)) | ((c1=n_2) & (c6=n_2) & (c10=n_2)) | ((c2=n_2) & (c6=n_2) & (c10=n_2)) | ((c1=n_3) & (c2=n_3) & (c6=n_3) & (c10=n_3)) | ((c3=n_2) & (c6=n_2) & (c10=n_2)) | ((c1=n_3) & (c3=n_3) & (c6=n_3) & (c10=n_3)) | ((c2=n_3) & (c3=n_3) & (c6=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c6=n_4) & (c10=n_4)) | ((c4=n_2) & (c6=n_2) & (c10=n_2)) | ((c1=n_3) & (c4=n_3) & (c6=n_3) & (c10=n_3)) | ((c2=n_3) & (c4=n_3) & (c6=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c6=n_4) & (c10=n_4)) | ((c3=n_3) & (c4=n_3) & (c6=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c6=n_4) & (c10=n_4)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c6=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c4=n_5) & (c6=n_5) & (c10=n_5)) | ((c5=n_2) & (c6=n_2) & (c10=n_2)) | ((c1=n_3) & (c5=n_3) & (c6=n_3) & (c10=n_3)) | ((c2=n_3) & (c5=n_3) & (c6=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c5=n_4) & (c6=n_4) & (c10=n_4)) | ((c3=n_3) & (c5=n_3) & (c6=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c5=n_4) & (c6=n_4) & (c10=n_4)) | ((c2=n_4) & (c3=n_4) & (c5=n_4) & (c6=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c5=n_5) & (c6=n_5) & (c10=n_5)) | ((c4=n_3) & (c5=n_3) & (c6=n_3) & (c10=n_3)) | ((c1=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4) & (c10=n_4)) | ((c2=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c10=n_5)) | ((c3=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c10=n_5)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c10=n_6)) | ((c7=n_1) & (c10=n_1)) | ((c1=n_2) & (c7=n_2) & (c10=n_2)) | ((c2=n_2) & (c7=n_2) & (c10=n_2)) | ((c1=n_3) & (c2=n_3) & (c7=n_3) & (c10=n_3)) | ((c3=n_2) & (c7=n_2) & (c10=n_2)) | ((c1=n_3) & (c3=n_3) & (c7=n_3) & (c10=n_3)) | ((c2=n_3) & (c3=n_3) & (c7=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c7=n_4) & (c10=n_4)) | ((c4=n_2) & (c7=n_2) & (c10=n_2)) | ((c1=n_3) & (c4=n_3) & (c7=n_3) & (c10=n_3)) | ((c2=n_3) & (c4=n_3) & (c7=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c7=n_4) & (c10=n_4)) | ((c3=n_3) & (c4=n_3) & (c7=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c7=n_4) & (c10=n_4)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c7=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c4=n_5) & (c7=n_5) & (c10=n_5)) | ((c5=n_2) & (c7=n_2) & (c10=n_2)) | ((c1=n_3) & (c5=n_3) & (c7=n_3) & (c10=n_3)) | ((c2=n_3) & (c5=n_3) & (c7=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c5=n_4) & (c7=n_4) & (c10=n_4)) | ((c3=n_3) & (c5=n_3) & (c7=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c5=n_4) & (c7=n_4) & (c10=n_4)) | ((c2=n_4) & (c3=n_4) & (c5=n_4) & (c7=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c5=n_5) & (c7=n_5) & (c10=n_5)) | ((c4=n_3) & (c5=n_3) & (c7=n_3) & (c10=n_3)) | ((c1=n_4) & (c4=n_4) & (c5=n_4) & (c7=n_4) & (c10=n_4)) | ((c2=n_4) & (c4=n_4) & (c5=n_4) & (c7=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c10=n_5)) | ((c3=n_4) & (c4=n_4) & (c5=n_4) & (c7=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c10=n_5)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c7=n_6) & (c10=n_6)) | ((c6=n_2) & (c7=n_2) & (c10=n_2)) | ((c1=n_3) & (c6=n_3) & (c7=n_3) & (c10=n_3)) | ((c2=n_3) & (c6=n_3) & (c7=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c6=n_4) & (c7=n_4) & (c10=n_4)) | ((c3=n_3) & (c6=n_3) & (c7=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c6=n_4) & (c7=n_4) & (c10=n_4)) | ((c2=n_4) & (c3=n_4) & (c6=n_4) & (c7=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c6=n_5) & (c7=n_5) & (c10=n_5)) | ((c4=n_3) & (c6=n_3) & (c7=n_3) & (c10=n_3)) | ((c1=n_4) & (c4=n_4) & (c6=n_4) & (c7=n_4) & (c10=n_4)) | ((c2=n_4) & (c4=n_4) & (c6=n_4) & (c7=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c10=n_5)) | ((c3=n_4) & (c4=n_4) & (c6=n_4) & (c7=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c10=n_5)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c4=n_6) & (c6=n_6) & (c7=n_6) & (c10=n_6)) | ((c5=n_3) & (c6=n_3) & (c7=n_3) & (c10=n_3)) | ((c1=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4) & (c10=n_4)) | ((c2=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c10=n_5)) | ((c3=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c10=n_5)) | ((c2=n_5) & (c3=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c10=n_6)) | ((c4=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4) & (c10=n_4)) | ((c1=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c10=n_5)) | ((c2=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c10=n_6)) | ((c3=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c10=n_5)) | ((c1=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c10=n_6)) | ((c2=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c10=n_6)) | ((c1=n_7) & (c2=n_7) & (c3=n_7) & (c4=n_7) & (c5=n_7) & (c6=n_7) & (c7=n_7) & (c10=n_7)) | ((c8=n_1) & (c10=n_1)) | ((c1=n_2) & (c8=n_2) & (c10=n_2)) | ((c2=n_2) & (c8=n_2) & (c10=n_2)) | ((c1=n_3) & (c2=n_3) & (c8=n_3) & (c10=n_3)) | ((c3=n_2) & (c8=n_2) & (c10=n_2)) | ((c1=n_3) & (c3=n_3) & (c8=n_3) & (c10=n_3)) | ((c2=n_3) & (c3=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c8=n_4) & (c10=n_4)) | ((c4=n_2) & (c8=n_2) & (c10=n_2)) | ((c1=n_3) & (c4=n_3) & (c8=n_3) & (c10=n_3)) | ((c2=n_3) & (c4=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c8=n_4) & (c10=n_4)) | ((c3=n_3) & (c4=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c8=n_4) & (c10=n_4)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c4=n_5) & (c8=n_5) & (c10=n_5)) | ((c5=n_2) & (c8=n_2) & (c10=n_2)) | ((c1=n_3) & (c5=n_3) & (c8=n_3) & (c10=n_3)) | ((c2=n_3) & (c5=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c5=n_4) & (c8=n_4) & (c10=n_4)) | ((c3=n_3) & (c5=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c5=n_4) & (c8=n_4) & (c10=n_4)) | ((c2=n_4) & (c3=n_4) & (c5=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c5=n_5) & (c8=n_5) & (c10=n_5)) | ((c4=n_3) & (c5=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c4=n_4) & (c5=n_4) & (c8=n_4) & (c10=n_4)) | ((c2=n_4) & (c4=n_4) & (c5=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c5=n_5) & (c8=n_5) & (c10=n_5)) | ((c3=n_4) & (c4=n_4) & (c5=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c8=n_5) & (c10=n_5)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c8=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c8=n_6) & (c10=n_6)) | ((c6=n_2) & (c8=n_2) & (c10=n_2)) | ((c1=n_3) & (c6=n_3) & (c8=n_3) & (c10=n_3)) | ((c2=n_3) & (c6=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c6=n_4) & (c8=n_4) & (c10=n_4)) | ((c3=n_3) & (c6=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c6=n_4) & (c8=n_4) & (c10=n_4)) | ((c2=n_4) & (c3=n_4) & (c6=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c6=n_5) & (c8=n_5) & (c10=n_5)) | ((c4=n_3) & (c6=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c4=n_4) & (c6=n_4) & (c8=n_4) & (c10=n_4)) | ((c2=n_4) & (c4=n_4) & (c6=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c6=n_5) & (c8=n_5) & (c10=n_5)) | ((c3=n_4) & (c4=n_4) & (c6=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c6=n_5) & (c8=n_5) & (c10=n_5)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c6=n_5) & (c8=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c4=n_6) & (c6=n_6) & (c8=n_6) & (c10=n_6)) | ((c5=n_3) & (c6=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4) & (c10=n_4)) | ((c2=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5) & (c10=n_5)) | ((c3=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5) & (c10=n_5)) | ((c2=n_5) & (c3=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c5=n_6) & (c6=n_6) & (c8=n_6) & (c10=n_6)) | ((c4=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5) & (c10=n_5)) | ((c2=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c8=n_6) & (c10=n_6)) | ((c3=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5) & (c10=n_5)) | ((c1=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c8=n_6) & (c10=n_6)) | ((c2=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c8=n_6) & (c10=n_6)) | ((c1=n_7) & (c2=n_7) & (c3=n_7) & (c4=n_7) & (c5=n_7) & (c6=n_7) & (c8=n_7) & (c10=n_7)) | ((c7=n_2) & (c8=n_2) & (c10=n_2)) | ((c1=n_3) & (c7=n_3) & (c8=n_3) & (c10=n_3)) | ((c2=n_3) & (c7=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c2=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c3=n_3) & (c7=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c3=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c2=n_4) & (c3=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c4=n_3) & (c7=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c4=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c2=n_4) & (c4=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c3=n_4) & (c4=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c4=n_6) & (c7=n_6) & (c8=n_6) & (c10=n_6)) | ((c5=n_3) & (c7=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c2=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c3=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c2=n_5) & (c3=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c5=n_6) & (c7=n_6) & (c8=n_6) & (c10=n_6)) | ((c4=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c2=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c4=n_6) & (c5=n_6) & (c7=n_6) & (c8=n_6) & (c10=n_6)) | ((c3=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c1=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c7=n_6) & (c8=n_6) & (c10=n_6)) | ((c2=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c7=n_6) & (c8=n_6) & (c10=n_6)) | ((c1=n_7) & (c2=n_7) & (c3=n_7) & (c4=n_7) & (c5=n_7) & (c7=n_7) & (c8=n_7) & (c10=n_7)) | ((c6=n_3) & (c7=n_3) & (c8=n_3) & (c10=n_3)) | ((c1=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c2=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c2=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c3=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c3=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c2=n_5) & (c3=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c10=n_6)) | ((c4=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c2=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c4=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c10=n_6)) | ((c3=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c1=n_6) & (c3=n_6) & (c4=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c10=n_6)) | ((c2=n_6) & (c3=n_6) & (c4=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c10=n_6)) | ((c1=n_7) & (c2=n_7) & (c3=n_7) & (c4=n_7) & (c6=n_7) & (c7=n_7) & (c8=n_7) & (c10=n_7)) | ((c5=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4) & (c10=n_4)) | ((c1=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c2=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c1=n_6) & (c2=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c10=n_6)) | ((c3=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c1=n_6) & (c3=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c10=n_6)) | ((c2=n_6) & (c3=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c10=n_6)) | ((c1=n_7) & (c2=n_7) & (c3=n_7) & (c5=n_7) & (c6=n_7) & (c7=n_7) & (c8=n_7) & (c10=n_7)) | ((c4=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c10=n_5)) | ((c1=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c10=n_6)) | ((c2=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c10=n_6)) | ((c1=n_7) & (c2=n_7) & (c4=n_7) & (c5=n_7) & (c6=n_7) & (c7=n_7) & (c8=n_7) & (c10=n_7)) | ((c3=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c10=n_6)) | ((c1=n_7) & (c3=n_7) & (c4=n_7) & (c5=n_7) & (c6=n_7) & (c7=n_7) & (c8=n_7) & (c10=n_7)) | ((c2=n_7) & (c3=n_7) & (c4=n_7) & (c5=n_7) & (c6=n_7) & (c7=n_7) & (c8=n_7) & (c10=n_7)) | ((c1=n_8) & (c2=n_8) & (c3=n_8) & (c4=n_8) & (c5=n_8) & (c6=n_8) & (c7=n_8) & (c8=n_8) & (c10=n_8)));
formula can10 = !((c1=n) | (c2=n) | ((c1=n_1) & (c2=n_1)) | (c3=n) | ((c1=n_1) & (c3=n_1)) | ((c2=n_1) & (c3=n_1)) | ((c1=n_2) & (c2=n_2) & (c3=n_2)) | (c4=n) | ((c1=n_1) & (c4=n_1)) | ((c2=n_1) & (c4=n_1)) | ((c1=n_2) & (c2=n_2) & (c4=n_2)) | ((c3=n_1) & (c4=n_1)) | ((c1=n_2) & (c3=n_2) & (c4=n_2)) | ((c2=n_2) & (c3=n_2) & (c4=n_2)) | ((c1=n_3) & (c2=n_3) & (c3=n_3) & (c4=n_3)) | (c5=n) | ((c1=n_1) & (c5=n_1)) | ((c2=n_1) & (c5=n_1)) | ((c1=n_2) & (c2=n_2) & (c5=n_2)) | ((c3=n_1) & (c5=n_1)) | ((c1=n_2) & (c3=n_2) & (c5=n_2)) | ((c2=n_2) & (c3=n_2) & (c5=n_2)) | ((c1=n_3) & (c2=n_3) & (c3=n_3) & (c5=n_3)) | ((c4=n_1) & (c5=n_1)) | ((c1=n_2) & (c4=n_2) & (c5=n_2)) | ((c2=n_2) & (c4=n_2) & (c5=n_2)) | ((c1=n_3) & (c2=n_3) & (c4=n_3) & (c5=n_3)) | ((c3=n_2) & (c4=n_2) & (c5=n_2)) | ((c1=n_3) & (c3=n_3) & (c4=n_3) & (c5=n_3)) | ((c2=n_3) & (c3=n_3) & (c4=n_3) & (c5=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c4=n_4) & (c5=n_4)) | (c6=n) | ((c1=n_1) & (c6=n_1)) | ((c2=n_1) & (c6=n_1)) | ((c1=n_2) & (c2=n_2) & (c6=n_2)) | ((c3=n_1) & (c6=n_1)) | ((c1=n_2) & (c3=n_2) & (c6=n_2)) | ((c2=n_2) & (c3=n_2) & (c6=n_2)) | ((c1=n_3) & (c2=n_3) & (c3=n_3) & (c6=n_3)) | ((c4=n_1) & (c6=n_1)) | ((c1=n_2) & (c4=n_2) & (c6=n_2)) | ((c2=n_2) & (c4=n_2) & (c6=n_2)) | ((c1=n_3) & (c2=n_3) & (c4=n_3) & (c6=n_3)) | ((c3=n_2) & (c4=n_2) & (c6=n_2)) | ((c1=n_3) & (c3=n_3) & (c4=n_3) & (c6=n_3)) | ((c2=n_3) & (c3=n_3) & (c4=n_3) & (c6=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c4=n_4) & (c6=n_4)) | ((c5=n_1) & (c6=n_1)) | ((c1=n_2) & (c5=n_2) & (c6=n_2)) | ((c2=n_2) & (c5=n_2) & (c6=n_2)) | ((c1=n_3) & (c2=n_3) & (c5=n_3) & (c6=n_3)) | ((c3=n_2) & (c5=n_2) & (c6=n_2)) | ((c1=n_3) & (c3=n_3) & (c5=n_3) & (c6=n_3)) | ((c2=n_3) & (c3=n_3) & (c5=n_3) & (c6=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c5=n_4) & (c6=n_4)) | ((c4=n_2) & (c5=n_2) & (c6=n_2)) | ((c1=n_3) & (c4=n_3) & (c5=n_3) & (c6=n_3)) | ((c2=n_3) & (c4=n_3) & (c5=n_3) & (c6=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4)) | ((c3=n_3) & (c4=n_3) & (c5=n_3) & (c6=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5)) | (c7=n) | ((c1=n_1) & (c7=n_1)) | ((c2=n_1) & (c7=n_1)) | ((c1=n_2) & (c2=n_2) & (c7=n_2)) | ((c3=n_1) & (c7=n_1)) | ((c1=n_2) & (c3=n_2) & (c7=n_2)) | ((c2=n_2) & (c3=n_2) & (c7=n_2)) | ((c1=n_3) & (c2=n_3) & (c3=n_3) & (c7=n_3)) | ((c4=n_1) & (c7=n_1)) | ((c1=n_2) & (c4=n_2) & (c7=n_2)) | ((c2=n_2) & (c4=n_2) & (c7=n_2)) | ((c1=n_3) & (c2=n_3) & (c4=n_3) & (c7=n_3)) | ((c3=n_2) & (c4=n_2) & (c7=n_2)) | ((c1=n_3) & (c3=n_3) & (c4=n_3) & (c7=n_3)) | ((c2=n_3) & (c3=n_3) & (c4=n_3) & (c7=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c4=n_4) & (c7=n_4)) | ((c5=n_1) & (c7=n_1)) | ((c1=n_2) & (c5=n_2) & (c7=n_2)) | ((c2=n_2) & (c5=n_2) & (c7=n_2)) | ((c1=n_3) & (c2=n_3) & (c5=n_3) & (c7=n_3)) | ((c3=n_2) & (c5=n_2) & (c7=n_2)) | ((c1=n_3) & (c3=n_3) & (c5=n_3) & (c7=n_3)) | ((c2=n_3) & (c3=n_3) & (c5=n_3) & (c7=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c5=n_4) & (c7=n_4)) | ((c4=n_2) & (c5=n_2) & (c7=n_2)) | ((c1=n_3) & (c4=n_3) & (c5=n_3) & (c7=n_3)) | ((c2=n_3) & (c4=n_3) & (c5=n_3) & (c7=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c5=n_4) & (c7=n_4)) | ((c3=n_3) & (c4=n_3) & (c5=n_3) & (c7=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c5=n_4) & (c7=n_4)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c5=n_4) & (c7=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5)) | ((c6=n_1) & (c7=n_1)) | ((c1=n_2) & (c6=n_2) & (c7=n_2)) | ((c2=n_2) & (c6=n_2) & (c7=n_2)) | ((c1=n_3) & (c2=n_3) & (c6=n_3) & (c7=n_3)) | ((c3=n_2) & (c6=n_2) & (c7=n_2)) | ((c1=n_3) & (c3=n_3) & (c6=n_3) & (c7=n_3)) | ((c2=n_3) & (c3=n_3) & (c6=n_3) & (c7=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c6=n_4) & (c7=n_4)) | ((c4=n_2) & (c6=n_2) & (c7=n_2)) | ((c1=n_3) & (c4=n_3) & (c6=n_3) & (c7=n_3)) | ((c2=n_3) & (c4=n_3) & (c6=n_3) & (c7=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c6=n_4) & (c7=n_4)) | ((c3=n_3) & (c4=n_3) & (c6=n_3) & (c7=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c6=n_4) & (c7=n_4)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c6=n_4) & (c7=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5)) | ((c5=n_2) & (c6=n_2) & (c7=n_2)) | ((c1=n_3) & (c5=n_3) & (c6=n_3) & (c7=n_3)) | ((c2=n_3) & (c5=n_3) & (c6=n_3) & (c7=n_3)) | ((c1=n_4) & (c2=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4)) | ((c3=n_3) & (c5=n_3) & (c6=n_3) & (c7=n_3)) | ((c1=n_4) & (c3=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4)) | ((c2=n_4) & (c3=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5)) | ((c4=n_3) & (c5=n_3) & (c6=n_3) & (c7=n_3)) | ((c1=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4)) | ((c2=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5)) | ((c3=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6)) | (c8=n) | ((c1=n_1) & (c8=n_1)) | ((c2=n_1) & (c8=n_1)) | ((c1=n_2) & (c2=n_2) & (c8=n_2)) | ((c3=n_1) & (c8=n_1)) | ((c1=n_2) & (c3=n_2) & (c8=n_2)) | ((c2=n_2) & (c3=n_2) & (c8=n_2)) | ((c1=n_3) & (c2=n_3) & (c3=n_3) & (c8=n_3)) | ((c4=n_1) & (c8=n_1)) | ((c1=n_2) & (c4=n_2) & (c8=n_2)) | ((c2=n_2) & (c4=n_2) & (c8=n_2)) | ((c1=n_3) & (c2=n_3) & (c4=n_3) & (c8=n_3)) | ((c3=n_2) & (c4=n_2) & (c8=n_2)) | ((c1=n_3) & (c3=n_3) & (c4=n_3) & (c8=n_3)) | ((c2=n_3) & (c3=n_3) & (c4=n_3) & (c8=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c4=n_4) & (c8=n_4)) | ((c5=n_1) & (c8=n_1)) | ((c1=n_2) & (c5=n_2) & (c8=n_2)) | ((c2=n_2) & (c5=n_2) & (c8=n_2)) | ((c1=n_3) & (c2=n_3) & (c5=n_3) & (c8=n_3)) | ((c3=n_2) & (c5=n_2) & (c8=n_2)) | ((c1=n_3) & (c3=n_3) & (c5=n_3) & (c8=n_3)) | ((c2=n_3) & (c3=n_3) & (c5=n_3) & (c8=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c5=n_4) & (c8=n_4)) | ((c4=n_2) & (c5=n_2) & (c8=n_2)) | ((c1=n_3) & (c4=n_3) & (c5=n_3) & (c8=n_3)) | ((c2=n_3) & (c4=n_3) & (c5=n_3) & (c8=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c5=n_4) & (c8=n_4)) | ((c3=n_3) & (c4=n_3) & (c5=n_3) & (c8=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c5=n_4) & (c8=n_4)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c5=n_4) & (c8=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c8=n_5)) | ((c6=n_1) & (c8=n_1)) | ((c1=n_2) & (c6=n_2) & (c8=n_2)) | ((c2=n_2) & (c6=n_2) & (c8=n_2)) | ((c1=n_3) & (c2=n_3) & (c6=n_3) & (c8=n_3)) | ((c3=n_2) & (c6=n_2) & (c8=n_2)) | ((c1=n_3) & (c3=n_3) & (c6=n_3) & (c8=n_3)) | ((c2=n_3) & (c3=n_3) & (c6=n_3) & (c8=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c6=n_4) & (c8=n_4)) | ((c4=n_2) & (c6=n_2) & (c8=n_2)) | ((c1=n_3) & (c4=n_3) & (c6=n_3) & (c8=n_3)) | ((c2=n_3) & (c4=n_3) & (c6=n_3) & (c8=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c6=n_4) & (c8=n_4)) | ((c3=n_3) & (c4=n_3) & (c6=n_3) & (c8=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c6=n_4) & (c8=n_4)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c6=n_4) & (c8=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c4=n_5) & (c6=n_5) & (c8=n_5)) | ((c5=n_2) & (c6=n_2) & (c8=n_2)) | ((c1=n_3) & (c5=n_3) & (c6=n_3) & (c8=n_3)) | ((c2=n_3) & (c5=n_3) & (c6=n_3) & (c8=n_3)) | ((c1=n_4) & (c2=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4)) | ((c3=n_3) & (c5=n_3) & (c6=n_3) & (c8=n_3)) | ((c1=n_4) & (c3=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4)) | ((c2=n_4) & (c3=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5)) | ((c4=n_3) & (c5=n_3) & (c6=n_3) & (c8=n_3)) | ((c1=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4)) | ((c2=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5)) | ((c3=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c8=n_6)) | ((c7=n_1) & (c8=n_1)) | ((c1=n_2) & (c7=n_2) & (c8=n_2)) | ((c2=n_2) & (c7=n_2) & (c8=n_2)) | ((c1=n_3) & (c2=n_3) & (c7=n_3) & (c8=n_3)) | ((c3=n_2) & (c7=n_2) & (c8=n_2)) | ((c1=n_3) & (c3=n_3) & (c7=n_3) & (c8=n_3)) | ((c2=n_3) & (c3=n_3) & (c7=n_3) & (c8=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c7=n_4) & (c8=n_4)) | ((c4=n_2) & (c7=n_2) & (c8=n_2)) | ((c1=n_3) & (c4=n_3) & (c7=n_3) & (c8=n_3)) | ((c2=n_3) & (c4=n_3) & (c7=n_3) & (c8=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c7=n_4) & (c8=n_4)) | ((c3=n_3) & (c4=n_3) & (c7=n_3) & (c8=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c7=n_4) & (c8=n_4)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c7=n_4) & (c8=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c4=n_5) & (c7=n_5) & (c8=n_5)) | ((c5=n_2) & (c7=n_2) & (c8=n_2)) | ((c1=n_3) & (c5=n_3) & (c7=n_3) & (c8=n_3)) | ((c2=n_3) & (c5=n_3) & (c7=n_3) & (c8=n_3)) | ((c1=n_4) & (c2=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4)) | ((c3=n_3) & (c5=n_3) & (c7=n_3) & (c8=n_3)) | ((c1=n_4) & (c3=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4)) | ((c2=n_4) & (c3=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5)) | ((c4=n_3) & (c5=n_3) & (c7=n_3) & (c8=n_3)) | ((c1=n_4) & (c4=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4)) | ((c2=n_4) & (c4=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5)) | ((c3=n_4) & (c4=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c7=n_6) & (c8=n_6)) | ((c6=n_2) & (c7=n_2) & (c8=n_2)) | ((c1=n_3) & (c6=n_3) & (c7=n_3) & (c8=n_3)) | ((c2=n_3) & (c6=n_3) & (c7=n_3) & (c8=n_3)) | ((c1=n_4) & (c2=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4)) | ((c3=n_3) & (c6=n_3) & (c7=n_3) & (c8=n_3)) | ((c1=n_4) & (c3=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4)) | ((c2=n_4) & (c3=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5)) | ((c4=n_3) & (c6=n_3) & (c7=n_3) & (c8=n_3)) | ((c1=n_4) & (c4=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4)) | ((c2=n_4) & (c4=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5)) | ((c3=n_4) & (c4=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c4=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6)) | ((c5=n_3) & (c6=n_3) & (c7=n_3) & (c8=n_3)) | ((c1=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4)) | ((c2=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4)) | ((c1=n_5) & (c2=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5)) | ((c3=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4)) | ((c1=n_5) & (c3=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5)) | ((c2=n_5) & (c3=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6)) | ((c4=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4)) | ((c1=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5)) | ((c2=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5)) | ((c1=n_6) & (c2=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6)) | ((c3=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5)) | ((c1=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6)) | ((c2=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6)) | ((c1=n_7) & (c2=n_7) & (c3=n_7) & (c4=n_7) & (c5=n_7) & (c6=n_7) & (c7=n_7) & (c8=n_7)) | (c9=n) | ((c1=n_1) & (c9=n_1)) | ((c2=n_1) & (c9=n_1)) | ((c1=n_2) & (c2=n_2) & (c9=n_2)) | ((c3=n_1) & (c9=n_1)) | ((c1=n_2) & (c3=n_2) & (c9=n_2)) | ((c2=n_2) & (c3=n_2) & (c9=n_2)) | ((c1=n_3) & (c2=n_3) & (c3=n_3) & (c9=n_3)) | ((c4=n_1) & (c9=n_1)) | ((c1=n_2) & (c4=n_2) & (c9=n_2)) | ((c2=n_2) & (c4=n_2) & (c9=n_2)) | ((c1=n_3) & (c2=n_3) & (c4=n_3) & (c9=n_3)) | ((c3=n_2) & (c4=n_2) & (c9=n_2)) | ((c1=n_3) & (c3=n_3) & (c4=n_3) & (c9=n_3)) | ((c2=n_3) & (c3=n_3) & (c4=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c4=n_4) & (c9=n_4)) | ((c5=n_1) & (c9=n_1)) | ((c1=n_2) & (c5=n_2) & (c9=n_2)) | ((c2=n_2) & (c5=n_2) & (c9=n_2)) | ((c1=n_3) & (c2=n_3) & (c5=n_3) & (c9=n_3)) | ((c3=n_2) & (c5=n_2) & (c9=n_2)) | ((c1=n_3) & (c3=n_3) & (c5=n_3) & (c9=n_3)) | ((c2=n_3) & (c3=n_3) & (c5=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c5=n_4) & (c9=n_4)) | ((c4=n_2) & (c5=n_2) & (c9=n_2)) | ((c1=n_3) & (c4=n_3) & (c5=n_3) & (c9=n_3)) | ((c2=n_3) & (c4=n_3) & (c5=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c5=n_4) & (c9=n_4)) | ((c3=n_3) & (c4=n_3) & (c5=n_3) & (c9=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c5=n_4) & (c9=n_4)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c5=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c9=n_5)) | ((c6=n_1) & (c9=n_1)) | ((c1=n_2) & (c6=n_2) & (c9=n_2)) | ((c2=n_2) & (c6=n_2) & (c9=n_2)) | ((c1=n_3) & (c2=n_3) & (c6=n_3) & (c9=n_3)) | ((c3=n_2) & (c6=n_2) & (c9=n_2)) | ((c1=n_3) & (c3=n_3) & (c6=n_3) & (c9=n_3)) | ((c2=n_3) & (c3=n_3) & (c6=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c6=n_4) & (c9=n_4)) | ((c4=n_2) & (c6=n_2) & (c9=n_2)) | ((c1=n_3) & (c4=n_3) & (c6=n_3) & (c9=n_3)) | ((c2=n_3) & (c4=n_3) & (c6=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c6=n_4) & (c9=n_4)) | ((c3=n_3) & (c4=n_3) & (c6=n_3) & (c9=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c6=n_4) & (c9=n_4)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c6=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c4=n_5) & (c6=n_5) & (c9=n_5)) | ((c5=n_2) & (c6=n_2) & (c9=n_2)) | ((c1=n_3) & (c5=n_3) & (c6=n_3) & (c9=n_3)) | ((c2=n_3) & (c5=n_3) & (c6=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c5=n_4) & (c6=n_4) & (c9=n_4)) | ((c3=n_3) & (c5=n_3) & (c6=n_3) & (c9=n_3)) | ((c1=n_4) & (c3=n_4) & (c5=n_4) & (c6=n_4) & (c9=n_4)) | ((c2=n_4) & (c3=n_4) & (c5=n_4) & (c6=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c5=n_5) & (c6=n_5) & (c9=n_5)) | ((c4=n_3) & (c5=n_3) & (c6=n_3) & (c9=n_3)) | ((c1=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4) & (c9=n_4)) | ((c2=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c9=n_5)) | ((c3=n_4) & (c4=n_4) & (c5=n_4) & (c6=n_4) & (c9=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c9=n_5)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c9=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c9=n_6)) | ((c7=n_1) & (c9=n_1)) | ((c1=n_2) & (c7=n_2) & (c9=n_2)) | ((c2=n_2) & (c7=n_2) & (c9=n_2)) | ((c1=n_3) & (c2=n_3) & (c7=n_3) & (c9=n_3)) | ((c3=n_2) & (c7=n_2) & (c9=n_2)) | ((c1=n_3) & (c3=n_3) & (c7=n_3) & (c9=n_3)) | ((c2=n_3) & (c3=n_3) & (c7=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c7=n_4) & (c9=n_4)) | ((c4=n_2) & (c7=n_2) & (c9=n_2)) | ((c1=n_3) & (c4=n_3) & (c7=n_3) & (c9=n_3)) | ((c2=n_3) & (c4=n_3) & (c7=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c7=n_4) & (c9=n_4)) | ((c3=n_3) & (c4=n_3) & (c7=n_3) & (c9=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c7=n_4) & (c9=n_4)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c7=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c4=n_5) & (c7=n_5) & (c9=n_5)) | ((c5=n_2) & (c7=n_2) & (c9=n_2)) | ((c1=n_3) & (c5=n_3) & (c7=n_3) & (c9=n_3)) | ((c2=n_3) & (c5=n_3) & (c7=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c5=n_4) & (c7=n_4) & (c9=n_4)) | ((c3=n_3) & (c5=n_3) & (c7=n_3) & (c9=n_3)) | ((c1=n_4) & (c3=n_4) & (c5=n_4) & (c7=n_4) & (c9=n_4)) | ((c2=n_4) & (c3=n_4) & (c5=n_4) & (c7=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c5=n_5) & (c7=n_5) & (c9=n_5)) | ((c4=n_3) & (c5=n_3) & (c7=n_3) & (c9=n_3)) | ((c1=n_4) & (c4=n_4) & (c5=n_4) & (c7=n_4) & (c9=n_4)) | ((c2=n_4) & (c4=n_4) & (c5=n_4) & (c7=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c9=n_5)) | ((c3=n_4) & (c4=n_4) & (c5=n_4) & (c7=n_4) & (c9=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c9=n_5)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c9=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c7=n_6) & (c9=n_6)) | ((c6=n_2) & (c7=n_2) & (c9=n_2)) | ((c1=n_3) & (c6=n_3) & (c7=n_3) & (c9=n_3)) | ((c2=n_3) & (c6=n_3) & (c7=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4)) | ((c3=n_3) & (c6=n_3) & (c7=n_3) & (c9=n_3)) | ((c1=n_4) & (c3=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4)) | ((c2=n_4) & (c3=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5)) | ((c4=n_3) & (c6=n_3) & (c7=n_3) & (c9=n_3)) | ((c1=n_4) & (c4=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4)) | ((c2=n_4) & (c4=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5)) | ((c3=n_4) & (c4=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c4=n_6) & (c6=n_6) & (c7=n_6) & (c9=n_6)) | ((c5=n_3) & (c6=n_3) & (c7=n_3) & (c9=n_3)) | ((c1=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4)) | ((c2=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5)) | ((c3=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4)) | ((c1=n_5) & (c3=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5)) | ((c2=n_5) & (c3=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c9=n_6)) | ((c4=n_4) & (c5=n_4) & (c6=n_4) & (c7=n_4) & (c9=n_4)) | ((c1=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5)) | ((c2=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5)) | ((c1=n_6) & (c2=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c9=n_6)) | ((c3=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c9=n_5)) | ((c1=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c9=n_6)) | ((c2=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c9=n_6)) | ((c1=n_7) & (c2=n_7) & (c3=n_7) & (c4=n_7) & (c5=n_7) & (c6=n_7) & (c7=n_7) & (c9=n_7)) | ((c8=n_1) & (c9=n_1)) | ((c1=n_2) & (c8=n_2) & (c9=n_2)) | ((c2=n_2) & (c8=n_2) & (c9=n_2)) | ((c1=n_3) & (c2=n_3) & (c8=n_3) & (c9=n_3)) | ((c3=n_2) & (c8=n_2) & (c9=n_2)) | ((c1=n_3) & (c3=n_3) & (c8=n_3) & (c9=n_3)) | ((c2=n_3) & (c3=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c3=n_4) & (c8=n_4) & (c9=n_4)) | ((c4=n_2) & (c8=n_2) & (c9=n_2)) | ((c1=n_3) & (c4=n_3) & (c8=n_3) & (c9=n_3)) | ((c2=n_3) & (c4=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c4=n_4) & (c8=n_4) & (c9=n_4)) | ((c3=n_3) & (c4=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c3=n_4) & (c4=n_4) & (c8=n_4) & (c9=n_4)) | ((c2=n_4) & (c3=n_4) & (c4=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c4=n_5) & (c8=n_5) & (c9=n_5)) | ((c5=n_2) & (c8=n_2) & (c9=n_2)) | ((c1=n_3) & (c5=n_3) & (c8=n_3) & (c9=n_3)) | ((c2=n_3) & (c5=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c5=n_4) & (c8=n_4) & (c9=n_4)) | ((c3=n_3) & (c5=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c3=n_4) & (c5=n_4) & (c8=n_4) & (c9=n_4)) | ((c2=n_4) & (c3=n_4) & (c5=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c5=n_5) & (c8=n_5) & (c9=n_5)) | ((c4=n_3) & (c5=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c4=n_4) & (c5=n_4) & (c8=n_4) & (c9=n_4)) | ((c2=n_4) & (c4=n_4) & (c5=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c5=n_5) & (c8=n_5) & (c9=n_5)) | ((c3=n_4) & (c4=n_4) & (c5=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c8=n_5) & (c9=n_5)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c5=n_5) & (c8=n_5) & (c9=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c8=n_6) & (c9=n_6)) | ((c6=n_2) & (c8=n_2) & (c9=n_2)) | ((c1=n_3) & (c6=n_3) & (c8=n_3) & (c9=n_3)) | ((c2=n_3) & (c6=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4)) | ((c3=n_3) & (c6=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c3=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4)) | ((c2=n_4) & (c3=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5)) | ((c4=n_3) & (c6=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c4=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4)) | ((c2=n_4) & (c4=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5)) | ((c3=n_4) & (c4=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c4=n_6) & (c6=n_6) & (c8=n_6) & (c9=n_6)) | ((c5=n_3) & (c6=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4)) | ((c2=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5)) | ((c3=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c3=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5)) | ((c2=n_5) & (c3=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c5=n_6) & (c6=n_6) & (c8=n_6) & (c9=n_6)) | ((c4=n_4) & (c5=n_4) & (c6=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5)) | ((c2=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5)) | ((c1=n_6) & (c2=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c8=n_6) & (c9=n_6)) | ((c3=n_5) & (c4=n_5) & (c5=n_5) & (c6=n_5) & (c8=n_5) & (c9=n_5)) | ((c1=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c8=n_6) & (c9=n_6)) | ((c2=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c8=n_6) & (c9=n_6)) | ((c1=n_7) & (c2=n_7) & (c3=n_7) & (c4=n_7) & (c5=n_7) & (c6=n_7) & (c8=n_7) & (c9=n_7)) | ((c7=n_2) & (c8=n_2) & (c9=n_2)) | ((c1=n_3) & (c7=n_3) & (c8=n_3) & (c9=n_3)) | ((c2=n_3) & (c7=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c2=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c3=n_3) & (c7=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c3=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c2=n_4) & (c3=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c3=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c4=n_3) & (c7=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c4=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c2=n_4) & (c4=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c4=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c3=n_4) & (c4=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c3=n_5) & (c4=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c2=n_5) & (c3=n_5) & (c4=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c4=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6)) | ((c5=n_3) & (c7=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c2=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c3=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c3=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c2=n_5) & (c3=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c5=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6)) | ((c4=n_4) & (c5=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c2=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c1=n_6) & (c2=n_6) & (c4=n_6) & (c5=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6)) | ((c3=n_5) & (c4=n_5) & (c5=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c1=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6)) | ((c2=n_6) & (c3=n_6) & (c4=n_6) & (c5=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6)) | ((c1=n_7) & (c2=n_7) & (c3=n_7) & (c4=n_7) & (c5=n_7) & (c7=n_7) & (c8=n_7) & (c9=n_7)) | ((c6=n_3) & (c7=n_3) & (c8=n_3) & (c9=n_3)) | ((c1=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c2=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c2=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c3=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c3=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c2=n_5) & (c3=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c1=n_6) & (c2=n_6) & (c3=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6)) | ((c4=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c2=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c1=n_6) & (c2=n_6) & (c4=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6)) | ((c3=n_5) & (c4=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c1=n_6) & (c3=n_6) & (c4=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6)) | ((c2=n_6) & (c3=n_6) & (c4=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6)) | ((c1=n_7) & (c2=n_7) & (c3=n_7) & (c4=n_7) & (c6=n_7) & (c7=n_7) & (c8=n_7) & (c9=n_7)) | ((c5=n_4) & (c6=n_4) & (c7=n_4) & (c8=n_4) & (c9=n_4)) | ((c1=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c2=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c1=n_6) & (c2=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6)) | ((c3=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c1=n_6) & (c3=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6)) | ((c2=n_6) & (c3=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6)) | ((c1=n_7) & (c2=n_7) & (c3=n_7) & (c5=n_7) & (c6=n_7) & (c7=n_7) & (c8=n_7) & (c9=n_7)) | ((c4=n_5) & (c5=n_5) & (c6=n_5) & (c7=n_5) & (c8=n_5) & (c9=n_5)) | ((c1=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6)) | ((c2=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6)) | ((c1=n_7) & (c2=n_7) & (c4=n_7) & (c5=n_7) & (c6=n_7) & (c7=n_7) & (c8=n_7) & (c9=n_7)) | ((c3=n_6) & (c4=n_6) & (c5=n_6) & (c6=n_6) & (c7=n_6) & (c8=n_6) & (c9=n_6)) | ((c1=n_7) & (c3=n_7) & (c4=n_7) & (c5=n_7) & (c6=n_7) & (c7=n_7) & (c8=n_7) & (c9=n_7)) | ((c2=n_7) & (c3=n_7) & (c4=n_7) & (c5=n_7) & (c6=n_7) & (c7=n_7) & (c8=n_7) & (c9=n_7)) | ((c1=n_8) & (c2=n_8) & (c3=n_8) & (c4=n_8) & (c5=n_8) & (c6=n_8) & (c7=n_8) & (c8=n_8) & (c9=n_8)));
formula count1 = (p1!=13) & (p1!=0);
formula ncount1 = (p1=13) | (p1=0);
formula count2 = (p2!=13) & (p2!=0);
formula ncount2 = (p2=13) | (p2=0);
formula count3 = (p3!=13) & (p3!=0);
formula ncount3 = (p3=13) | (p3=0);
formula count4 = (p4!=13) & (p4!=0);
formula ncount4 = (p4=13) | (p4=0);
formula count5 = (p5!=13) & (p5!=0);
formula ncount5 = (p5=13) | (p5=0);
formula count6 = (p6!=13) & (p6!=0);
formula ncount6 = (p6=13) | (p6=0);
formula count7 = (p7!=13) & (p7!=0);
formula ncount7 = (p7=13) | (p7=0);
formula count8 = (p8!=13) & (p8!=0);
formula ncount8 = (p8=13) | (p8=0);
formula count9 = (p9!=13) & (p9!=0);
formula ncount9 = (p9=13) | (p9=0);
formula count10 = (p10!=13) & (p10!=0);
formula ncount10 = (p10=13) | (p10=0);

module counter

c1 : [0..n];
c2 : [0..n];
c3 : [0..n];
c4 : [0..n];
c5 : [0..n];
c6 : [0..n];
c7 : [0..n];
c8 : [0..n];
c9 : [0..n];
c10 : [0..n];
	[s1] can1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c1'=0);
	[s1] can1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c1'=0) & (c2'=c2+1);
	[s1] can1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c1'=0) & (c3'=c3+1);
	[s1] can1  & count2  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1);
	[s1] can1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c1'=0) & (c4'=c4+1);
	[s1] can1  & count2  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c4'=c4+1);
	[s1] can1  & ncount2  & count3  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c1'=0) & (c3'=c3+1) & (c4'=c4+1);
	[s1] can1  & count2  & count3  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1);
	[s1] can1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c1'=0) & (c5'=c5+1);
	[s1] can1  & count2  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c5'=c5+1);
	[s1] can1  & ncount2  & count3  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c1'=0) & (c3'=c3+1) & (c5'=c5+1);
	[s1] can1  & count2  & count3  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1);
	[s1] can1  & ncount2  & ncount3  & count4  & count5  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c1'=0) & (c4'=c4+1) & (c5'=c5+1);
	[s1] can1  & count2  & ncount3  & count4  & count5  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1);
	[s1] can1  & ncount2  & count3  & count4  & count5  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c1'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1);
	[s1] can1  & count2  & count3  & count4  & count5  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1);
	[s1] can1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c1'=0) & (c6'=c6+1);
	[s1] can1  & count2  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c6'=c6+1);
	[s1] can1  & ncount2  & count3  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c1'=0) & (c3'=c3+1) & (c6'=c6+1);
	[s1] can1  & count2  & count3  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1);
	[s1] can1  & ncount2  & ncount3  & count4  & ncount5  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c1'=0) & (c4'=c4+1) & (c6'=c6+1);
	[s1] can1  & count2  & ncount3  & count4  & ncount5  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1);
	[s1] can1  & ncount2  & count3  & count4  & ncount5  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c1'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1);
	[s1] can1  & count2  & count3  & count4  & ncount5  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1);
	[s1] can1  & ncount2  & ncount3  & ncount4  & count5  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c1'=0) & (c5'=c5+1) & (c6'=c6+1);
	[s1] can1  & count2  & ncount3  & ncount4  & count5  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1);
	[s1] can1  & ncount2  & count3  & ncount4  & count5  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c1'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1);
	[s1] can1  & count2  & count3  & ncount4  & count5  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1);
	[s1] can1  & ncount2  & ncount3  & count4  & count5  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c1'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1);
	[s1] can1  & count2  & ncount3  & count4  & count5  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1);
	[s1] can1  & ncount2  & count3  & count4  & count5  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c1'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1);
	[s1] can1  & count2  & count3  & count4  & count5  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1);
	[s1] can1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c1'=0) & (c7'=c7+1);
	[s1] can1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c7'=c7+1);
	[s1] can1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c1'=0) & (c3'=c3+1) & (c7'=c7+1);
	[s1] can1  & count2  & count3  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1);
	[s1] can1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c1'=0) & (c4'=c4+1) & (c7'=c7+1);
	[s1] can1  & count2  & ncount3  & count4  & ncount5  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1);
	[s1] can1  & ncount2  & count3  & count4  & ncount5  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c1'=0) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1);
	[s1] can1  & count2  & count3  & count4  & ncount5  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1);
	[s1] can1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c1'=0) & (c5'=c5+1) & (c7'=c7+1);
	[s1] can1  & count2  & ncount3  & ncount4  & count5  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1);
	[s1] can1  & ncount2  & count3  & ncount4  & count5  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c1'=0) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1);
	[s1] can1  & count2  & count3  & ncount4  & count5  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1);
	[s1] can1  & ncount2  & ncount3  & count4  & count5  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c1'=0) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1);
	[s1] can1  & count2  & ncount3  & count4  & count5  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1);
	[s1] can1  & ncount2  & count3  & count4  & count5  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c1'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1);
	[s1] can1  & count2  & count3  & count4  & count5  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1);
	[s1] can1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c1'=0) & (c6'=c6+1) & (c7'=c7+1);
	[s1] can1  & count2  & ncount3  & ncount4  & ncount5  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1);
	[s1] can1  & ncount2  & count3  & ncount4  & ncount5  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c1'=0) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1);
	[s1] can1  & count2  & count3  & ncount4  & ncount5  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1);
	[s1] can1  & ncount2  & ncount3  & count4  & ncount5  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c1'=0) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1);
	[s1] can1  & count2  & ncount3  & count4  & ncount5  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1);
	[s1] can1  & ncount2  & count3  & count4  & ncount5  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c1'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1);
	[s1] can1  & count2  & count3  & count4  & ncount5  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1);
	[s1] can1  & ncount2  & ncount3  & ncount4  & count5  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c1'=0) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s1] can1  & count2  & ncount3  & ncount4  & count5  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s1] can1  & ncount2  & count3  & ncount4  & count5  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c1'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s1] can1  & count2  & count3  & ncount4  & count5  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s1] can1  & ncount2  & ncount3  & count4  & count5  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c1'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s1] can1  & count2  & ncount3  & count4  & count5  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s1] can1  & ncount2  & count3  & count4  & count5  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c1'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s1] can1  & count2  & count3  & count4  & count5  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s1] can1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c1'=0) & (c8'=c8+1);
	[s1] can1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c8'=c8+1);
	[s1] can1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c1'=0) & (c3'=c3+1) & (c8'=c8+1);
	[s1] can1  & count2  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c8'=c8+1);
	[s1] can1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c1'=0) & (c4'=c4+1) & (c8'=c8+1);
	[s1] can1  & count2  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c4'=c4+1) & (c8'=c8+1);
	[s1] can1  & ncount2  & count3  & count4  & ncount5  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c1'=0) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1);
	[s1] can1  & count2  & count3  & count4  & ncount5  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1);
	[s1] can1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c1'=0) & (c5'=c5+1) & (c8'=c8+1);
	[s1] can1  & count2  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c5'=c5+1) & (c8'=c8+1);
	[s1] can1  & ncount2  & count3  & ncount4  & count5  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c1'=0) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1);
	[s1] can1  & count2  & count3  & ncount4  & count5  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1);
	[s1] can1  & ncount2  & ncount3  & count4  & count5  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c1'=0) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1);
	[s1] can1  & count2  & ncount3  & count4  & count5  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1);
	[s1] can1  & ncount2  & count3  & count4  & count5  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c1'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1);
	[s1] can1  & count2  & count3  & count4  & count5  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1);
	[s1] can1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c1'=0) & (c6'=c6+1) & (c8'=c8+1);
	[s1] can1  & count2  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c6'=c6+1) & (c8'=c8+1);
	[s1] can1  & ncount2  & count3  & ncount4  & ncount5  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c1'=0) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1);
	[s1] can1  & count2  & count3  & ncount4  & ncount5  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1);
	[s1] can1  & ncount2  & ncount3  & count4  & ncount5  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c1'=0) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1);
	[s1] can1  & count2  & ncount3  & count4  & ncount5  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1);
	[s1] can1  & ncount2  & count3  & count4  & ncount5  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c1'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1);
	[s1] can1  & count2  & count3  & count4  & ncount5  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1);
	[s1] can1  & ncount2  & ncount3  & ncount4  & count5  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c1'=0) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s1] can1  & count2  & ncount3  & ncount4  & count5  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s1] can1  & ncount2  & count3  & ncount4  & count5  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c1'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s1] can1  & count2  & count3  & ncount4  & count5  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s1] can1  & ncount2  & ncount3  & count4  & count5  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c1'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s1] can1  & count2  & ncount3  & count4  & count5  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s1] can1  & ncount2  & count3  & count4  & count5  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c1'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s1] can1  & count2  & count3  & count4  & count5  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s1] can1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c1'=0) & (c7'=c7+1) & (c8'=c8+1);
	[s1] can1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c7'=c7+1) & (c8'=c8+1);
	[s1] can1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c1'=0) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1);
	[s1] can1  & count2  & count3  & ncount4  & ncount5  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1);
	[s1] can1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c1'=0) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1);
	[s1] can1  & count2  & ncount3  & count4  & ncount5  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1);
	[s1] can1  & ncount2  & count3  & count4  & ncount5  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c1'=0) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1);
	[s1] can1  & count2  & count3  & count4  & ncount5  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1);
	[s1] can1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c1'=0) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s1] can1  & count2  & ncount3  & ncount4  & count5  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s1] can1  & ncount2  & count3  & ncount4  & count5  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c1'=0) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s1] can1  & count2  & count3  & ncount4  & count5  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s1] can1  & ncount2  & ncount3  & count4  & count5  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c1'=0) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s1] can1  & count2  & ncount3  & count4  & count5  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s1] can1  & ncount2  & count3  & count4  & count5  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c1'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s1] can1  & count2  & count3  & count4  & count5  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s1] can1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & count7  & count8  & ncount9  & ncount10  -> (c1'=0) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s1] can1  & count2  & ncount3  & ncount4  & ncount5  & count6  & count7  & count8  & ncount9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s1] can1  & ncount2  & count3  & ncount4  & ncount5  & count6  & count7  & count8  & ncount9  & ncount10  -> (c1'=0) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s1] can1  & count2  & count3  & ncount4  & ncount5  & count6  & count7  & count8  & ncount9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s1] can1  & ncount2  & ncount3  & count4  & ncount5  & count6  & count7  & count8  & ncount9  & ncount10  -> (c1'=0) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s1] can1  & count2  & ncount3  & count4  & ncount5  & count6  & count7  & count8  & ncount9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s1] can1  & ncount2  & count3  & count4  & ncount5  & count6  & count7  & count8  & ncount9  & ncount10  -> (c1'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s1] can1  & count2  & count3  & count4  & ncount5  & count6  & count7  & count8  & ncount9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s1] can1  & ncount2  & ncount3  & ncount4  & count5  & count6  & count7  & count8  & ncount9  & ncount10  -> (c1'=0) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s1] can1  & count2  & ncount3  & ncount4  & count5  & count6  & count7  & count8  & ncount9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s1] can1  & ncount2  & count3  & ncount4  & count5  & count6  & count7  & count8  & ncount9  & ncount10  -> (c1'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s1] can1  & count2  & count3  & ncount4  & count5  & count6  & count7  & count8  & ncount9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s1] can1  & ncount2  & ncount3  & count4  & count5  & count6  & count7  & count8  & ncount9  & ncount10  -> (c1'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s1] can1  & count2  & ncount3  & count4  & count5  & count6  & count7  & count8  & ncount9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s1] can1  & ncount2  & count3  & count4  & count5  & count6  & count7  & count8  & ncount9  & ncount10  -> (c1'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s1] can1  & count2  & count3  & count4  & count5  & count6  & count7  & count8  & ncount9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s1] can1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c1'=0) & (c9'=c9+1);
	[s1] can1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c9'=c9+1);
	[s1] can1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c1'=0) & (c3'=c3+1) & (c9'=c9+1);
	[s1] can1  & count2  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c9'=c9+1);
	[s1] can1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c1'=0) & (c4'=c4+1) & (c9'=c9+1);
	[s1] can1  & count2  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c4'=c4+1) & (c9'=c9+1);
	[s1] can1  & ncount2  & count3  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c1'=0) & (c3'=c3+1) & (c4'=c4+1) & (c9'=c9+1);
	[s1] can1  & count2  & count3  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c9'=c9+1);
	[s1] can1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c1'=0) & (c5'=c5+1) & (c9'=c9+1);
	[s1] can1  & count2  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c5'=c5+1) & (c9'=c9+1);
	[s1] can1  & ncount2  & count3  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c1'=0) & (c3'=c3+1) & (c5'=c5+1) & (c9'=c9+1);
	[s1] can1  & count2  & count3  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c9'=c9+1);
	[s1] can1  & ncount2  & ncount3  & count4  & count5  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c1'=0) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1);
	[s1] can1  & count2  & ncount3  & count4  & count5  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1);
	[s1] can1  & ncount2  & count3  & count4  & count5  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c1'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1);
	[s1] can1  & count2  & count3  & count4  & count5  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1);
	[s1] can1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c1'=0) & (c6'=c6+1) & (c9'=c9+1);
	[s1] can1  & count2  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c6'=c6+1) & (c9'=c9+1);
	[s1] can1  & ncount2  & count3  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c1'=0) & (c3'=c3+1) & (c6'=c6+1) & (c9'=c9+1);
	[s1] can1  & count2  & count3  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c9'=c9+1);
	[s1] can1  & ncount2  & ncount3  & count4  & ncount5  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c1'=0) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1);
	[s1] can1  & count2  & ncount3  & count4  & ncount5  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1);
	[s1] can1  & ncount2  & count3  & count4  & ncount5  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c1'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1);
	[s1] can1  & count2  & count3  & count4  & ncount5  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1);
	[s1] can1  & ncount2  & ncount3  & ncount4  & count5  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c1'=0) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s1] can1  & count2  & ncount3  & ncount4  & count5  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s1] can1  & ncount2  & count3  & ncount4  & count5  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c1'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s1] can1  & count2  & count3  & ncount4  & count5  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s1] can1  & ncount2  & ncount3  & count4  & count5  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c1'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s1] can1  & count2  & ncount3  & count4  & count5  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s1] can1  & ncount2  & count3  & count4  & count5  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c1'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s1] can1  & count2  & count3  & count4  & count5  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s1] can1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c1'=0) & (c7'=c7+1) & (c9'=c9+1);
	[s1] can1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c7'=c7+1) & (c9'=c9+1);
	[s1] can1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c1'=0) & (c3'=c3+1) & (c7'=c7+1) & (c9'=c9+1);
	[s1] can1  & count2  & count3  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1) & (c9'=c9+1);
	[s1] can1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c1'=0) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1);
	[s1] can1  & count2  & ncount3  & count4  & ncount5  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1);
	[s1] can1  & ncount2  & count3  & count4  & ncount5  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c1'=0) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1);
	[s1] can1  & count2  & count3  & count4  & ncount5  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1);
	[s1] can1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c1'=0) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s1] can1  & count2  & ncount3  & ncount4  & count5  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s1] can1  & ncount2  & count3  & ncount4  & count5  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c1'=0) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s1] can1  & count2  & count3  & ncount4  & count5  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s1] can1  & ncount2  & ncount3  & count4  & count5  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c1'=0) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s1] can1  & count2  & ncount3  & count4  & count5  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s1] can1  & ncount2  & count3  & count4  & count5  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c1'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s1] can1  & count2  & count3  & count4  & count5  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s1] can1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & count7  & ncount8  & count9  & ncount10  -> (c1'=0) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s1] can1  & count2  & ncount3  & ncount4  & ncount5  & count6  & count7  & ncount8  & count9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s1] can1  & ncount2  & count3  & ncount4  & ncount5  & count6  & count7  & ncount8  & count9  & ncount10  -> (c1'=0) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s1] can1  & count2  & count3  & ncount4  & ncount5  & count6  & count7  & ncount8  & count9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s1] can1  & ncount2  & ncount3  & count4  & ncount5  & count6  & count7  & ncount8  & count9  & ncount10  -> (c1'=0) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s1] can1  & count2  & ncount3  & count4  & ncount5  & count6  & count7  & ncount8  & count9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s1] can1  & ncount2  & count3  & count4  & ncount5  & count6  & count7  & ncount8  & count9  & ncount10  -> (c1'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s1] can1  & count2  & count3  & count4  & ncount5  & count6  & count7  & ncount8  & count9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s1] can1  & ncount2  & ncount3  & ncount4  & count5  & count6  & count7  & ncount8  & count9  & ncount10  -> (c1'=0) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s1] can1  & count2  & ncount3  & ncount4  & count5  & count6  & count7  & ncount8  & count9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s1] can1  & ncount2  & count3  & ncount4  & count5  & count6  & count7  & ncount8  & count9  & ncount10  -> (c1'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s1] can1  & count2  & count3  & ncount4  & count5  & count6  & count7  & ncount8  & count9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s1] can1  & ncount2  & ncount3  & count4  & count5  & count6  & count7  & ncount8  & count9  & ncount10  -> (c1'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s1] can1  & count2  & ncount3  & count4  & count5  & count6  & count7  & ncount8  & count9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s1] can1  & ncount2  & count3  & count4  & count5  & count6  & count7  & ncount8  & count9  & ncount10  -> (c1'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s1] can1  & count2  & count3  & count4  & count5  & count6  & count7  & ncount8  & count9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s1] can1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c1'=0) & (c8'=c8+1) & (c9'=c9+1);
	[s1] can1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c8'=c8+1) & (c9'=c9+1);
	[s1] can1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c1'=0) & (c3'=c3+1) & (c8'=c8+1) & (c9'=c9+1);
	[s1] can1  & count2  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c8'=c8+1) & (c9'=c9+1);
	[s1] can1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c1'=0) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1);
	[s1] can1  & count2  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1);
	[s1] can1  & ncount2  & count3  & count4  & ncount5  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c1'=0) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1);
	[s1] can1  & count2  & count3  & count4  & ncount5  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1);
	[s1] can1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c1'=0) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s1] can1  & count2  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s1] can1  & ncount2  & count3  & ncount4  & count5  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c1'=0) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s1] can1  & count2  & count3  & ncount4  & count5  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s1] can1  & ncount2  & ncount3  & count4  & count5  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c1'=0) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s1] can1  & count2  & ncount3  & count4  & count5  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s1] can1  & ncount2  & count3  & count4  & count5  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c1'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s1] can1  & count2  & count3  & count4  & count5  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s1] can1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & count8  & count9  & ncount10  -> (c1'=0) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s1] can1  & count2  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & count8  & count9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s1] can1  & ncount2  & count3  & ncount4  & ncount5  & count6  & ncount7  & count8  & count9  & ncount10  -> (c1'=0) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s1] can1  & count2  & count3  & ncount4  & ncount5  & count6  & ncount7  & count8  & count9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s1] can1  & ncount2  & ncount3  & count4  & ncount5  & count6  & ncount7  & count8  & count9  & ncount10  -> (c1'=0) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s1] can1  & count2  & ncount3  & count4  & ncount5  & count6  & ncount7  & count8  & count9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s1] can1  & ncount2  & count3  & count4  & ncount5  & count6  & ncount7  & count8  & count9  & ncount10  -> (c1'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s1] can1  & count2  & count3  & count4  & ncount5  & count6  & ncount7  & count8  & count9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s1] can1  & ncount2  & ncount3  & ncount4  & count5  & count6  & ncount7  & count8  & count9  & ncount10  -> (c1'=0) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s1] can1  & count2  & ncount3  & ncount4  & count5  & count6  & ncount7  & count8  & count9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s1] can1  & ncount2  & count3  & ncount4  & count5  & count6  & ncount7  & count8  & count9  & ncount10  -> (c1'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s1] can1  & count2  & count3  & ncount4  & count5  & count6  & ncount7  & count8  & count9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s1] can1  & ncount2  & ncount3  & count4  & count5  & count6  & ncount7  & count8  & count9  & ncount10  -> (c1'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s1] can1  & count2  & ncount3  & count4  & count5  & count6  & ncount7  & count8  & count9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s1] can1  & ncount2  & count3  & count4  & count5  & count6  & ncount7  & count8  & count9  & ncount10  -> (c1'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s1] can1  & count2  & count3  & count4  & count5  & count6  & ncount7  & count8  & count9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s1] can1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & count8  & count9  & ncount10  -> (c1'=0) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s1] can1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & count8  & count9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s1] can1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & count7  & count8  & count9  & ncount10  -> (c1'=0) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s1] can1  & count2  & count3  & ncount4  & ncount5  & ncount6  & count7  & count8  & count9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s1] can1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & count7  & count8  & count9  & ncount10  -> (c1'=0) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s1] can1  & count2  & ncount3  & count4  & ncount5  & ncount6  & count7  & count8  & count9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s1] can1  & ncount2  & count3  & count4  & ncount5  & ncount6  & count7  & count8  & count9  & ncount10  -> (c1'=0) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s1] can1  & count2  & count3  & count4  & ncount5  & ncount6  & count7  & count8  & count9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s1] can1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & count7  & count8  & count9  & ncount10  -> (c1'=0) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s1] can1  & count2  & ncount3  & ncount4  & count5  & ncount6  & count7  & count8  & count9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s1] can1  & ncount2  & count3  & ncount4  & count5  & ncount6  & count7  & count8  & count9  & ncount10  -> (c1'=0) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s1] can1  & count2  & count3  & ncount4  & count5  & ncount6  & count7  & count8  & count9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s1] can1  & ncount2  & ncount3  & count4  & count5  & ncount6  & count7  & count8  & count9  & ncount10  -> (c1'=0) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s1] can1  & count2  & ncount3  & count4  & count5  & ncount6  & count7  & count8  & count9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s1] can1  & ncount2  & count3  & count4  & count5  & ncount6  & count7  & count8  & count9  & ncount10  -> (c1'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s1] can1  & count2  & count3  & count4  & count5  & ncount6  & count7  & count8  & count9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s1] can1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & count7  & count8  & count9  & ncount10  -> (c1'=0) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s1] can1  & count2  & ncount3  & ncount4  & ncount5  & count6  & count7  & count8  & count9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s1] can1  & ncount2  & count3  & ncount4  & ncount5  & count6  & count7  & count8  & count9  & ncount10  -> (c1'=0) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s1] can1  & count2  & count3  & ncount4  & ncount5  & count6  & count7  & count8  & count9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s1] can1  & ncount2  & ncount3  & count4  & ncount5  & count6  & count7  & count8  & count9  & ncount10  -> (c1'=0) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s1] can1  & count2  & ncount3  & count4  & ncount5  & count6  & count7  & count8  & count9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s1] can1  & ncount2  & count3  & count4  & ncount5  & count6  & count7  & count8  & count9  & ncount10  -> (c1'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s1] can1  & count2  & count3  & count4  & ncount5  & count6  & count7  & count8  & count9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s1] can1  & ncount2  & ncount3  & ncount4  & count5  & count6  & count7  & count8  & count9  & ncount10  -> (c1'=0) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s1] can1  & count2  & ncount3  & ncount4  & count5  & count6  & count7  & count8  & count9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s1] can1  & ncount2  & count3  & ncount4  & count5  & count6  & count7  & count8  & count9  & ncount10  -> (c1'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s1] can1  & count2  & count3  & ncount4  & count5  & count6  & count7  & count8  & count9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s1] can1  & ncount2  & ncount3  & count4  & count5  & count6  & count7  & count8  & count9  & ncount10  -> (c1'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s1] can1  & count2  & ncount3  & count4  & count5  & count6  & count7  & count8  & count9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s1] can1  & ncount2  & count3  & count4  & count5  & count6  & count7  & count8  & count9  & ncount10  -> (c1'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s1] can1  & count2  & count3  & count4  & count5  & count6  & count7  & count8  & count9  & ncount10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s1] can1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c1'=0) & (c10'=c10+1);
	[s1] can1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c1'=0) & (c2'=c2+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c1'=0) & (c3'=c3+1) & (c10'=c10+1);
	[s1] can1  & count2  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c1'=0) & (c4'=c4+1) & (c10'=c10+1);
	[s1] can1  & count2  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c1'=0) & (c2'=c2+1) & (c4'=c4+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & count3  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c1'=0) & (c3'=c3+1) & (c4'=c4+1) & (c10'=c10+1);
	[s1] can1  & count2  & count3  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c1'=0) & (c5'=c5+1) & (c10'=c10+1);
	[s1] can1  & count2  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c1'=0) & (c2'=c2+1) & (c5'=c5+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & count3  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c1'=0) & (c3'=c3+1) & (c5'=c5+1) & (c10'=c10+1);
	[s1] can1  & count2  & count3  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & ncount3  & count4  & count5  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c1'=0) & (c4'=c4+1) & (c5'=c5+1) & (c10'=c10+1);
	[s1] can1  & count2  & ncount3  & count4  & count5  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c1'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & count3  & count4  & count5  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c1'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c10'=c10+1);
	[s1] can1  & count2  & count3  & count4  & count5  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c1'=0) & (c6'=c6+1) & (c10'=c10+1);
	[s1] can1  & count2  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c1'=0) & (c2'=c2+1) & (c6'=c6+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & count3  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c1'=0) & (c3'=c3+1) & (c6'=c6+1) & (c10'=c10+1);
	[s1] can1  & count2  & count3  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & ncount3  & count4  & ncount5  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c1'=0) & (c4'=c4+1) & (c6'=c6+1) & (c10'=c10+1);
	[s1] can1  & count2  & ncount3  & count4  & ncount5  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c1'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & count3  & count4  & ncount5  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c1'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c10'=c10+1);
	[s1] can1  & count2  & count3  & count4  & ncount5  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & ncount3  & ncount4  & count5  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c1'=0) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s1] can1  & count2  & ncount3  & ncount4  & count5  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c1'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & count3  & ncount4  & count5  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c1'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s1] can1  & count2  & count3  & ncount4  & count5  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & ncount3  & count4  & count5  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c1'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s1] can1  & count2  & ncount3  & count4  & count5  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c1'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & count3  & count4  & count5  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c1'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s1] can1  & count2  & count3  & count4  & count5  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c1'=0) & (c7'=c7+1) & (c10'=c10+1);
	[s1] can1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c1'=0) & (c2'=c2+1) & (c7'=c7+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c1'=0) & (c3'=c3+1) & (c7'=c7+1) & (c10'=c10+1);
	[s1] can1  & count2  & count3  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c1'=0) & (c4'=c4+1) & (c7'=c7+1) & (c10'=c10+1);
	[s1] can1  & count2  & ncount3  & count4  & ncount5  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c1'=0) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & count3  & count4  & ncount5  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c1'=0) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c10'=c10+1);
	[s1] can1  & count2  & count3  & count4  & ncount5  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c1'=0) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s1] can1  & count2  & ncount3  & ncount4  & count5  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c1'=0) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & count3  & ncount4  & count5  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c1'=0) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s1] can1  & count2  & count3  & ncount4  & count5  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & ncount3  & count4  & count5  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c1'=0) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s1] can1  & count2  & ncount3  & count4  & count5  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c1'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & count3  & count4  & count5  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c1'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s1] can1  & count2  & count3  & count4  & count5  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & count7  & ncount8  & ncount9  & count10  -> (c1'=0) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s1] can1  & count2  & ncount3  & ncount4  & ncount5  & count6  & count7  & ncount8  & ncount9  & count10  -> (c1'=0) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & count3  & ncount4  & ncount5  & count6  & count7  & ncount8  & ncount9  & count10  -> (c1'=0) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s1] can1  & count2  & count3  & ncount4  & ncount5  & count6  & count7  & ncount8  & ncount9  & count10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & ncount3  & count4  & ncount5  & count6  & count7  & ncount8  & ncount9  & count10  -> (c1'=0) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s1] can1  & count2  & ncount3  & count4  & ncount5  & count6  & count7  & ncount8  & ncount9  & count10  -> (c1'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & count3  & count4  & ncount5  & count6  & count7  & ncount8  & ncount9  & count10  -> (c1'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s1] can1  & count2  & count3  & count4  & ncount5  & count6  & count7  & ncount8  & ncount9  & count10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & ncount3  & ncount4  & count5  & count6  & count7  & ncount8  & ncount9  & count10  -> (c1'=0) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s1] can1  & count2  & ncount3  & ncount4  & count5  & count6  & count7  & ncount8  & ncount9  & count10  -> (c1'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & count3  & ncount4  & count5  & count6  & count7  & ncount8  & ncount9  & count10  -> (c1'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s1] can1  & count2  & count3  & ncount4  & count5  & count6  & count7  & ncount8  & ncount9  & count10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & ncount3  & count4  & count5  & count6  & count7  & ncount8  & ncount9  & count10  -> (c1'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s1] can1  & count2  & ncount3  & count4  & count5  & count6  & count7  & ncount8  & ncount9  & count10  -> (c1'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & count3  & count4  & count5  & count6  & count7  & ncount8  & ncount9  & count10  -> (c1'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s1] can1  & count2  & count3  & count4  & count5  & count6  & count7  & ncount8  & ncount9  & count10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c1'=0) & (c8'=c8+1) & (c10'=c10+1);
	[s1] can1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c1'=0) & (c2'=c2+1) & (c8'=c8+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c1'=0) & (c3'=c3+1) & (c8'=c8+1) & (c10'=c10+1);
	[s1] can1  & count2  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c8'=c8+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c1'=0) & (c4'=c4+1) & (c8'=c8+1) & (c10'=c10+1);
	[s1] can1  & count2  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c1'=0) & (c2'=c2+1) & (c4'=c4+1) & (c8'=c8+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & count3  & count4  & ncount5  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c1'=0) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1) & (c10'=c10+1);
	[s1] can1  & count2  & count3  & count4  & ncount5  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c1'=0) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s1] can1  & count2  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c1'=0) & (c2'=c2+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & count3  & ncount4  & count5  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c1'=0) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s1] can1  & count2  & count3  & ncount4  & count5  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & ncount3  & count4  & count5  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c1'=0) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s1] can1  & count2  & ncount3  & count4  & count5  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c1'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & count3  & count4  & count5  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c1'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s1] can1  & count2  & count3  & count4  & count5  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & count8  & ncount9  & count10  -> (c1'=0) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s1] can1  & count2  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & count8  & ncount9  & count10  -> (c1'=0) & (c2'=c2+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & count3  & ncount4  & ncount5  & count6  & ncount7  & count8  & ncount9  & count10  -> (c1'=0) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s1] can1  & count2  & count3  & ncount4  & ncount5  & count6  & ncount7  & count8  & ncount9  & count10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & ncount3  & count4  & ncount5  & count6  & ncount7  & count8  & ncount9  & count10  -> (c1'=0) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s1] can1  & count2  & ncount3  & count4  & ncount5  & count6  & ncount7  & count8  & ncount9  & count10  -> (c1'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & count3  & count4  & ncount5  & count6  & ncount7  & count8  & ncount9  & count10  -> (c1'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s1] can1  & count2  & count3  & count4  & ncount5  & count6  & ncount7  & count8  & ncount9  & count10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & ncount3  & ncount4  & count5  & count6  & ncount7  & count8  & ncount9  & count10  -> (c1'=0) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s1] can1  & count2  & ncount3  & ncount4  & count5  & count6  & ncount7  & count8  & ncount9  & count10  -> (c1'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & count3  & ncount4  & count5  & count6  & ncount7  & count8  & ncount9  & count10  -> (c1'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s1] can1  & count2  & count3  & ncount4  & count5  & count6  & ncount7  & count8  & ncount9  & count10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & ncount3  & count4  & count5  & count6  & ncount7  & count8  & ncount9  & count10  -> (c1'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s1] can1  & count2  & ncount3  & count4  & count5  & count6  & ncount7  & count8  & ncount9  & count10  -> (c1'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & count3  & count4  & count5  & count6  & ncount7  & count8  & ncount9  & count10  -> (c1'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s1] can1  & count2  & count3  & count4  & count5  & count6  & ncount7  & count8  & ncount9  & count10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & count8  & ncount9  & count10  -> (c1'=0) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s1] can1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & count8  & ncount9  & count10  -> (c1'=0) & (c2'=c2+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & count7  & count8  & ncount9  & count10  -> (c1'=0) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s1] can1  & count2  & count3  & ncount4  & ncount5  & ncount6  & count7  & count8  & ncount9  & count10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & count7  & count8  & ncount9  & count10  -> (c1'=0) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s1] can1  & count2  & ncount3  & count4  & ncount5  & ncount6  & count7  & count8  & ncount9  & count10  -> (c1'=0) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & count3  & count4  & ncount5  & ncount6  & count7  & count8  & ncount9  & count10  -> (c1'=0) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s1] can1  & count2  & count3  & count4  & ncount5  & ncount6  & count7  & count8  & ncount9  & count10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & count7  & count8  & ncount9  & count10  -> (c1'=0) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s1] can1  & count2  & ncount3  & ncount4  & count5  & ncount6  & count7  & count8  & ncount9  & count10  -> (c1'=0) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & count3  & ncount4  & count5  & ncount6  & count7  & count8  & ncount9  & count10  -> (c1'=0) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s1] can1  & count2  & count3  & ncount4  & count5  & ncount6  & count7  & count8  & ncount9  & count10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & ncount3  & count4  & count5  & ncount6  & count7  & count8  & ncount9  & count10  -> (c1'=0) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s1] can1  & count2  & ncount3  & count4  & count5  & ncount6  & count7  & count8  & ncount9  & count10  -> (c1'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & count3  & count4  & count5  & ncount6  & count7  & count8  & ncount9  & count10  -> (c1'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s1] can1  & count2  & count3  & count4  & count5  & ncount6  & count7  & count8  & ncount9  & count10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & count7  & count8  & ncount9  & count10  -> (c1'=0) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s1] can1  & count2  & ncount3  & ncount4  & ncount5  & count6  & count7  & count8  & ncount9  & count10  -> (c1'=0) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & count3  & ncount4  & ncount5  & count6  & count7  & count8  & ncount9  & count10  -> (c1'=0) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s1] can1  & count2  & count3  & ncount4  & ncount5  & count6  & count7  & count8  & ncount9  & count10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & ncount3  & count4  & ncount5  & count6  & count7  & count8  & ncount9  & count10  -> (c1'=0) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s1] can1  & count2  & ncount3  & count4  & ncount5  & count6  & count7  & count8  & ncount9  & count10  -> (c1'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & count3  & count4  & ncount5  & count6  & count7  & count8  & ncount9  & count10  -> (c1'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s1] can1  & count2  & count3  & count4  & ncount5  & count6  & count7  & count8  & ncount9  & count10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & ncount3  & ncount4  & count5  & count6  & count7  & count8  & ncount9  & count10  -> (c1'=0) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s1] can1  & count2  & ncount3  & ncount4  & count5  & count6  & count7  & count8  & ncount9  & count10  -> (c1'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & count3  & ncount4  & count5  & count6  & count7  & count8  & ncount9  & count10  -> (c1'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s1] can1  & count2  & count3  & ncount4  & count5  & count6  & count7  & count8  & ncount9  & count10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & ncount3  & count4  & count5  & count6  & count7  & count8  & ncount9  & count10  -> (c1'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s1] can1  & count2  & ncount3  & count4  & count5  & count6  & count7  & count8  & ncount9  & count10  -> (c1'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & count3  & count4  & count5  & count6  & count7  & count8  & ncount9  & count10  -> (c1'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s1] can1  & count2  & count3  & count4  & count5  & count6  & count7  & count8  & ncount9  & count10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c1'=0) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c1'=0) & (c2'=c2+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c1'=0) & (c3'=c3+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & count2  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c1'=0) & (c4'=c4+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & count2  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c1'=0) & (c2'=c2+1) & (c4'=c4+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & count3  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c1'=0) & (c3'=c3+1) & (c4'=c4+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & count2  & count3  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c1'=0) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & count2  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c1'=0) & (c2'=c2+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & count3  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c1'=0) & (c3'=c3+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & count2  & count3  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & ncount3  & count4  & count5  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c1'=0) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & count2  & ncount3  & count4  & count5  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c1'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & count3  & count4  & count5  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c1'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & count2  & count3  & count4  & count5  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & count9  & count10  -> (c1'=0) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & count2  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & count9  & count10  -> (c1'=0) & (c2'=c2+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & count3  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & count9  & count10  -> (c1'=0) & (c3'=c3+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & count2  & count3  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & count9  & count10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & ncount3  & count4  & ncount5  & count6  & ncount7  & ncount8  & count9  & count10  -> (c1'=0) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & count2  & ncount3  & count4  & ncount5  & count6  & ncount7  & ncount8  & count9  & count10  -> (c1'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & count3  & count4  & ncount5  & count6  & ncount7  & ncount8  & count9  & count10  -> (c1'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & count2  & count3  & count4  & ncount5  & count6  & ncount7  & ncount8  & count9  & count10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & ncount3  & ncount4  & count5  & count6  & ncount7  & ncount8  & count9  & count10  -> (c1'=0) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & count2  & ncount3  & ncount4  & count5  & count6  & ncount7  & ncount8  & count9  & count10  -> (c1'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & count3  & ncount4  & count5  & count6  & ncount7  & ncount8  & count9  & count10  -> (c1'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & count2  & count3  & ncount4  & count5  & count6  & ncount7  & ncount8  & count9  & count10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & ncount3  & count4  & count5  & count6  & ncount7  & ncount8  & count9  & count10  -> (c1'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & count2  & ncount3  & count4  & count5  & count6  & ncount7  & ncount8  & count9  & count10  -> (c1'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & count3  & count4  & count5  & count6  & ncount7  & ncount8  & count9  & count10  -> (c1'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & count2  & count3  & count4  & count5  & count6  & ncount7  & ncount8  & count9  & count10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & count9  & count10  -> (c1'=0) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & count9  & count10  -> (c1'=0) & (c2'=c2+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & count9  & count10  -> (c1'=0) & (c3'=c3+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & count2  & count3  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & count9  & count10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & count7  & ncount8  & count9  & count10  -> (c1'=0) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & count2  & ncount3  & count4  & ncount5  & ncount6  & count7  & ncount8  & count9  & count10  -> (c1'=0) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & count3  & count4  & ncount5  & ncount6  & count7  & ncount8  & count9  & count10  -> (c1'=0) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & count2  & count3  & count4  & ncount5  & ncount6  & count7  & ncount8  & count9  & count10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & count7  & ncount8  & count9  & count10  -> (c1'=0) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & count2  & ncount3  & ncount4  & count5  & ncount6  & count7  & ncount8  & count9  & count10  -> (c1'=0) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & count3  & ncount4  & count5  & ncount6  & count7  & ncount8  & count9  & count10  -> (c1'=0) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & count2  & count3  & ncount4  & count5  & ncount6  & count7  & ncount8  & count9  & count10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & ncount3  & count4  & count5  & ncount6  & count7  & ncount8  & count9  & count10  -> (c1'=0) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & count2  & ncount3  & count4  & count5  & ncount6  & count7  & ncount8  & count9  & count10  -> (c1'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & count3  & count4  & count5  & ncount6  & count7  & ncount8  & count9  & count10  -> (c1'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & count2  & count3  & count4  & count5  & ncount6  & count7  & ncount8  & count9  & count10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & count7  & ncount8  & count9  & count10  -> (c1'=0) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & count2  & ncount3  & ncount4  & ncount5  & count6  & count7  & ncount8  & count9  & count10  -> (c1'=0) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & count3  & ncount4  & ncount5  & count6  & count7  & ncount8  & count9  & count10  -> (c1'=0) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & count2  & count3  & ncount4  & ncount5  & count6  & count7  & ncount8  & count9  & count10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & ncount3  & count4  & ncount5  & count6  & count7  & ncount8  & count9  & count10  -> (c1'=0) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & count2  & ncount3  & count4  & ncount5  & count6  & count7  & ncount8  & count9  & count10  -> (c1'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & count3  & count4  & ncount5  & count6  & count7  & ncount8  & count9  & count10  -> (c1'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & count2  & count3  & count4  & ncount5  & count6  & count7  & ncount8  & count9  & count10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & ncount3  & ncount4  & count5  & count6  & count7  & ncount8  & count9  & count10  -> (c1'=0) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & count2  & ncount3  & ncount4  & count5  & count6  & count7  & ncount8  & count9  & count10  -> (c1'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & count3  & ncount4  & count5  & count6  & count7  & ncount8  & count9  & count10  -> (c1'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & count2  & count3  & ncount4  & count5  & count6  & count7  & ncount8  & count9  & count10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & ncount3  & count4  & count5  & count6  & count7  & ncount8  & count9  & count10  -> (c1'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & count2  & ncount3  & count4  & count5  & count6  & count7  & ncount8  & count9  & count10  -> (c1'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & count3  & count4  & count5  & count6  & count7  & ncount8  & count9  & count10  -> (c1'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & count2  & count3  & count4  & count5  & count6  & count7  & ncount8  & count9  & count10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & count9  & count10  -> (c1'=0) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & count9  & count10  -> (c1'=0) & (c2'=c2+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & count9  & count10  -> (c1'=0) & (c3'=c3+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & count2  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & count9  & count10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & count8  & count9  & count10  -> (c1'=0) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & count2  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & count8  & count9  & count10  -> (c1'=0) & (c2'=c2+1) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & count3  & count4  & ncount5  & ncount6  & ncount7  & count8  & count9  & count10  -> (c1'=0) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & count2  & count3  & count4  & ncount5  & ncount6  & ncount7  & count8  & count9  & count10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & count8  & count9  & count10  -> (c1'=0) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & count2  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & count8  & count9  & count10  -> (c1'=0) & (c2'=c2+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & count3  & ncount4  & count5  & ncount6  & ncount7  & count8  & count9  & count10  -> (c1'=0) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & count2  & count3  & ncount4  & count5  & ncount6  & ncount7  & count8  & count9  & count10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & ncount3  & count4  & count5  & ncount6  & ncount7  & count8  & count9  & count10  -> (c1'=0) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & count2  & ncount3  & count4  & count5  & ncount6  & ncount7  & count8  & count9  & count10  -> (c1'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & count3  & count4  & count5  & ncount6  & ncount7  & count8  & count9  & count10  -> (c1'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & count2  & count3  & count4  & count5  & ncount6  & ncount7  & count8  & count9  & count10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & count8  & count9  & count10  -> (c1'=0) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & count2  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & count8  & count9  & count10  -> (c1'=0) & (c2'=c2+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & count3  & ncount4  & ncount5  & count6  & ncount7  & count8  & count9  & count10  -> (c1'=0) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & count2  & count3  & ncount4  & ncount5  & count6  & ncount7  & count8  & count9  & count10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & ncount3  & count4  & ncount5  & count6  & ncount7  & count8  & count9  & count10  -> (c1'=0) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & count2  & ncount3  & count4  & ncount5  & count6  & ncount7  & count8  & count9  & count10  -> (c1'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & count3  & count4  & ncount5  & count6  & ncount7  & count8  & count9  & count10  -> (c1'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & count2  & count3  & count4  & ncount5  & count6  & ncount7  & count8  & count9  & count10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & ncount3  & ncount4  & count5  & count6  & ncount7  & count8  & count9  & count10  -> (c1'=0) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & count2  & ncount3  & ncount4  & count5  & count6  & ncount7  & count8  & count9  & count10  -> (c1'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & count3  & ncount4  & count5  & count6  & ncount7  & count8  & count9  & count10  -> (c1'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & count2  & count3  & ncount4  & count5  & count6  & ncount7  & count8  & count9  & count10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & ncount3  & count4  & count5  & count6  & ncount7  & count8  & count9  & count10  -> (c1'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & count2  & ncount3  & count4  & count5  & count6  & ncount7  & count8  & count9  & count10  -> (c1'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & count3  & count4  & count5  & count6  & ncount7  & count8  & count9  & count10  -> (c1'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & count2  & count3  & count4  & count5  & count6  & ncount7  & count8  & count9  & count10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & count8  & count9  & count10  -> (c1'=0) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & count8  & count9  & count10  -> (c1'=0) & (c2'=c2+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & count7  & count8  & count9  & count10  -> (c1'=0) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & count2  & count3  & ncount4  & ncount5  & ncount6  & count7  & count8  & count9  & count10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & count7  & count8  & count9  & count10  -> (c1'=0) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & count2  & ncount3  & count4  & ncount5  & ncount6  & count7  & count8  & count9  & count10  -> (c1'=0) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & count3  & count4  & ncount5  & ncount6  & count7  & count8  & count9  & count10  -> (c1'=0) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & count2  & count3  & count4  & ncount5  & ncount6  & count7  & count8  & count9  & count10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & count7  & count8  & count9  & count10  -> (c1'=0) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & count2  & ncount3  & ncount4  & count5  & ncount6  & count7  & count8  & count9  & count10  -> (c1'=0) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & count3  & ncount4  & count5  & ncount6  & count7  & count8  & count9  & count10  -> (c1'=0) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & count2  & count3  & ncount4  & count5  & ncount6  & count7  & count8  & count9  & count10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & ncount3  & count4  & count5  & ncount6  & count7  & count8  & count9  & count10  -> (c1'=0) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & count2  & ncount3  & count4  & count5  & ncount6  & count7  & count8  & count9  & count10  -> (c1'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & count3  & count4  & count5  & ncount6  & count7  & count8  & count9  & count10  -> (c1'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & count2  & count3  & count4  & count5  & ncount6  & count7  & count8  & count9  & count10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & count7  & count8  & count9  & count10  -> (c1'=0) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & count2  & ncount3  & ncount4  & ncount5  & count6  & count7  & count8  & count9  & count10  -> (c1'=0) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & count3  & ncount4  & ncount5  & count6  & count7  & count8  & count9  & count10  -> (c1'=0) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & count2  & count3  & ncount4  & ncount5  & count6  & count7  & count8  & count9  & count10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & ncount3  & count4  & ncount5  & count6  & count7  & count8  & count9  & count10  -> (c1'=0) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & count2  & ncount3  & count4  & ncount5  & count6  & count7  & count8  & count9  & count10  -> (c1'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & count3  & count4  & ncount5  & count6  & count7  & count8  & count9  & count10  -> (c1'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & count2  & count3  & count4  & ncount5  & count6  & count7  & count8  & count9  & count10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & ncount3  & ncount4  & count5  & count6  & count7  & count8  & count9  & count10  -> (c1'=0) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & count2  & ncount3  & ncount4  & count5  & count6  & count7  & count8  & count9  & count10  -> (c1'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & count3  & ncount4  & count5  & count6  & count7  & count8  & count9  & count10  -> (c1'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & count2  & count3  & ncount4  & count5  & count6  & count7  & count8  & count9  & count10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & ncount3  & count4  & count5  & count6  & count7  & count8  & count9  & count10  -> (c1'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & count2  & ncount3  & count4  & count5  & count6  & count7  & count8  & count9  & count10  -> (c1'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & ncount2  & count3  & count4  & count5  & count6  & count7  & count8  & count9  & count10  -> (c1'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s1] can1  & count2  & count3  & count4  & count5  & count6  & count7  & count8  & count9  & count10  -> (c1'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c2'=0);
	[s2] can2  & count1  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c2'=0) & (c1'=c1+1);
	[s2] can2  & ncount1  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c2'=0) & (c3'=c3+1);
	[s2] can2  & count1  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1);
	[s2] can2  & ncount1  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c2'=0) & (c4'=c4+1);
	[s2] can2  & count1  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c4'=c4+1);
	[s2] can2  & ncount1  & count3  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c2'=0) & (c3'=c3+1) & (c4'=c4+1);
	[s2] can2  & count1  & count3  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1);
	[s2] can2  & ncount1  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c2'=0) & (c5'=c5+1);
	[s2] can2  & count1  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c5'=c5+1);
	[s2] can2  & ncount1  & count3  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c2'=0) & (c3'=c3+1) & (c5'=c5+1);
	[s2] can2  & count1  & count3  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1);
	[s2] can2  & ncount1  & ncount3  & count4  & count5  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c2'=0) & (c4'=c4+1) & (c5'=c5+1);
	[s2] can2  & count1  & ncount3  & count4  & count5  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1);
	[s2] can2  & ncount1  & count3  & count4  & count5  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c2'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1);
	[s2] can2  & count1  & count3  & count4  & count5  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1);
	[s2] can2  & ncount1  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c2'=0) & (c6'=c6+1);
	[s2] can2  & count1  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c6'=c6+1);
	[s2] can2  & ncount1  & count3  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c2'=0) & (c3'=c3+1) & (c6'=c6+1);
	[s2] can2  & count1  & count3  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1);
	[s2] can2  & ncount1  & ncount3  & count4  & ncount5  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c2'=0) & (c4'=c4+1) & (c6'=c6+1);
	[s2] can2  & count1  & ncount3  & count4  & ncount5  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1);
	[s2] can2  & ncount1  & count3  & count4  & ncount5  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c2'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1);
	[s2] can2  & count1  & count3  & count4  & ncount5  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1);
	[s2] can2  & ncount1  & ncount3  & ncount4  & count5  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c2'=0) & (c5'=c5+1) & (c6'=c6+1);
	[s2] can2  & count1  & ncount3  & ncount4  & count5  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1);
	[s2] can2  & ncount1  & count3  & ncount4  & count5  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c2'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1);
	[s2] can2  & count1  & count3  & ncount4  & count5  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1);
	[s2] can2  & ncount1  & ncount3  & count4  & count5  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c2'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1);
	[s2] can2  & count1  & ncount3  & count4  & count5  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1);
	[s2] can2  & ncount1  & count3  & count4  & count5  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c2'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1);
	[s2] can2  & count1  & count3  & count4  & count5  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1);
	[s2] can2  & ncount1  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c2'=0) & (c7'=c7+1);
	[s2] can2  & count1  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c7'=c7+1);
	[s2] can2  & ncount1  & count3  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c2'=0) & (c3'=c3+1) & (c7'=c7+1);
	[s2] can2  & count1  & count3  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c7'=c7+1);
	[s2] can2  & ncount1  & ncount3  & count4  & ncount5  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c2'=0) & (c4'=c4+1) & (c7'=c7+1);
	[s2] can2  & count1  & ncount3  & count4  & ncount5  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c4'=c4+1) & (c7'=c7+1);
	[s2] can2  & ncount1  & count3  & count4  & ncount5  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c2'=0) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1);
	[s2] can2  & count1  & count3  & count4  & ncount5  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1);
	[s2] can2  & ncount1  & ncount3  & ncount4  & count5  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c2'=0) & (c5'=c5+1) & (c7'=c7+1);
	[s2] can2  & count1  & ncount3  & ncount4  & count5  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c5'=c5+1) & (c7'=c7+1);
	[s2] can2  & ncount1  & count3  & ncount4  & count5  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c2'=0) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1);
	[s2] can2  & count1  & count3  & ncount4  & count5  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1);
	[s2] can2  & ncount1  & ncount3  & count4  & count5  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c2'=0) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1);
	[s2] can2  & count1  & ncount3  & count4  & count5  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1);
	[s2] can2  & ncount1  & count3  & count4  & count5  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c2'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1);
	[s2] can2  & count1  & count3  & count4  & count5  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1);
	[s2] can2  & ncount1  & ncount3  & ncount4  & ncount5  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c2'=0) & (c6'=c6+1) & (c7'=c7+1);
	[s2] can2  & count1  & ncount3  & ncount4  & ncount5  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c6'=c6+1) & (c7'=c7+1);
	[s2] can2  & ncount1  & count3  & ncount4  & ncount5  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c2'=0) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1);
	[s2] can2  & count1  & count3  & ncount4  & ncount5  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1);
	[s2] can2  & ncount1  & ncount3  & count4  & ncount5  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c2'=0) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1);
	[s2] can2  & count1  & ncount3  & count4  & ncount5  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1);
	[s2] can2  & ncount1  & count3  & count4  & ncount5  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c2'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1);
	[s2] can2  & count1  & count3  & count4  & ncount5  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1);
	[s2] can2  & ncount1  & ncount3  & ncount4  & count5  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c2'=0) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s2] can2  & count1  & ncount3  & ncount4  & count5  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s2] can2  & ncount1  & count3  & ncount4  & count5  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c2'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s2] can2  & count1  & count3  & ncount4  & count5  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s2] can2  & ncount1  & ncount3  & count4  & count5  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c2'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s2] can2  & count1  & ncount3  & count4  & count5  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s2] can2  & ncount1  & count3  & count4  & count5  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c2'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s2] can2  & count1  & count3  & count4  & count5  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s2] can2  & ncount1  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c2'=0) & (c8'=c8+1);
	[s2] can2  & count1  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c8'=c8+1);
	[s2] can2  & ncount1  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c2'=0) & (c3'=c3+1) & (c8'=c8+1);
	[s2] can2  & count1  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c8'=c8+1);
	[s2] can2  & ncount1  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c2'=0) & (c4'=c4+1) & (c8'=c8+1);
	[s2] can2  & count1  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c4'=c4+1) & (c8'=c8+1);
	[s2] can2  & ncount1  & count3  & count4  & ncount5  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c2'=0) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1);
	[s2] can2  & count1  & count3  & count4  & ncount5  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1);
	[s2] can2  & ncount1  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c2'=0) & (c5'=c5+1) & (c8'=c8+1);
	[s2] can2  & count1  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c5'=c5+1) & (c8'=c8+1);
	[s2] can2  & ncount1  & count3  & ncount4  & count5  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c2'=0) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1);
	[s2] can2  & count1  & count3  & ncount4  & count5  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1);
	[s2] can2  & ncount1  & ncount3  & count4  & count5  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c2'=0) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1);
	[s2] can2  & count1  & ncount3  & count4  & count5  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1);
	[s2] can2  & ncount1  & count3  & count4  & count5  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c2'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1);
	[s2] can2  & count1  & count3  & count4  & count5  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1);
	[s2] can2  & ncount1  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c2'=0) & (c6'=c6+1) & (c8'=c8+1);
	[s2] can2  & count1  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c6'=c6+1) & (c8'=c8+1);
	[s2] can2  & ncount1  & count3  & ncount4  & ncount5  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c2'=0) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1);
	[s2] can2  & count1  & count3  & ncount4  & ncount5  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1);
	[s2] can2  & ncount1  & ncount3  & count4  & ncount5  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c2'=0) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1);
	[s2] can2  & count1  & ncount3  & count4  & ncount5  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1);
	[s2] can2  & ncount1  & count3  & count4  & ncount5  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c2'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1);
	[s2] can2  & count1  & count3  & count4  & ncount5  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1);
	[s2] can2  & ncount1  & ncount3  & ncount4  & count5  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c2'=0) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s2] can2  & count1  & ncount3  & ncount4  & count5  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s2] can2  & ncount1  & count3  & ncount4  & count5  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c2'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s2] can2  & count1  & count3  & ncount4  & count5  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s2] can2  & ncount1  & ncount3  & count4  & count5  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c2'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s2] can2  & count1  & ncount3  & count4  & count5  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s2] can2  & ncount1  & count3  & count4  & count5  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c2'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s2] can2  & count1  & count3  & count4  & count5  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s2] can2  & ncount1  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c2'=0) & (c7'=c7+1) & (c8'=c8+1);
	[s2] can2  & count1  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c7'=c7+1) & (c8'=c8+1);
	[s2] can2  & ncount1  & count3  & ncount4  & ncount5  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c2'=0) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1);
	[s2] can2  & count1  & count3  & ncount4  & ncount5  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1);
	[s2] can2  & ncount1  & ncount3  & count4  & ncount5  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c2'=0) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1);
	[s2] can2  & count1  & ncount3  & count4  & ncount5  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1);
	[s2] can2  & ncount1  & count3  & count4  & ncount5  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c2'=0) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1);
	[s2] can2  & count1  & count3  & count4  & ncount5  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1);
	[s2] can2  & ncount1  & ncount3  & ncount4  & count5  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c2'=0) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s2] can2  & count1  & ncount3  & ncount4  & count5  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s2] can2  & ncount1  & count3  & ncount4  & count5  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c2'=0) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s2] can2  & count1  & count3  & ncount4  & count5  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s2] can2  & ncount1  & ncount3  & count4  & count5  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c2'=0) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s2] can2  & count1  & ncount3  & count4  & count5  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s2] can2  & ncount1  & count3  & count4  & count5  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c2'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s2] can2  & count1  & count3  & count4  & count5  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s2] can2  & ncount1  & ncount3  & ncount4  & ncount5  & count6  & count7  & count8  & ncount9  & ncount10  -> (c2'=0) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s2] can2  & count1  & ncount3  & ncount4  & ncount5  & count6  & count7  & count8  & ncount9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s2] can2  & ncount1  & count3  & ncount4  & ncount5  & count6  & count7  & count8  & ncount9  & ncount10  -> (c2'=0) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s2] can2  & count1  & count3  & ncount4  & ncount5  & count6  & count7  & count8  & ncount9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s2] can2  & ncount1  & ncount3  & count4  & ncount5  & count6  & count7  & count8  & ncount9  & ncount10  -> (c2'=0) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s2] can2  & count1  & ncount3  & count4  & ncount5  & count6  & count7  & count8  & ncount9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s2] can2  & ncount1  & count3  & count4  & ncount5  & count6  & count7  & count8  & ncount9  & ncount10  -> (c2'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s2] can2  & count1  & count3  & count4  & ncount5  & count6  & count7  & count8  & ncount9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s2] can2  & ncount1  & ncount3  & ncount4  & count5  & count6  & count7  & count8  & ncount9  & ncount10  -> (c2'=0) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s2] can2  & count1  & ncount3  & ncount4  & count5  & count6  & count7  & count8  & ncount9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s2] can2  & ncount1  & count3  & ncount4  & count5  & count6  & count7  & count8  & ncount9  & ncount10  -> (c2'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s2] can2  & count1  & count3  & ncount4  & count5  & count6  & count7  & count8  & ncount9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s2] can2  & ncount1  & ncount3  & count4  & count5  & count6  & count7  & count8  & ncount9  & ncount10  -> (c2'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s2] can2  & count1  & ncount3  & count4  & count5  & count6  & count7  & count8  & ncount9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s2] can2  & ncount1  & count3  & count4  & count5  & count6  & count7  & count8  & ncount9  & ncount10  -> (c2'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s2] can2  & count1  & count3  & count4  & count5  & count6  & count7  & count8  & ncount9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s2] can2  & ncount1  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c2'=0) & (c9'=c9+1);
	[s2] can2  & count1  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c9'=c9+1);
	[s2] can2  & ncount1  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c2'=0) & (c3'=c3+1) & (c9'=c9+1);
	[s2] can2  & count1  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c9'=c9+1);
	[s2] can2  & ncount1  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c2'=0) & (c4'=c4+1) & (c9'=c9+1);
	[s2] can2  & count1  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c4'=c4+1) & (c9'=c9+1);
	[s2] can2  & ncount1  & count3  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c2'=0) & (c3'=c3+1) & (c4'=c4+1) & (c9'=c9+1);
	[s2] can2  & count1  & count3  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c9'=c9+1);
	[s2] can2  & ncount1  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c2'=0) & (c5'=c5+1) & (c9'=c9+1);
	[s2] can2  & count1  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c5'=c5+1) & (c9'=c9+1);
	[s2] can2  & ncount1  & count3  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c2'=0) & (c3'=c3+1) & (c5'=c5+1) & (c9'=c9+1);
	[s2] can2  & count1  & count3  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c9'=c9+1);
	[s2] can2  & ncount1  & ncount3  & count4  & count5  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c2'=0) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1);
	[s2] can2  & count1  & ncount3  & count4  & count5  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1);
	[s2] can2  & ncount1  & count3  & count4  & count5  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c2'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1);
	[s2] can2  & count1  & count3  & count4  & count5  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1);
	[s2] can2  & ncount1  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c2'=0) & (c6'=c6+1) & (c9'=c9+1);
	[s2] can2  & count1  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c6'=c6+1) & (c9'=c9+1);
	[s2] can2  & ncount1  & count3  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c2'=0) & (c3'=c3+1) & (c6'=c6+1) & (c9'=c9+1);
	[s2] can2  & count1  & count3  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c9'=c9+1);
	[s2] can2  & ncount1  & ncount3  & count4  & ncount5  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c2'=0) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1);
	[s2] can2  & count1  & ncount3  & count4  & ncount5  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1);
	[s2] can2  & ncount1  & count3  & count4  & ncount5  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c2'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1);
	[s2] can2  & count1  & count3  & count4  & ncount5  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1);
	[s2] can2  & ncount1  & ncount3  & ncount4  & count5  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c2'=0) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s2] can2  & count1  & ncount3  & ncount4  & count5  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s2] can2  & ncount1  & count3  & ncount4  & count5  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c2'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s2] can2  & count1  & count3  & ncount4  & count5  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s2] can2  & ncount1  & ncount3  & count4  & count5  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c2'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s2] can2  & count1  & ncount3  & count4  & count5  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s2] can2  & ncount1  & count3  & count4  & count5  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c2'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s2] can2  & count1  & count3  & count4  & count5  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s2] can2  & ncount1  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c2'=0) & (c7'=c7+1) & (c9'=c9+1);
	[s2] can2  & count1  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c7'=c7+1) & (c9'=c9+1);
	[s2] can2  & ncount1  & count3  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c2'=0) & (c3'=c3+1) & (c7'=c7+1) & (c9'=c9+1);
	[s2] can2  & count1  & count3  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c7'=c7+1) & (c9'=c9+1);
	[s2] can2  & ncount1  & ncount3  & count4  & ncount5  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c2'=0) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1);
	[s2] can2  & count1  & ncount3  & count4  & ncount5  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1);
	[s2] can2  & ncount1  & count3  & count4  & ncount5  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c2'=0) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1);
	[s2] can2  & count1  & count3  & count4  & ncount5  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1);
	[s2] can2  & ncount1  & ncount3  & ncount4  & count5  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c2'=0) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s2] can2  & count1  & ncount3  & ncount4  & count5  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s2] can2  & ncount1  & count3  & ncount4  & count5  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c2'=0) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s2] can2  & count1  & count3  & ncount4  & count5  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s2] can2  & ncount1  & ncount3  & count4  & count5  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c2'=0) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s2] can2  & count1  & ncount3  & count4  & count5  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s2] can2  & ncount1  & count3  & count4  & count5  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c2'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s2] can2  & count1  & count3  & count4  & count5  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s2] can2  & ncount1  & ncount3  & ncount4  & ncount5  & count6  & count7  & ncount8  & count9  & ncount10  -> (c2'=0) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s2] can2  & count1  & ncount3  & ncount4  & ncount5  & count6  & count7  & ncount8  & count9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s2] can2  & ncount1  & count3  & ncount4  & ncount5  & count6  & count7  & ncount8  & count9  & ncount10  -> (c2'=0) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s2] can2  & count1  & count3  & ncount4  & ncount5  & count6  & count7  & ncount8  & count9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s2] can2  & ncount1  & ncount3  & count4  & ncount5  & count6  & count7  & ncount8  & count9  & ncount10  -> (c2'=0) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s2] can2  & count1  & ncount3  & count4  & ncount5  & count6  & count7  & ncount8  & count9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s2] can2  & ncount1  & count3  & count4  & ncount5  & count6  & count7  & ncount8  & count9  & ncount10  -> (c2'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s2] can2  & count1  & count3  & count4  & ncount5  & count6  & count7  & ncount8  & count9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s2] can2  & ncount1  & ncount3  & ncount4  & count5  & count6  & count7  & ncount8  & count9  & ncount10  -> (c2'=0) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s2] can2  & count1  & ncount3  & ncount4  & count5  & count6  & count7  & ncount8  & count9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s2] can2  & ncount1  & count3  & ncount4  & count5  & count6  & count7  & ncount8  & count9  & ncount10  -> (c2'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s2] can2  & count1  & count3  & ncount4  & count5  & count6  & count7  & ncount8  & count9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s2] can2  & ncount1  & ncount3  & count4  & count5  & count6  & count7  & ncount8  & count9  & ncount10  -> (c2'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s2] can2  & count1  & ncount3  & count4  & count5  & count6  & count7  & ncount8  & count9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s2] can2  & ncount1  & count3  & count4  & count5  & count6  & count7  & ncount8  & count9  & ncount10  -> (c2'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s2] can2  & count1  & count3  & count4  & count5  & count6  & count7  & ncount8  & count9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s2] can2  & ncount1  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c2'=0) & (c8'=c8+1) & (c9'=c9+1);
	[s2] can2  & count1  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c8'=c8+1) & (c9'=c9+1);
	[s2] can2  & ncount1  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c2'=0) & (c3'=c3+1) & (c8'=c8+1) & (c9'=c9+1);
	[s2] can2  & count1  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c8'=c8+1) & (c9'=c9+1);
	[s2] can2  & ncount1  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c2'=0) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1);
	[s2] can2  & count1  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1);
	[s2] can2  & ncount1  & count3  & count4  & ncount5  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c2'=0) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1);
	[s2] can2  & count1  & count3  & count4  & ncount5  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1);
	[s2] can2  & ncount1  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c2'=0) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s2] can2  & count1  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s2] can2  & ncount1  & count3  & ncount4  & count5  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c2'=0) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s2] can2  & count1  & count3  & ncount4  & count5  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s2] can2  & ncount1  & ncount3  & count4  & count5  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c2'=0) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s2] can2  & count1  & ncount3  & count4  & count5  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s2] can2  & ncount1  & count3  & count4  & count5  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c2'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s2] can2  & count1  & count3  & count4  & count5  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s2] can2  & ncount1  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & count8  & count9  & ncount10  -> (c2'=0) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s2] can2  & count1  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & count8  & count9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s2] can2  & ncount1  & count3  & ncount4  & ncount5  & count6  & ncount7  & count8  & count9  & ncount10  -> (c2'=0) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s2] can2  & count1  & count3  & ncount4  & ncount5  & count6  & ncount7  & count8  & count9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s2] can2  & ncount1  & ncount3  & count4  & ncount5  & count6  & ncount7  & count8  & count9  & ncount10  -> (c2'=0) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s2] can2  & count1  & ncount3  & count4  & ncount5  & count6  & ncount7  & count8  & count9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s2] can2  & ncount1  & count3  & count4  & ncount5  & count6  & ncount7  & count8  & count9  & ncount10  -> (c2'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s2] can2  & count1  & count3  & count4  & ncount5  & count6  & ncount7  & count8  & count9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s2] can2  & ncount1  & ncount3  & ncount4  & count5  & count6  & ncount7  & count8  & count9  & ncount10  -> (c2'=0) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s2] can2  & count1  & ncount3  & ncount4  & count5  & count6  & ncount7  & count8  & count9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s2] can2  & ncount1  & count3  & ncount4  & count5  & count6  & ncount7  & count8  & count9  & ncount10  -> (c2'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s2] can2  & count1  & count3  & ncount4  & count5  & count6  & ncount7  & count8  & count9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s2] can2  & ncount1  & ncount3  & count4  & count5  & count6  & ncount7  & count8  & count9  & ncount10  -> (c2'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s2] can2  & count1  & ncount3  & count4  & count5  & count6  & ncount7  & count8  & count9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s2] can2  & ncount1  & count3  & count4  & count5  & count6  & ncount7  & count8  & count9  & ncount10  -> (c2'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s2] can2  & count1  & count3  & count4  & count5  & count6  & ncount7  & count8  & count9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s2] can2  & ncount1  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & count8  & count9  & ncount10  -> (c2'=0) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s2] can2  & count1  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & count8  & count9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s2] can2  & ncount1  & count3  & ncount4  & ncount5  & ncount6  & count7  & count8  & count9  & ncount10  -> (c2'=0) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s2] can2  & count1  & count3  & ncount4  & ncount5  & ncount6  & count7  & count8  & count9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s2] can2  & ncount1  & ncount3  & count4  & ncount5  & ncount6  & count7  & count8  & count9  & ncount10  -> (c2'=0) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s2] can2  & count1  & ncount3  & count4  & ncount5  & ncount6  & count7  & count8  & count9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s2] can2  & ncount1  & count3  & count4  & ncount5  & ncount6  & count7  & count8  & count9  & ncount10  -> (c2'=0) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s2] can2  & count1  & count3  & count4  & ncount5  & ncount6  & count7  & count8  & count9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s2] can2  & ncount1  & ncount3  & ncount4  & count5  & ncount6  & count7  & count8  & count9  & ncount10  -> (c2'=0) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s2] can2  & count1  & ncount3  & ncount4  & count5  & ncount6  & count7  & count8  & count9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s2] can2  & ncount1  & count3  & ncount4  & count5  & ncount6  & count7  & count8  & count9  & ncount10  -> (c2'=0) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s2] can2  & count1  & count3  & ncount4  & count5  & ncount6  & count7  & count8  & count9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s2] can2  & ncount1  & ncount3  & count4  & count5  & ncount6  & count7  & count8  & count9  & ncount10  -> (c2'=0) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s2] can2  & count1  & ncount3  & count4  & count5  & ncount6  & count7  & count8  & count9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s2] can2  & ncount1  & count3  & count4  & count5  & ncount6  & count7  & count8  & count9  & ncount10  -> (c2'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s2] can2  & count1  & count3  & count4  & count5  & ncount6  & count7  & count8  & count9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s2] can2  & ncount1  & ncount3  & ncount4  & ncount5  & count6  & count7  & count8  & count9  & ncount10  -> (c2'=0) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s2] can2  & count1  & ncount3  & ncount4  & ncount5  & count6  & count7  & count8  & count9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s2] can2  & ncount1  & count3  & ncount4  & ncount5  & count6  & count7  & count8  & count9  & ncount10  -> (c2'=0) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s2] can2  & count1  & count3  & ncount4  & ncount5  & count6  & count7  & count8  & count9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s2] can2  & ncount1  & ncount3  & count4  & ncount5  & count6  & count7  & count8  & count9  & ncount10  -> (c2'=0) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s2] can2  & count1  & ncount3  & count4  & ncount5  & count6  & count7  & count8  & count9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s2] can2  & ncount1  & count3  & count4  & ncount5  & count6  & count7  & count8  & count9  & ncount10  -> (c2'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s2] can2  & count1  & count3  & count4  & ncount5  & count6  & count7  & count8  & count9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s2] can2  & ncount1  & ncount3  & ncount4  & count5  & count6  & count7  & count8  & count9  & ncount10  -> (c2'=0) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s2] can2  & count1  & ncount3  & ncount4  & count5  & count6  & count7  & count8  & count9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s2] can2  & ncount1  & count3  & ncount4  & count5  & count6  & count7  & count8  & count9  & ncount10  -> (c2'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s2] can2  & count1  & count3  & ncount4  & count5  & count6  & count7  & count8  & count9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s2] can2  & ncount1  & ncount3  & count4  & count5  & count6  & count7  & count8  & count9  & ncount10  -> (c2'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s2] can2  & count1  & ncount3  & count4  & count5  & count6  & count7  & count8  & count9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s2] can2  & ncount1  & count3  & count4  & count5  & count6  & count7  & count8  & count9  & ncount10  -> (c2'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s2] can2  & count1  & count3  & count4  & count5  & count6  & count7  & count8  & count9  & ncount10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s2] can2  & ncount1  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c2'=0) & (c10'=c10+1);
	[s2] can2  & count1  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c2'=0) & (c1'=c1+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c2'=0) & (c3'=c3+1) & (c10'=c10+1);
	[s2] can2  & count1  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c2'=0) & (c4'=c4+1) & (c10'=c10+1);
	[s2] can2  & count1  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c2'=0) & (c1'=c1+1) & (c4'=c4+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & count3  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c2'=0) & (c3'=c3+1) & (c4'=c4+1) & (c10'=c10+1);
	[s2] can2  & count1  & count3  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c2'=0) & (c5'=c5+1) & (c10'=c10+1);
	[s2] can2  & count1  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c2'=0) & (c1'=c1+1) & (c5'=c5+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & count3  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c2'=0) & (c3'=c3+1) & (c5'=c5+1) & (c10'=c10+1);
	[s2] can2  & count1  & count3  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & ncount3  & count4  & count5  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c2'=0) & (c4'=c4+1) & (c5'=c5+1) & (c10'=c10+1);
	[s2] can2  & count1  & ncount3  & count4  & count5  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c2'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & count3  & count4  & count5  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c2'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c10'=c10+1);
	[s2] can2  & count1  & count3  & count4  & count5  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c2'=0) & (c6'=c6+1) & (c10'=c10+1);
	[s2] can2  & count1  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c2'=0) & (c1'=c1+1) & (c6'=c6+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & count3  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c2'=0) & (c3'=c3+1) & (c6'=c6+1) & (c10'=c10+1);
	[s2] can2  & count1  & count3  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & ncount3  & count4  & ncount5  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c2'=0) & (c4'=c4+1) & (c6'=c6+1) & (c10'=c10+1);
	[s2] can2  & count1  & ncount3  & count4  & ncount5  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c2'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & count3  & count4  & ncount5  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c2'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c10'=c10+1);
	[s2] can2  & count1  & count3  & count4  & ncount5  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & ncount3  & ncount4  & count5  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c2'=0) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s2] can2  & count1  & ncount3  & ncount4  & count5  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c2'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & count3  & ncount4  & count5  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c2'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s2] can2  & count1  & count3  & ncount4  & count5  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & ncount3  & count4  & count5  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c2'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s2] can2  & count1  & ncount3  & count4  & count5  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c2'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & count3  & count4  & count5  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c2'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s2] can2  & count1  & count3  & count4  & count5  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c2'=0) & (c7'=c7+1) & (c10'=c10+1);
	[s2] can2  & count1  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c2'=0) & (c1'=c1+1) & (c7'=c7+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & count3  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c2'=0) & (c3'=c3+1) & (c7'=c7+1) & (c10'=c10+1);
	[s2] can2  & count1  & count3  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c7'=c7+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & ncount3  & count4  & ncount5  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c2'=0) & (c4'=c4+1) & (c7'=c7+1) & (c10'=c10+1);
	[s2] can2  & count1  & ncount3  & count4  & ncount5  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c2'=0) & (c1'=c1+1) & (c4'=c4+1) & (c7'=c7+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & count3  & count4  & ncount5  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c2'=0) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c10'=c10+1);
	[s2] can2  & count1  & count3  & count4  & ncount5  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & ncount3  & ncount4  & count5  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c2'=0) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s2] can2  & count1  & ncount3  & ncount4  & count5  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c2'=0) & (c1'=c1+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & count3  & ncount4  & count5  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c2'=0) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s2] can2  & count1  & count3  & ncount4  & count5  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & ncount3  & count4  & count5  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c2'=0) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s2] can2  & count1  & ncount3  & count4  & count5  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c2'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & count3  & count4  & count5  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c2'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s2] can2  & count1  & count3  & count4  & count5  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & ncount3  & ncount4  & ncount5  & count6  & count7  & ncount8  & ncount9  & count10  -> (c2'=0) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s2] can2  & count1  & ncount3  & ncount4  & ncount5  & count6  & count7  & ncount8  & ncount9  & count10  -> (c2'=0) & (c1'=c1+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & count3  & ncount4  & ncount5  & count6  & count7  & ncount8  & ncount9  & count10  -> (c2'=0) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s2] can2  & count1  & count3  & ncount4  & ncount5  & count6  & count7  & ncount8  & ncount9  & count10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & ncount3  & count4  & ncount5  & count6  & count7  & ncount8  & ncount9  & count10  -> (c2'=0) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s2] can2  & count1  & ncount3  & count4  & ncount5  & count6  & count7  & ncount8  & ncount9  & count10  -> (c2'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & count3  & count4  & ncount5  & count6  & count7  & ncount8  & ncount9  & count10  -> (c2'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s2] can2  & count1  & count3  & count4  & ncount5  & count6  & count7  & ncount8  & ncount9  & count10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & ncount3  & ncount4  & count5  & count6  & count7  & ncount8  & ncount9  & count10  -> (c2'=0) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s2] can2  & count1  & ncount3  & ncount4  & count5  & count6  & count7  & ncount8  & ncount9  & count10  -> (c2'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & count3  & ncount4  & count5  & count6  & count7  & ncount8  & ncount9  & count10  -> (c2'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s2] can2  & count1  & count3  & ncount4  & count5  & count6  & count7  & ncount8  & ncount9  & count10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & ncount3  & count4  & count5  & count6  & count7  & ncount8  & ncount9  & count10  -> (c2'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s2] can2  & count1  & ncount3  & count4  & count5  & count6  & count7  & ncount8  & ncount9  & count10  -> (c2'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & count3  & count4  & count5  & count6  & count7  & ncount8  & ncount9  & count10  -> (c2'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s2] can2  & count1  & count3  & count4  & count5  & count6  & count7  & ncount8  & ncount9  & count10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c2'=0) & (c8'=c8+1) & (c10'=c10+1);
	[s2] can2  & count1  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c2'=0) & (c1'=c1+1) & (c8'=c8+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c2'=0) & (c3'=c3+1) & (c8'=c8+1) & (c10'=c10+1);
	[s2] can2  & count1  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c8'=c8+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c2'=0) & (c4'=c4+1) & (c8'=c8+1) & (c10'=c10+1);
	[s2] can2  & count1  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c2'=0) & (c1'=c1+1) & (c4'=c4+1) & (c8'=c8+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & count3  & count4  & ncount5  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c2'=0) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1) & (c10'=c10+1);
	[s2] can2  & count1  & count3  & count4  & ncount5  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c2'=0) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s2] can2  & count1  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c2'=0) & (c1'=c1+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & count3  & ncount4  & count5  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c2'=0) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s2] can2  & count1  & count3  & ncount4  & count5  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & ncount3  & count4  & count5  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c2'=0) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s2] can2  & count1  & ncount3  & count4  & count5  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c2'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & count3  & count4  & count5  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c2'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s2] can2  & count1  & count3  & count4  & count5  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & count8  & ncount9  & count10  -> (c2'=0) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s2] can2  & count1  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & count8  & ncount9  & count10  -> (c2'=0) & (c1'=c1+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & count3  & ncount4  & ncount5  & count6  & ncount7  & count8  & ncount9  & count10  -> (c2'=0) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s2] can2  & count1  & count3  & ncount4  & ncount5  & count6  & ncount7  & count8  & ncount9  & count10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & ncount3  & count4  & ncount5  & count6  & ncount7  & count8  & ncount9  & count10  -> (c2'=0) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s2] can2  & count1  & ncount3  & count4  & ncount5  & count6  & ncount7  & count8  & ncount9  & count10  -> (c2'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & count3  & count4  & ncount5  & count6  & ncount7  & count8  & ncount9  & count10  -> (c2'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s2] can2  & count1  & count3  & count4  & ncount5  & count6  & ncount7  & count8  & ncount9  & count10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & ncount3  & ncount4  & count5  & count6  & ncount7  & count8  & ncount9  & count10  -> (c2'=0) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s2] can2  & count1  & ncount3  & ncount4  & count5  & count6  & ncount7  & count8  & ncount9  & count10  -> (c2'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & count3  & ncount4  & count5  & count6  & ncount7  & count8  & ncount9  & count10  -> (c2'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s2] can2  & count1  & count3  & ncount4  & count5  & count6  & ncount7  & count8  & ncount9  & count10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & ncount3  & count4  & count5  & count6  & ncount7  & count8  & ncount9  & count10  -> (c2'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s2] can2  & count1  & ncount3  & count4  & count5  & count6  & ncount7  & count8  & ncount9  & count10  -> (c2'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & count3  & count4  & count5  & count6  & ncount7  & count8  & ncount9  & count10  -> (c2'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s2] can2  & count1  & count3  & count4  & count5  & count6  & ncount7  & count8  & ncount9  & count10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & count8  & ncount9  & count10  -> (c2'=0) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s2] can2  & count1  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & count8  & ncount9  & count10  -> (c2'=0) & (c1'=c1+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & count3  & ncount4  & ncount5  & ncount6  & count7  & count8  & ncount9  & count10  -> (c2'=0) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s2] can2  & count1  & count3  & ncount4  & ncount5  & ncount6  & count7  & count8  & ncount9  & count10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & ncount3  & count4  & ncount5  & ncount6  & count7  & count8  & ncount9  & count10  -> (c2'=0) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s2] can2  & count1  & ncount3  & count4  & ncount5  & ncount6  & count7  & count8  & ncount9  & count10  -> (c2'=0) & (c1'=c1+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & count3  & count4  & ncount5  & ncount6  & count7  & count8  & ncount9  & count10  -> (c2'=0) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s2] can2  & count1  & count3  & count4  & ncount5  & ncount6  & count7  & count8  & ncount9  & count10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & ncount3  & ncount4  & count5  & ncount6  & count7  & count8  & ncount9  & count10  -> (c2'=0) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s2] can2  & count1  & ncount3  & ncount4  & count5  & ncount6  & count7  & count8  & ncount9  & count10  -> (c2'=0) & (c1'=c1+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & count3  & ncount4  & count5  & ncount6  & count7  & count8  & ncount9  & count10  -> (c2'=0) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s2] can2  & count1  & count3  & ncount4  & count5  & ncount6  & count7  & count8  & ncount9  & count10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & ncount3  & count4  & count5  & ncount6  & count7  & count8  & ncount9  & count10  -> (c2'=0) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s2] can2  & count1  & ncount3  & count4  & count5  & ncount6  & count7  & count8  & ncount9  & count10  -> (c2'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & count3  & count4  & count5  & ncount6  & count7  & count8  & ncount9  & count10  -> (c2'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s2] can2  & count1  & count3  & count4  & count5  & ncount6  & count7  & count8  & ncount9  & count10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & ncount3  & ncount4  & ncount5  & count6  & count7  & count8  & ncount9  & count10  -> (c2'=0) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s2] can2  & count1  & ncount3  & ncount4  & ncount5  & count6  & count7  & count8  & ncount9  & count10  -> (c2'=0) & (c1'=c1+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & count3  & ncount4  & ncount5  & count6  & count7  & count8  & ncount9  & count10  -> (c2'=0) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s2] can2  & count1  & count3  & ncount4  & ncount5  & count6  & count7  & count8  & ncount9  & count10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & ncount3  & count4  & ncount5  & count6  & count7  & count8  & ncount9  & count10  -> (c2'=0) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s2] can2  & count1  & ncount3  & count4  & ncount5  & count6  & count7  & count8  & ncount9  & count10  -> (c2'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & count3  & count4  & ncount5  & count6  & count7  & count8  & ncount9  & count10  -> (c2'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s2] can2  & count1  & count3  & count4  & ncount5  & count6  & count7  & count8  & ncount9  & count10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & ncount3  & ncount4  & count5  & count6  & count7  & count8  & ncount9  & count10  -> (c2'=0) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s2] can2  & count1  & ncount3  & ncount4  & count5  & count6  & count7  & count8  & ncount9  & count10  -> (c2'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & count3  & ncount4  & count5  & count6  & count7  & count8  & ncount9  & count10  -> (c2'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s2] can2  & count1  & count3  & ncount4  & count5  & count6  & count7  & count8  & ncount9  & count10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & ncount3  & count4  & count5  & count6  & count7  & count8  & ncount9  & count10  -> (c2'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s2] can2  & count1  & ncount3  & count4  & count5  & count6  & count7  & count8  & ncount9  & count10  -> (c2'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & count3  & count4  & count5  & count6  & count7  & count8  & ncount9  & count10  -> (c2'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s2] can2  & count1  & count3  & count4  & count5  & count6  & count7  & count8  & ncount9  & count10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c2'=0) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & count1  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c2'=0) & (c1'=c1+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c2'=0) & (c3'=c3+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & count1  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c2'=0) & (c4'=c4+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & count1  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c2'=0) & (c1'=c1+1) & (c4'=c4+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & count3  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c2'=0) & (c3'=c3+1) & (c4'=c4+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & count1  & count3  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c2'=0) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & count1  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c2'=0) & (c1'=c1+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & count3  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c2'=0) & (c3'=c3+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & count1  & count3  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & ncount3  & count4  & count5  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c2'=0) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & count1  & ncount3  & count4  & count5  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c2'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & count3  & count4  & count5  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c2'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & count1  & count3  & count4  & count5  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & count9  & count10  -> (c2'=0) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & count1  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & count9  & count10  -> (c2'=0) & (c1'=c1+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & count3  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & count9  & count10  -> (c2'=0) & (c3'=c3+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & count1  & count3  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & count9  & count10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & ncount3  & count4  & ncount5  & count6  & ncount7  & ncount8  & count9  & count10  -> (c2'=0) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & count1  & ncount3  & count4  & ncount5  & count6  & ncount7  & ncount8  & count9  & count10  -> (c2'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & count3  & count4  & ncount5  & count6  & ncount7  & ncount8  & count9  & count10  -> (c2'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & count1  & count3  & count4  & ncount5  & count6  & ncount7  & ncount8  & count9  & count10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & ncount3  & ncount4  & count5  & count6  & ncount7  & ncount8  & count9  & count10  -> (c2'=0) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & count1  & ncount3  & ncount4  & count5  & count6  & ncount7  & ncount8  & count9  & count10  -> (c2'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & count3  & ncount4  & count5  & count6  & ncount7  & ncount8  & count9  & count10  -> (c2'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & count1  & count3  & ncount4  & count5  & count6  & ncount7  & ncount8  & count9  & count10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & ncount3  & count4  & count5  & count6  & ncount7  & ncount8  & count9  & count10  -> (c2'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & count1  & ncount3  & count4  & count5  & count6  & ncount7  & ncount8  & count9  & count10  -> (c2'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & count3  & count4  & count5  & count6  & ncount7  & ncount8  & count9  & count10  -> (c2'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & count1  & count3  & count4  & count5  & count6  & ncount7  & ncount8  & count9  & count10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & count9  & count10  -> (c2'=0) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & count1  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & count9  & count10  -> (c2'=0) & (c1'=c1+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & count3  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & count9  & count10  -> (c2'=0) & (c3'=c3+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & count1  & count3  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & count9  & count10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & ncount3  & count4  & ncount5  & ncount6  & count7  & ncount8  & count9  & count10  -> (c2'=0) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & count1  & ncount3  & count4  & ncount5  & ncount6  & count7  & ncount8  & count9  & count10  -> (c2'=0) & (c1'=c1+1) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & count3  & count4  & ncount5  & ncount6  & count7  & ncount8  & count9  & count10  -> (c2'=0) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & count1  & count3  & count4  & ncount5  & ncount6  & count7  & ncount8  & count9  & count10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & ncount3  & ncount4  & count5  & ncount6  & count7  & ncount8  & count9  & count10  -> (c2'=0) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & count1  & ncount3  & ncount4  & count5  & ncount6  & count7  & ncount8  & count9  & count10  -> (c2'=0) & (c1'=c1+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & count3  & ncount4  & count5  & ncount6  & count7  & ncount8  & count9  & count10  -> (c2'=0) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & count1  & count3  & ncount4  & count5  & ncount6  & count7  & ncount8  & count9  & count10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & ncount3  & count4  & count5  & ncount6  & count7  & ncount8  & count9  & count10  -> (c2'=0) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & count1  & ncount3  & count4  & count5  & ncount6  & count7  & ncount8  & count9  & count10  -> (c2'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & count3  & count4  & count5  & ncount6  & count7  & ncount8  & count9  & count10  -> (c2'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & count1  & count3  & count4  & count5  & ncount6  & count7  & ncount8  & count9  & count10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & ncount3  & ncount4  & ncount5  & count6  & count7  & ncount8  & count9  & count10  -> (c2'=0) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & count1  & ncount3  & ncount4  & ncount5  & count6  & count7  & ncount8  & count9  & count10  -> (c2'=0) & (c1'=c1+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & count3  & ncount4  & ncount5  & count6  & count7  & ncount8  & count9  & count10  -> (c2'=0) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & count1  & count3  & ncount4  & ncount5  & count6  & count7  & ncount8  & count9  & count10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & ncount3  & count4  & ncount5  & count6  & count7  & ncount8  & count9  & count10  -> (c2'=0) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & count1  & ncount3  & count4  & ncount5  & count6  & count7  & ncount8  & count9  & count10  -> (c2'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & count3  & count4  & ncount5  & count6  & count7  & ncount8  & count9  & count10  -> (c2'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & count1  & count3  & count4  & ncount5  & count6  & count7  & ncount8  & count9  & count10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & ncount3  & ncount4  & count5  & count6  & count7  & ncount8  & count9  & count10  -> (c2'=0) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & count1  & ncount3  & ncount4  & count5  & count6  & count7  & ncount8  & count9  & count10  -> (c2'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & count3  & ncount4  & count5  & count6  & count7  & ncount8  & count9  & count10  -> (c2'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & count1  & count3  & ncount4  & count5  & count6  & count7  & ncount8  & count9  & count10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & ncount3  & count4  & count5  & count6  & count7  & ncount8  & count9  & count10  -> (c2'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & count1  & ncount3  & count4  & count5  & count6  & count7  & ncount8  & count9  & count10  -> (c2'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & count3  & count4  & count5  & count6  & count7  & ncount8  & count9  & count10  -> (c2'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & count1  & count3  & count4  & count5  & count6  & count7  & ncount8  & count9  & count10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & count9  & count10  -> (c2'=0) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & count1  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & count9  & count10  -> (c2'=0) & (c1'=c1+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & count9  & count10  -> (c2'=0) & (c3'=c3+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & count1  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & count9  & count10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & count8  & count9  & count10  -> (c2'=0) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & count1  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & count8  & count9  & count10  -> (c2'=0) & (c1'=c1+1) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & count3  & count4  & ncount5  & ncount6  & ncount7  & count8  & count9  & count10  -> (c2'=0) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & count1  & count3  & count4  & ncount5  & ncount6  & ncount7  & count8  & count9  & count10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & count8  & count9  & count10  -> (c2'=0) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & count1  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & count8  & count9  & count10  -> (c2'=0) & (c1'=c1+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & count3  & ncount4  & count5  & ncount6  & ncount7  & count8  & count9  & count10  -> (c2'=0) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & count1  & count3  & ncount4  & count5  & ncount6  & ncount7  & count8  & count9  & count10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & ncount3  & count4  & count5  & ncount6  & ncount7  & count8  & count9  & count10  -> (c2'=0) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & count1  & ncount3  & count4  & count5  & ncount6  & ncount7  & count8  & count9  & count10  -> (c2'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & count3  & count4  & count5  & ncount6  & ncount7  & count8  & count9  & count10  -> (c2'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & count1  & count3  & count4  & count5  & ncount6  & ncount7  & count8  & count9  & count10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & count8  & count9  & count10  -> (c2'=0) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & count1  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & count8  & count9  & count10  -> (c2'=0) & (c1'=c1+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & count3  & ncount4  & ncount5  & count6  & ncount7  & count8  & count9  & count10  -> (c2'=0) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & count1  & count3  & ncount4  & ncount5  & count6  & ncount7  & count8  & count9  & count10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & ncount3  & count4  & ncount5  & count6  & ncount7  & count8  & count9  & count10  -> (c2'=0) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & count1  & ncount3  & count4  & ncount5  & count6  & ncount7  & count8  & count9  & count10  -> (c2'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & count3  & count4  & ncount5  & count6  & ncount7  & count8  & count9  & count10  -> (c2'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & count1  & count3  & count4  & ncount5  & count6  & ncount7  & count8  & count9  & count10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & ncount3  & ncount4  & count5  & count6  & ncount7  & count8  & count9  & count10  -> (c2'=0) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & count1  & ncount3  & ncount4  & count5  & count6  & ncount7  & count8  & count9  & count10  -> (c2'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & count3  & ncount4  & count5  & count6  & ncount7  & count8  & count9  & count10  -> (c2'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & count1  & count3  & ncount4  & count5  & count6  & ncount7  & count8  & count9  & count10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & ncount3  & count4  & count5  & count6  & ncount7  & count8  & count9  & count10  -> (c2'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & count1  & ncount3  & count4  & count5  & count6  & ncount7  & count8  & count9  & count10  -> (c2'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & count3  & count4  & count5  & count6  & ncount7  & count8  & count9  & count10  -> (c2'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & count1  & count3  & count4  & count5  & count6  & ncount7  & count8  & count9  & count10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & count8  & count9  & count10  -> (c2'=0) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & count1  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & count8  & count9  & count10  -> (c2'=0) & (c1'=c1+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & count3  & ncount4  & ncount5  & ncount6  & count7  & count8  & count9  & count10  -> (c2'=0) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & count1  & count3  & ncount4  & ncount5  & ncount6  & count7  & count8  & count9  & count10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & ncount3  & count4  & ncount5  & ncount6  & count7  & count8  & count9  & count10  -> (c2'=0) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & count1  & ncount3  & count4  & ncount5  & ncount6  & count7  & count8  & count9  & count10  -> (c2'=0) & (c1'=c1+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & count3  & count4  & ncount5  & ncount6  & count7  & count8  & count9  & count10  -> (c2'=0) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & count1  & count3  & count4  & ncount5  & ncount6  & count7  & count8  & count9  & count10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & ncount3  & ncount4  & count5  & ncount6  & count7  & count8  & count9  & count10  -> (c2'=0) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & count1  & ncount3  & ncount4  & count5  & ncount6  & count7  & count8  & count9  & count10  -> (c2'=0) & (c1'=c1+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & count3  & ncount4  & count5  & ncount6  & count7  & count8  & count9  & count10  -> (c2'=0) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & count1  & count3  & ncount4  & count5  & ncount6  & count7  & count8  & count9  & count10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & ncount3  & count4  & count5  & ncount6  & count7  & count8  & count9  & count10  -> (c2'=0) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & count1  & ncount3  & count4  & count5  & ncount6  & count7  & count8  & count9  & count10  -> (c2'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & count3  & count4  & count5  & ncount6  & count7  & count8  & count9  & count10  -> (c2'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & count1  & count3  & count4  & count5  & ncount6  & count7  & count8  & count9  & count10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & ncount3  & ncount4  & ncount5  & count6  & count7  & count8  & count9  & count10  -> (c2'=0) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & count1  & ncount3  & ncount4  & ncount5  & count6  & count7  & count8  & count9  & count10  -> (c2'=0) & (c1'=c1+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & count3  & ncount4  & ncount5  & count6  & count7  & count8  & count9  & count10  -> (c2'=0) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & count1  & count3  & ncount4  & ncount5  & count6  & count7  & count8  & count9  & count10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & ncount3  & count4  & ncount5  & count6  & count7  & count8  & count9  & count10  -> (c2'=0) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & count1  & ncount3  & count4  & ncount5  & count6  & count7  & count8  & count9  & count10  -> (c2'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & count3  & count4  & ncount5  & count6  & count7  & count8  & count9  & count10  -> (c2'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & count1  & count3  & count4  & ncount5  & count6  & count7  & count8  & count9  & count10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & ncount3  & ncount4  & count5  & count6  & count7  & count8  & count9  & count10  -> (c2'=0) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & count1  & ncount3  & ncount4  & count5  & count6  & count7  & count8  & count9  & count10  -> (c2'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & count3  & ncount4  & count5  & count6  & count7  & count8  & count9  & count10  -> (c2'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & count1  & count3  & ncount4  & count5  & count6  & count7  & count8  & count9  & count10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & ncount3  & count4  & count5  & count6  & count7  & count8  & count9  & count10  -> (c2'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & count1  & ncount3  & count4  & count5  & count6  & count7  & count8  & count9  & count10  -> (c2'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & ncount1  & count3  & count4  & count5  & count6  & count7  & count8  & count9  & count10  -> (c2'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s2] can2  & count1  & count3  & count4  & count5  & count6  & count7  & count8  & count9  & count10  -> (c2'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & ncount2  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c3'=0);
	[s3] can3  & count1  & ncount2  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c3'=0) & (c1'=c1+1);
	[s3] can3  & ncount1  & count2  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c3'=0) & (c2'=c2+1);
	[s3] can3  & count1  & count2  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1);
	[s3] can3  & ncount1  & ncount2  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c3'=0) & (c4'=c4+1);
	[s3] can3  & count1  & ncount2  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c4'=c4+1);
	[s3] can3  & ncount1  & count2  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c3'=0) & (c2'=c2+1) & (c4'=c4+1);
	[s3] can3  & count1  & count2  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1);
	[s3] can3  & ncount1  & ncount2  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c3'=0) & (c5'=c5+1);
	[s3] can3  & count1  & ncount2  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c5'=c5+1);
	[s3] can3  & ncount1  & count2  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c3'=0) & (c2'=c2+1) & (c5'=c5+1);
	[s3] can3  & count1  & count2  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1);
	[s3] can3  & ncount1  & ncount2  & count4  & count5  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c3'=0) & (c4'=c4+1) & (c5'=c5+1);
	[s3] can3  & count1  & ncount2  & count4  & count5  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1);
	[s3] can3  & ncount1  & count2  & count4  & count5  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c3'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1);
	[s3] can3  & count1  & count2  & count4  & count5  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1);
	[s3] can3  & ncount1  & ncount2  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c3'=0) & (c6'=c6+1);
	[s3] can3  & count1  & ncount2  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c6'=c6+1);
	[s3] can3  & ncount1  & count2  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c3'=0) & (c2'=c2+1) & (c6'=c6+1);
	[s3] can3  & count1  & count2  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1);
	[s3] can3  & ncount1  & ncount2  & count4  & ncount5  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c3'=0) & (c4'=c4+1) & (c6'=c6+1);
	[s3] can3  & count1  & ncount2  & count4  & ncount5  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1);
	[s3] can3  & ncount1  & count2  & count4  & ncount5  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c3'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1);
	[s3] can3  & count1  & count2  & count4  & ncount5  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1);
	[s3] can3  & ncount1  & ncount2  & ncount4  & count5  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c3'=0) & (c5'=c5+1) & (c6'=c6+1);
	[s3] can3  & count1  & ncount2  & ncount4  & count5  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1);
	[s3] can3  & ncount1  & count2  & ncount4  & count5  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c3'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1);
	[s3] can3  & count1  & count2  & ncount4  & count5  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1);
	[s3] can3  & ncount1  & ncount2  & count4  & count5  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c3'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1);
	[s3] can3  & count1  & ncount2  & count4  & count5  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1);
	[s3] can3  & ncount1  & count2  & count4  & count5  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c3'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1);
	[s3] can3  & count1  & count2  & count4  & count5  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1);
	[s3] can3  & ncount1  & ncount2  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c3'=0) & (c7'=c7+1);
	[s3] can3  & count1  & ncount2  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c7'=c7+1);
	[s3] can3  & ncount1  & count2  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c3'=0) & (c2'=c2+1) & (c7'=c7+1);
	[s3] can3  & count1  & count2  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c7'=c7+1);
	[s3] can3  & ncount1  & ncount2  & count4  & ncount5  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c3'=0) & (c4'=c4+1) & (c7'=c7+1);
	[s3] can3  & count1  & ncount2  & count4  & ncount5  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c4'=c4+1) & (c7'=c7+1);
	[s3] can3  & ncount1  & count2  & count4  & ncount5  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c3'=0) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1);
	[s3] can3  & count1  & count2  & count4  & ncount5  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1);
	[s3] can3  & ncount1  & ncount2  & ncount4  & count5  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c3'=0) & (c5'=c5+1) & (c7'=c7+1);
	[s3] can3  & count1  & ncount2  & ncount4  & count5  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c5'=c5+1) & (c7'=c7+1);
	[s3] can3  & ncount1  & count2  & ncount4  & count5  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c3'=0) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1);
	[s3] can3  & count1  & count2  & ncount4  & count5  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1);
	[s3] can3  & ncount1  & ncount2  & count4  & count5  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c3'=0) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1);
	[s3] can3  & count1  & ncount2  & count4  & count5  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1);
	[s3] can3  & ncount1  & count2  & count4  & count5  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c3'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1);
	[s3] can3  & count1  & count2  & count4  & count5  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1);
	[s3] can3  & ncount1  & ncount2  & ncount4  & ncount5  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c3'=0) & (c6'=c6+1) & (c7'=c7+1);
	[s3] can3  & count1  & ncount2  & ncount4  & ncount5  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c6'=c6+1) & (c7'=c7+1);
	[s3] can3  & ncount1  & count2  & ncount4  & ncount5  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c3'=0) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1);
	[s3] can3  & count1  & count2  & ncount4  & ncount5  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1);
	[s3] can3  & ncount1  & ncount2  & count4  & ncount5  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c3'=0) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1);
	[s3] can3  & count1  & ncount2  & count4  & ncount5  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1);
	[s3] can3  & ncount1  & count2  & count4  & ncount5  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c3'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1);
	[s3] can3  & count1  & count2  & count4  & ncount5  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1);
	[s3] can3  & ncount1  & ncount2  & ncount4  & count5  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c3'=0) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s3] can3  & count1  & ncount2  & ncount4  & count5  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s3] can3  & ncount1  & count2  & ncount4  & count5  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c3'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s3] can3  & count1  & count2  & ncount4  & count5  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s3] can3  & ncount1  & ncount2  & count4  & count5  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c3'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s3] can3  & count1  & ncount2  & count4  & count5  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s3] can3  & ncount1  & count2  & count4  & count5  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c3'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s3] can3  & count1  & count2  & count4  & count5  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s3] can3  & ncount1  & ncount2  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c3'=0) & (c8'=c8+1);
	[s3] can3  & count1  & ncount2  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c8'=c8+1);
	[s3] can3  & ncount1  & count2  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c3'=0) & (c2'=c2+1) & (c8'=c8+1);
	[s3] can3  & count1  & count2  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c8'=c8+1);
	[s3] can3  & ncount1  & ncount2  & count4  & ncount5  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c3'=0) & (c4'=c4+1) & (c8'=c8+1);
	[s3] can3  & count1  & ncount2  & count4  & ncount5  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c4'=c4+1) & (c8'=c8+1);
	[s3] can3  & ncount1  & count2  & count4  & ncount5  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c3'=0) & (c2'=c2+1) & (c4'=c4+1) & (c8'=c8+1);
	[s3] can3  & count1  & count2  & count4  & ncount5  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c8'=c8+1);
	[s3] can3  & ncount1  & ncount2  & ncount4  & count5  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c3'=0) & (c5'=c5+1) & (c8'=c8+1);
	[s3] can3  & count1  & ncount2  & ncount4  & count5  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c5'=c5+1) & (c8'=c8+1);
	[s3] can3  & ncount1  & count2  & ncount4  & count5  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c3'=0) & (c2'=c2+1) & (c5'=c5+1) & (c8'=c8+1);
	[s3] can3  & count1  & count2  & ncount4  & count5  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c8'=c8+1);
	[s3] can3  & ncount1  & ncount2  & count4  & count5  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c3'=0) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1);
	[s3] can3  & count1  & ncount2  & count4  & count5  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1);
	[s3] can3  & ncount1  & count2  & count4  & count5  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c3'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1);
	[s3] can3  & count1  & count2  & count4  & count5  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1);
	[s3] can3  & ncount1  & ncount2  & ncount4  & ncount5  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c3'=0) & (c6'=c6+1) & (c8'=c8+1);
	[s3] can3  & count1  & ncount2  & ncount4  & ncount5  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c6'=c6+1) & (c8'=c8+1);
	[s3] can3  & ncount1  & count2  & ncount4  & ncount5  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c3'=0) & (c2'=c2+1) & (c6'=c6+1) & (c8'=c8+1);
	[s3] can3  & count1  & count2  & ncount4  & ncount5  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c8'=c8+1);
	[s3] can3  & ncount1  & ncount2  & count4  & ncount5  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c3'=0) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1);
	[s3] can3  & count1  & ncount2  & count4  & ncount5  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1);
	[s3] can3  & ncount1  & count2  & count4  & ncount5  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c3'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1);
	[s3] can3  & count1  & count2  & count4  & ncount5  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1);
	[s3] can3  & ncount1  & ncount2  & ncount4  & count5  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c3'=0) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s3] can3  & count1  & ncount2  & ncount4  & count5  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s3] can3  & ncount1  & count2  & ncount4  & count5  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c3'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s3] can3  & count1  & count2  & ncount4  & count5  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s3] can3  & ncount1  & ncount2  & count4  & count5  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c3'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s3] can3  & count1  & ncount2  & count4  & count5  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s3] can3  & ncount1  & count2  & count4  & count5  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c3'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s3] can3  & count1  & count2  & count4  & count5  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s3] can3  & ncount1  & ncount2  & ncount4  & ncount5  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c3'=0) & (c7'=c7+1) & (c8'=c8+1);
	[s3] can3  & count1  & ncount2  & ncount4  & ncount5  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c7'=c7+1) & (c8'=c8+1);
	[s3] can3  & ncount1  & count2  & ncount4  & ncount5  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c3'=0) & (c2'=c2+1) & (c7'=c7+1) & (c8'=c8+1);
	[s3] can3  & count1  & count2  & ncount4  & ncount5  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c7'=c7+1) & (c8'=c8+1);
	[s3] can3  & ncount1  & ncount2  & count4  & ncount5  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c3'=0) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1);
	[s3] can3  & count1  & ncount2  & count4  & ncount5  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1);
	[s3] can3  & ncount1  & count2  & count4  & ncount5  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c3'=0) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1);
	[s3] can3  & count1  & count2  & count4  & ncount5  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1);
	[s3] can3  & ncount1  & ncount2  & ncount4  & count5  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c3'=0) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s3] can3  & count1  & ncount2  & ncount4  & count5  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s3] can3  & ncount1  & count2  & ncount4  & count5  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c3'=0) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s3] can3  & count1  & count2  & ncount4  & count5  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s3] can3  & ncount1  & ncount2  & count4  & count5  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c3'=0) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s3] can3  & count1  & ncount2  & count4  & count5  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s3] can3  & ncount1  & count2  & count4  & count5  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c3'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s3] can3  & count1  & count2  & count4  & count5  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s3] can3  & ncount1  & ncount2  & ncount4  & ncount5  & count6  & count7  & count8  & ncount9  & ncount10  -> (c3'=0) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s3] can3  & count1  & ncount2  & ncount4  & ncount5  & count6  & count7  & count8  & ncount9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s3] can3  & ncount1  & count2  & ncount4  & ncount5  & count6  & count7  & count8  & ncount9  & ncount10  -> (c3'=0) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s3] can3  & count1  & count2  & ncount4  & ncount5  & count6  & count7  & count8  & ncount9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s3] can3  & ncount1  & ncount2  & count4  & ncount5  & count6  & count7  & count8  & ncount9  & ncount10  -> (c3'=0) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s3] can3  & count1  & ncount2  & count4  & ncount5  & count6  & count7  & count8  & ncount9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s3] can3  & ncount1  & count2  & count4  & ncount5  & count6  & count7  & count8  & ncount9  & ncount10  -> (c3'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s3] can3  & count1  & count2  & count4  & ncount5  & count6  & count7  & count8  & ncount9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s3] can3  & ncount1  & ncount2  & ncount4  & count5  & count6  & count7  & count8  & ncount9  & ncount10  -> (c3'=0) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s3] can3  & count1  & ncount2  & ncount4  & count5  & count6  & count7  & count8  & ncount9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s3] can3  & ncount1  & count2  & ncount4  & count5  & count6  & count7  & count8  & ncount9  & ncount10  -> (c3'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s3] can3  & count1  & count2  & ncount4  & count5  & count6  & count7  & count8  & ncount9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s3] can3  & ncount1  & ncount2  & count4  & count5  & count6  & count7  & count8  & ncount9  & ncount10  -> (c3'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s3] can3  & count1  & ncount2  & count4  & count5  & count6  & count7  & count8  & ncount9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s3] can3  & ncount1  & count2  & count4  & count5  & count6  & count7  & count8  & ncount9  & ncount10  -> (c3'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s3] can3  & count1  & count2  & count4  & count5  & count6  & count7  & count8  & ncount9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s3] can3  & ncount1  & ncount2  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c3'=0) & (c9'=c9+1);
	[s3] can3  & count1  & ncount2  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c9'=c9+1);
	[s3] can3  & ncount1  & count2  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c3'=0) & (c2'=c2+1) & (c9'=c9+1);
	[s3] can3  & count1  & count2  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c9'=c9+1);
	[s3] can3  & ncount1  & ncount2  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c3'=0) & (c4'=c4+1) & (c9'=c9+1);
	[s3] can3  & count1  & ncount2  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c4'=c4+1) & (c9'=c9+1);
	[s3] can3  & ncount1  & count2  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c3'=0) & (c2'=c2+1) & (c4'=c4+1) & (c9'=c9+1);
	[s3] can3  & count1  & count2  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c9'=c9+1);
	[s3] can3  & ncount1  & ncount2  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c3'=0) & (c5'=c5+1) & (c9'=c9+1);
	[s3] can3  & count1  & ncount2  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c5'=c5+1) & (c9'=c9+1);
	[s3] can3  & ncount1  & count2  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c3'=0) & (c2'=c2+1) & (c5'=c5+1) & (c9'=c9+1);
	[s3] can3  & count1  & count2  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c9'=c9+1);
	[s3] can3  & ncount1  & ncount2  & count4  & count5  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c3'=0) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1);
	[s3] can3  & count1  & ncount2  & count4  & count5  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1);
	[s3] can3  & ncount1  & count2  & count4  & count5  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c3'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1);
	[s3] can3  & count1  & count2  & count4  & count5  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1);
	[s3] can3  & ncount1  & ncount2  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c3'=0) & (c6'=c6+1) & (c9'=c9+1);
	[s3] can3  & count1  & ncount2  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c6'=c6+1) & (c9'=c9+1);
	[s3] can3  & ncount1  & count2  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c3'=0) & (c2'=c2+1) & (c6'=c6+1) & (c9'=c9+1);
	[s3] can3  & count1  & count2  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c9'=c9+1);
	[s3] can3  & ncount1  & ncount2  & count4  & ncount5  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c3'=0) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1);
	[s3] can3  & count1  & ncount2  & count4  & ncount5  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1);
	[s3] can3  & ncount1  & count2  & count4  & ncount5  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c3'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1);
	[s3] can3  & count1  & count2  & count4  & ncount5  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1);
	[s3] can3  & ncount1  & ncount2  & ncount4  & count5  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c3'=0) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s3] can3  & count1  & ncount2  & ncount4  & count5  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s3] can3  & ncount1  & count2  & ncount4  & count5  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c3'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s3] can3  & count1  & count2  & ncount4  & count5  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s3] can3  & ncount1  & ncount2  & count4  & count5  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c3'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s3] can3  & count1  & ncount2  & count4  & count5  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s3] can3  & ncount1  & count2  & count4  & count5  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c3'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s3] can3  & count1  & count2  & count4  & count5  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s3] can3  & ncount1  & ncount2  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c3'=0) & (c7'=c7+1) & (c9'=c9+1);
	[s3] can3  & count1  & ncount2  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c7'=c7+1) & (c9'=c9+1);
	[s3] can3  & ncount1  & count2  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c3'=0) & (c2'=c2+1) & (c7'=c7+1) & (c9'=c9+1);
	[s3] can3  & count1  & count2  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c7'=c7+1) & (c9'=c9+1);
	[s3] can3  & ncount1  & ncount2  & count4  & ncount5  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c3'=0) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1);
	[s3] can3  & count1  & ncount2  & count4  & ncount5  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1);
	[s3] can3  & ncount1  & count2  & count4  & ncount5  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c3'=0) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1);
	[s3] can3  & count1  & count2  & count4  & ncount5  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1);
	[s3] can3  & ncount1  & ncount2  & ncount4  & count5  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c3'=0) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s3] can3  & count1  & ncount2  & ncount4  & count5  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s3] can3  & ncount1  & count2  & ncount4  & count5  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c3'=0) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s3] can3  & count1  & count2  & ncount4  & count5  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s3] can3  & ncount1  & ncount2  & count4  & count5  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c3'=0) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s3] can3  & count1  & ncount2  & count4  & count5  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s3] can3  & ncount1  & count2  & count4  & count5  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c3'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s3] can3  & count1  & count2  & count4  & count5  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s3] can3  & ncount1  & ncount2  & ncount4  & ncount5  & count6  & count7  & ncount8  & count9  & ncount10  -> (c3'=0) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s3] can3  & count1  & ncount2  & ncount4  & ncount5  & count6  & count7  & ncount8  & count9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s3] can3  & ncount1  & count2  & ncount4  & ncount5  & count6  & count7  & ncount8  & count9  & ncount10  -> (c3'=0) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s3] can3  & count1  & count2  & ncount4  & ncount5  & count6  & count7  & ncount8  & count9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s3] can3  & ncount1  & ncount2  & count4  & ncount5  & count6  & count7  & ncount8  & count9  & ncount10  -> (c3'=0) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s3] can3  & count1  & ncount2  & count4  & ncount5  & count6  & count7  & ncount8  & count9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s3] can3  & ncount1  & count2  & count4  & ncount5  & count6  & count7  & ncount8  & count9  & ncount10  -> (c3'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s3] can3  & count1  & count2  & count4  & ncount5  & count6  & count7  & ncount8  & count9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s3] can3  & ncount1  & ncount2  & ncount4  & count5  & count6  & count7  & ncount8  & count9  & ncount10  -> (c3'=0) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s3] can3  & count1  & ncount2  & ncount4  & count5  & count6  & count7  & ncount8  & count9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s3] can3  & ncount1  & count2  & ncount4  & count5  & count6  & count7  & ncount8  & count9  & ncount10  -> (c3'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s3] can3  & count1  & count2  & ncount4  & count5  & count6  & count7  & ncount8  & count9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s3] can3  & ncount1  & ncount2  & count4  & count5  & count6  & count7  & ncount8  & count9  & ncount10  -> (c3'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s3] can3  & count1  & ncount2  & count4  & count5  & count6  & count7  & ncount8  & count9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s3] can3  & ncount1  & count2  & count4  & count5  & count6  & count7  & ncount8  & count9  & ncount10  -> (c3'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s3] can3  & count1  & count2  & count4  & count5  & count6  & count7  & ncount8  & count9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s3] can3  & ncount1  & ncount2  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c3'=0) & (c8'=c8+1) & (c9'=c9+1);
	[s3] can3  & count1  & ncount2  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c8'=c8+1) & (c9'=c9+1);
	[s3] can3  & ncount1  & count2  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c3'=0) & (c2'=c2+1) & (c8'=c8+1) & (c9'=c9+1);
	[s3] can3  & count1  & count2  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c8'=c8+1) & (c9'=c9+1);
	[s3] can3  & ncount1  & ncount2  & count4  & ncount5  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c3'=0) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1);
	[s3] can3  & count1  & ncount2  & count4  & ncount5  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1);
	[s3] can3  & ncount1  & count2  & count4  & ncount5  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c3'=0) & (c2'=c2+1) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1);
	[s3] can3  & count1  & count2  & count4  & ncount5  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1);
	[s3] can3  & ncount1  & ncount2  & ncount4  & count5  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c3'=0) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s3] can3  & count1  & ncount2  & ncount4  & count5  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s3] can3  & ncount1  & count2  & ncount4  & count5  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c3'=0) & (c2'=c2+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s3] can3  & count1  & count2  & ncount4  & count5  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s3] can3  & ncount1  & ncount2  & count4  & count5  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c3'=0) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s3] can3  & count1  & ncount2  & count4  & count5  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s3] can3  & ncount1  & count2  & count4  & count5  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c3'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s3] can3  & count1  & count2  & count4  & count5  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s3] can3  & ncount1  & ncount2  & ncount4  & ncount5  & count6  & ncount7  & count8  & count9  & ncount10  -> (c3'=0) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s3] can3  & count1  & ncount2  & ncount4  & ncount5  & count6  & ncount7  & count8  & count9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s3] can3  & ncount1  & count2  & ncount4  & ncount5  & count6  & ncount7  & count8  & count9  & ncount10  -> (c3'=0) & (c2'=c2+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s3] can3  & count1  & count2  & ncount4  & ncount5  & count6  & ncount7  & count8  & count9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s3] can3  & ncount1  & ncount2  & count4  & ncount5  & count6  & ncount7  & count8  & count9  & ncount10  -> (c3'=0) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s3] can3  & count1  & ncount2  & count4  & ncount5  & count6  & ncount7  & count8  & count9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s3] can3  & ncount1  & count2  & count4  & ncount5  & count6  & ncount7  & count8  & count9  & ncount10  -> (c3'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s3] can3  & count1  & count2  & count4  & ncount5  & count6  & ncount7  & count8  & count9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s3] can3  & ncount1  & ncount2  & ncount4  & count5  & count6  & ncount7  & count8  & count9  & ncount10  -> (c3'=0) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s3] can3  & count1  & ncount2  & ncount4  & count5  & count6  & ncount7  & count8  & count9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s3] can3  & ncount1  & count2  & ncount4  & count5  & count6  & ncount7  & count8  & count9  & ncount10  -> (c3'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s3] can3  & count1  & count2  & ncount4  & count5  & count6  & ncount7  & count8  & count9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s3] can3  & ncount1  & ncount2  & count4  & count5  & count6  & ncount7  & count8  & count9  & ncount10  -> (c3'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s3] can3  & count1  & ncount2  & count4  & count5  & count6  & ncount7  & count8  & count9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s3] can3  & ncount1  & count2  & count4  & count5  & count6  & ncount7  & count8  & count9  & ncount10  -> (c3'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s3] can3  & count1  & count2  & count4  & count5  & count6  & ncount7  & count8  & count9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s3] can3  & ncount1  & ncount2  & ncount4  & ncount5  & ncount6  & count7  & count8  & count9  & ncount10  -> (c3'=0) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s3] can3  & count1  & ncount2  & ncount4  & ncount5  & ncount6  & count7  & count8  & count9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s3] can3  & ncount1  & count2  & ncount4  & ncount5  & ncount6  & count7  & count8  & count9  & ncount10  -> (c3'=0) & (c2'=c2+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s3] can3  & count1  & count2  & ncount4  & ncount5  & ncount6  & count7  & count8  & count9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s3] can3  & ncount1  & ncount2  & count4  & ncount5  & ncount6  & count7  & count8  & count9  & ncount10  -> (c3'=0) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s3] can3  & count1  & ncount2  & count4  & ncount5  & ncount6  & count7  & count8  & count9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s3] can3  & ncount1  & count2  & count4  & ncount5  & ncount6  & count7  & count8  & count9  & ncount10  -> (c3'=0) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s3] can3  & count1  & count2  & count4  & ncount5  & ncount6  & count7  & count8  & count9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s3] can3  & ncount1  & ncount2  & ncount4  & count5  & ncount6  & count7  & count8  & count9  & ncount10  -> (c3'=0) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s3] can3  & count1  & ncount2  & ncount4  & count5  & ncount6  & count7  & count8  & count9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s3] can3  & ncount1  & count2  & ncount4  & count5  & ncount6  & count7  & count8  & count9  & ncount10  -> (c3'=0) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s3] can3  & count1  & count2  & ncount4  & count5  & ncount6  & count7  & count8  & count9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s3] can3  & ncount1  & ncount2  & count4  & count5  & ncount6  & count7  & count8  & count9  & ncount10  -> (c3'=0) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s3] can3  & count1  & ncount2  & count4  & count5  & ncount6  & count7  & count8  & count9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s3] can3  & ncount1  & count2  & count4  & count5  & ncount6  & count7  & count8  & count9  & ncount10  -> (c3'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s3] can3  & count1  & count2  & count4  & count5  & ncount6  & count7  & count8  & count9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s3] can3  & ncount1  & ncount2  & ncount4  & ncount5  & count6  & count7  & count8  & count9  & ncount10  -> (c3'=0) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s3] can3  & count1  & ncount2  & ncount4  & ncount5  & count6  & count7  & count8  & count9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s3] can3  & ncount1  & count2  & ncount4  & ncount5  & count6  & count7  & count8  & count9  & ncount10  -> (c3'=0) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s3] can3  & count1  & count2  & ncount4  & ncount5  & count6  & count7  & count8  & count9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s3] can3  & ncount1  & ncount2  & count4  & ncount5  & count6  & count7  & count8  & count9  & ncount10  -> (c3'=0) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s3] can3  & count1  & ncount2  & count4  & ncount5  & count6  & count7  & count8  & count9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s3] can3  & ncount1  & count2  & count4  & ncount5  & count6  & count7  & count8  & count9  & ncount10  -> (c3'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s3] can3  & count1  & count2  & count4  & ncount5  & count6  & count7  & count8  & count9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s3] can3  & ncount1  & ncount2  & ncount4  & count5  & count6  & count7  & count8  & count9  & ncount10  -> (c3'=0) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s3] can3  & count1  & ncount2  & ncount4  & count5  & count6  & count7  & count8  & count9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s3] can3  & ncount1  & count2  & ncount4  & count5  & count6  & count7  & count8  & count9  & ncount10  -> (c3'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s3] can3  & count1  & count2  & ncount4  & count5  & count6  & count7  & count8  & count9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s3] can3  & ncount1  & ncount2  & count4  & count5  & count6  & count7  & count8  & count9  & ncount10  -> (c3'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s3] can3  & count1  & ncount2  & count4  & count5  & count6  & count7  & count8  & count9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s3] can3  & ncount1  & count2  & count4  & count5  & count6  & count7  & count8  & count9  & ncount10  -> (c3'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s3] can3  & count1  & count2  & count4  & count5  & count6  & count7  & count8  & count9  & ncount10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s3] can3  & ncount1  & ncount2  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c3'=0) & (c10'=c10+1);
	[s3] can3  & count1  & ncount2  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c3'=0) & (c1'=c1+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & count2  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c3'=0) & (c2'=c2+1) & (c10'=c10+1);
	[s3] can3  & count1  & count2  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & ncount2  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c3'=0) & (c4'=c4+1) & (c10'=c10+1);
	[s3] can3  & count1  & ncount2  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c3'=0) & (c1'=c1+1) & (c4'=c4+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & count2  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c3'=0) & (c2'=c2+1) & (c4'=c4+1) & (c10'=c10+1);
	[s3] can3  & count1  & count2  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & ncount2  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c3'=0) & (c5'=c5+1) & (c10'=c10+1);
	[s3] can3  & count1  & ncount2  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c3'=0) & (c1'=c1+1) & (c5'=c5+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & count2  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c3'=0) & (c2'=c2+1) & (c5'=c5+1) & (c10'=c10+1);
	[s3] can3  & count1  & count2  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & ncount2  & count4  & count5  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c3'=0) & (c4'=c4+1) & (c5'=c5+1) & (c10'=c10+1);
	[s3] can3  & count1  & ncount2  & count4  & count5  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c3'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & count2  & count4  & count5  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c3'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c10'=c10+1);
	[s3] can3  & count1  & count2  & count4  & count5  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & ncount2  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c3'=0) & (c6'=c6+1) & (c10'=c10+1);
	[s3] can3  & count1  & ncount2  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c3'=0) & (c1'=c1+1) & (c6'=c6+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & count2  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c3'=0) & (c2'=c2+1) & (c6'=c6+1) & (c10'=c10+1);
	[s3] can3  & count1  & count2  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & ncount2  & count4  & ncount5  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c3'=0) & (c4'=c4+1) & (c6'=c6+1) & (c10'=c10+1);
	[s3] can3  & count1  & ncount2  & count4  & ncount5  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c3'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & count2  & count4  & ncount5  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c3'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c10'=c10+1);
	[s3] can3  & count1  & count2  & count4  & ncount5  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & ncount2  & ncount4  & count5  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c3'=0) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s3] can3  & count1  & ncount2  & ncount4  & count5  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c3'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & count2  & ncount4  & count5  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c3'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s3] can3  & count1  & count2  & ncount4  & count5  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & ncount2  & count4  & count5  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c3'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s3] can3  & count1  & ncount2  & count4  & count5  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c3'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & count2  & count4  & count5  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c3'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s3] can3  & count1  & count2  & count4  & count5  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & ncount2  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c3'=0) & (c7'=c7+1) & (c10'=c10+1);
	[s3] can3  & count1  & ncount2  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c3'=0) & (c1'=c1+1) & (c7'=c7+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & count2  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c3'=0) & (c2'=c2+1) & (c7'=c7+1) & (c10'=c10+1);
	[s3] can3  & count1  & count2  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c7'=c7+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & ncount2  & count4  & ncount5  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c3'=0) & (c4'=c4+1) & (c7'=c7+1) & (c10'=c10+1);
	[s3] can3  & count1  & ncount2  & count4  & ncount5  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c3'=0) & (c1'=c1+1) & (c4'=c4+1) & (c7'=c7+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & count2  & count4  & ncount5  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c3'=0) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1) & (c10'=c10+1);
	[s3] can3  & count1  & count2  & count4  & ncount5  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & ncount2  & ncount4  & count5  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c3'=0) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s3] can3  & count1  & ncount2  & ncount4  & count5  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c3'=0) & (c1'=c1+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & count2  & ncount4  & count5  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c3'=0) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s3] can3  & count1  & count2  & ncount4  & count5  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & ncount2  & count4  & count5  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c3'=0) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s3] can3  & count1  & ncount2  & count4  & count5  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c3'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & count2  & count4  & count5  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c3'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s3] can3  & count1  & count2  & count4  & count5  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & ncount2  & ncount4  & ncount5  & count6  & count7  & ncount8  & ncount9  & count10  -> (c3'=0) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s3] can3  & count1  & ncount2  & ncount4  & ncount5  & count6  & count7  & ncount8  & ncount9  & count10  -> (c3'=0) & (c1'=c1+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & count2  & ncount4  & ncount5  & count6  & count7  & ncount8  & ncount9  & count10  -> (c3'=0) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s3] can3  & count1  & count2  & ncount4  & ncount5  & count6  & count7  & ncount8  & ncount9  & count10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & ncount2  & count4  & ncount5  & count6  & count7  & ncount8  & ncount9  & count10  -> (c3'=0) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s3] can3  & count1  & ncount2  & count4  & ncount5  & count6  & count7  & ncount8  & ncount9  & count10  -> (c3'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & count2  & count4  & ncount5  & count6  & count7  & ncount8  & ncount9  & count10  -> (c3'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s3] can3  & count1  & count2  & count4  & ncount5  & count6  & count7  & ncount8  & ncount9  & count10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & ncount2  & ncount4  & count5  & count6  & count7  & ncount8  & ncount9  & count10  -> (c3'=0) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s3] can3  & count1  & ncount2  & ncount4  & count5  & count6  & count7  & ncount8  & ncount9  & count10  -> (c3'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & count2  & ncount4  & count5  & count6  & count7  & ncount8  & ncount9  & count10  -> (c3'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s3] can3  & count1  & count2  & ncount4  & count5  & count6  & count7  & ncount8  & ncount9  & count10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & ncount2  & count4  & count5  & count6  & count7  & ncount8  & ncount9  & count10  -> (c3'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s3] can3  & count1  & ncount2  & count4  & count5  & count6  & count7  & ncount8  & ncount9  & count10  -> (c3'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & count2  & count4  & count5  & count6  & count7  & ncount8  & ncount9  & count10  -> (c3'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s3] can3  & count1  & count2  & count4  & count5  & count6  & count7  & ncount8  & ncount9  & count10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & ncount2  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c3'=0) & (c8'=c8+1) & (c10'=c10+1);
	[s3] can3  & count1  & ncount2  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c3'=0) & (c1'=c1+1) & (c8'=c8+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & count2  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c3'=0) & (c2'=c2+1) & (c8'=c8+1) & (c10'=c10+1);
	[s3] can3  & count1  & count2  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c8'=c8+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & ncount2  & count4  & ncount5  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c3'=0) & (c4'=c4+1) & (c8'=c8+1) & (c10'=c10+1);
	[s3] can3  & count1  & ncount2  & count4  & ncount5  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c3'=0) & (c1'=c1+1) & (c4'=c4+1) & (c8'=c8+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & count2  & count4  & ncount5  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c3'=0) & (c2'=c2+1) & (c4'=c4+1) & (c8'=c8+1) & (c10'=c10+1);
	[s3] can3  & count1  & count2  & count4  & ncount5  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c8'=c8+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & ncount2  & ncount4  & count5  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c3'=0) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s3] can3  & count1  & ncount2  & ncount4  & count5  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c3'=0) & (c1'=c1+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & count2  & ncount4  & count5  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c3'=0) & (c2'=c2+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s3] can3  & count1  & count2  & ncount4  & count5  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & ncount2  & count4  & count5  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c3'=0) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s3] can3  & count1  & ncount2  & count4  & count5  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c3'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & count2  & count4  & count5  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c3'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s3] can3  & count1  & count2  & count4  & count5  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & ncount2  & ncount4  & ncount5  & count6  & ncount7  & count8  & ncount9  & count10  -> (c3'=0) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s3] can3  & count1  & ncount2  & ncount4  & ncount5  & count6  & ncount7  & count8  & ncount9  & count10  -> (c3'=0) & (c1'=c1+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & count2  & ncount4  & ncount5  & count6  & ncount7  & count8  & ncount9  & count10  -> (c3'=0) & (c2'=c2+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s3] can3  & count1  & count2  & ncount4  & ncount5  & count6  & ncount7  & count8  & ncount9  & count10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & ncount2  & count4  & ncount5  & count6  & ncount7  & count8  & ncount9  & count10  -> (c3'=0) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s3] can3  & count1  & ncount2  & count4  & ncount5  & count6  & ncount7  & count8  & ncount9  & count10  -> (c3'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & count2  & count4  & ncount5  & count6  & ncount7  & count8  & ncount9  & count10  -> (c3'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s3] can3  & count1  & count2  & count4  & ncount5  & count6  & ncount7  & count8  & ncount9  & count10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & ncount2  & ncount4  & count5  & count6  & ncount7  & count8  & ncount9  & count10  -> (c3'=0) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s3] can3  & count1  & ncount2  & ncount4  & count5  & count6  & ncount7  & count8  & ncount9  & count10  -> (c3'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & count2  & ncount4  & count5  & count6  & ncount7  & count8  & ncount9  & count10  -> (c3'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s3] can3  & count1  & count2  & ncount4  & count5  & count6  & ncount7  & count8  & ncount9  & count10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & ncount2  & count4  & count5  & count6  & ncount7  & count8  & ncount9  & count10  -> (c3'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s3] can3  & count1  & ncount2  & count4  & count5  & count6  & ncount7  & count8  & ncount9  & count10  -> (c3'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & count2  & count4  & count5  & count6  & ncount7  & count8  & ncount9  & count10  -> (c3'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s3] can3  & count1  & count2  & count4  & count5  & count6  & ncount7  & count8  & ncount9  & count10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & ncount2  & ncount4  & ncount5  & ncount6  & count7  & count8  & ncount9  & count10  -> (c3'=0) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s3] can3  & count1  & ncount2  & ncount4  & ncount5  & ncount6  & count7  & count8  & ncount9  & count10  -> (c3'=0) & (c1'=c1+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & count2  & ncount4  & ncount5  & ncount6  & count7  & count8  & ncount9  & count10  -> (c3'=0) & (c2'=c2+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s3] can3  & count1  & count2  & ncount4  & ncount5  & ncount6  & count7  & count8  & ncount9  & count10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & ncount2  & count4  & ncount5  & ncount6  & count7  & count8  & ncount9  & count10  -> (c3'=0) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s3] can3  & count1  & ncount2  & count4  & ncount5  & ncount6  & count7  & count8  & ncount9  & count10  -> (c3'=0) & (c1'=c1+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & count2  & count4  & ncount5  & ncount6  & count7  & count8  & ncount9  & count10  -> (c3'=0) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s3] can3  & count1  & count2  & count4  & ncount5  & ncount6  & count7  & count8  & ncount9  & count10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & ncount2  & ncount4  & count5  & ncount6  & count7  & count8  & ncount9  & count10  -> (c3'=0) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s3] can3  & count1  & ncount2  & ncount4  & count5  & ncount6  & count7  & count8  & ncount9  & count10  -> (c3'=0) & (c1'=c1+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & count2  & ncount4  & count5  & ncount6  & count7  & count8  & ncount9  & count10  -> (c3'=0) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s3] can3  & count1  & count2  & ncount4  & count5  & ncount6  & count7  & count8  & ncount9  & count10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & ncount2  & count4  & count5  & ncount6  & count7  & count8  & ncount9  & count10  -> (c3'=0) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s3] can3  & count1  & ncount2  & count4  & count5  & ncount6  & count7  & count8  & ncount9  & count10  -> (c3'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & count2  & count4  & count5  & ncount6  & count7  & count8  & ncount9  & count10  -> (c3'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s3] can3  & count1  & count2  & count4  & count5  & ncount6  & count7  & count8  & ncount9  & count10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & ncount2  & ncount4  & ncount5  & count6  & count7  & count8  & ncount9  & count10  -> (c3'=0) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s3] can3  & count1  & ncount2  & ncount4  & ncount5  & count6  & count7  & count8  & ncount9  & count10  -> (c3'=0) & (c1'=c1+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & count2  & ncount4  & ncount5  & count6  & count7  & count8  & ncount9  & count10  -> (c3'=0) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s3] can3  & count1  & count2  & ncount4  & ncount5  & count6  & count7  & count8  & ncount9  & count10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & ncount2  & count4  & ncount5  & count6  & count7  & count8  & ncount9  & count10  -> (c3'=0) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s3] can3  & count1  & ncount2  & count4  & ncount5  & count6  & count7  & count8  & ncount9  & count10  -> (c3'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & count2  & count4  & ncount5  & count6  & count7  & count8  & ncount9  & count10  -> (c3'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s3] can3  & count1  & count2  & count4  & ncount5  & count6  & count7  & count8  & ncount9  & count10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & ncount2  & ncount4  & count5  & count6  & count7  & count8  & ncount9  & count10  -> (c3'=0) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s3] can3  & count1  & ncount2  & ncount4  & count5  & count6  & count7  & count8  & ncount9  & count10  -> (c3'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & count2  & ncount4  & count5  & count6  & count7  & count8  & ncount9  & count10  -> (c3'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s3] can3  & count1  & count2  & ncount4  & count5  & count6  & count7  & count8  & ncount9  & count10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & ncount2  & count4  & count5  & count6  & count7  & count8  & ncount9  & count10  -> (c3'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s3] can3  & count1  & ncount2  & count4  & count5  & count6  & count7  & count8  & ncount9  & count10  -> (c3'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & count2  & count4  & count5  & count6  & count7  & count8  & ncount9  & count10  -> (c3'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s3] can3  & count1  & count2  & count4  & count5  & count6  & count7  & count8  & ncount9  & count10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & ncount2  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c3'=0) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & count1  & ncount2  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c3'=0) & (c1'=c1+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & count2  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c3'=0) & (c2'=c2+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & count1  & count2  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & ncount2  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c3'=0) & (c4'=c4+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & count1  & ncount2  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c3'=0) & (c1'=c1+1) & (c4'=c4+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & count2  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c3'=0) & (c2'=c2+1) & (c4'=c4+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & count1  & count2  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & ncount2  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c3'=0) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & count1  & ncount2  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c3'=0) & (c1'=c1+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & count2  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c3'=0) & (c2'=c2+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & count1  & count2  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & ncount2  & count4  & count5  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c3'=0) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & count1  & ncount2  & count4  & count5  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c3'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & count2  & count4  & count5  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c3'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & count1  & count2  & count4  & count5  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & ncount2  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & count9  & count10  -> (c3'=0) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & count1  & ncount2  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & count9  & count10  -> (c3'=0) & (c1'=c1+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & count2  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & count9  & count10  -> (c3'=0) & (c2'=c2+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & count1  & count2  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & count9  & count10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & ncount2  & count4  & ncount5  & count6  & ncount7  & ncount8  & count9  & count10  -> (c3'=0) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & count1  & ncount2  & count4  & ncount5  & count6  & ncount7  & ncount8  & count9  & count10  -> (c3'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & count2  & count4  & ncount5  & count6  & ncount7  & ncount8  & count9  & count10  -> (c3'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & count1  & count2  & count4  & ncount5  & count6  & ncount7  & ncount8  & count9  & count10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & ncount2  & ncount4  & count5  & count6  & ncount7  & ncount8  & count9  & count10  -> (c3'=0) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & count1  & ncount2  & ncount4  & count5  & count6  & ncount7  & ncount8  & count9  & count10  -> (c3'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & count2  & ncount4  & count5  & count6  & ncount7  & ncount8  & count9  & count10  -> (c3'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & count1  & count2  & ncount4  & count5  & count6  & ncount7  & ncount8  & count9  & count10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & ncount2  & count4  & count5  & count6  & ncount7  & ncount8  & count9  & count10  -> (c3'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & count1  & ncount2  & count4  & count5  & count6  & ncount7  & ncount8  & count9  & count10  -> (c3'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & count2  & count4  & count5  & count6  & ncount7  & ncount8  & count9  & count10  -> (c3'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & count1  & count2  & count4  & count5  & count6  & ncount7  & ncount8  & count9  & count10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & ncount2  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & count9  & count10  -> (c3'=0) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & count1  & ncount2  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & count9  & count10  -> (c3'=0) & (c1'=c1+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & count2  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & count9  & count10  -> (c3'=0) & (c2'=c2+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & count1  & count2  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & count9  & count10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & ncount2  & count4  & ncount5  & ncount6  & count7  & ncount8  & count9  & count10  -> (c3'=0) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & count1  & ncount2  & count4  & ncount5  & ncount6  & count7  & ncount8  & count9  & count10  -> (c3'=0) & (c1'=c1+1) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & count2  & count4  & ncount5  & ncount6  & count7  & ncount8  & count9  & count10  -> (c3'=0) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & count1  & count2  & count4  & ncount5  & ncount6  & count7  & ncount8  & count9  & count10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & ncount2  & ncount4  & count5  & ncount6  & count7  & ncount8  & count9  & count10  -> (c3'=0) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & count1  & ncount2  & ncount4  & count5  & ncount6  & count7  & ncount8  & count9  & count10  -> (c3'=0) & (c1'=c1+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & count2  & ncount4  & count5  & ncount6  & count7  & ncount8  & count9  & count10  -> (c3'=0) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & count1  & count2  & ncount4  & count5  & ncount6  & count7  & ncount8  & count9  & count10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & ncount2  & count4  & count5  & ncount6  & count7  & ncount8  & count9  & count10  -> (c3'=0) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & count1  & ncount2  & count4  & count5  & ncount6  & count7  & ncount8  & count9  & count10  -> (c3'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & count2  & count4  & count5  & ncount6  & count7  & ncount8  & count9  & count10  -> (c3'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & count1  & count2  & count4  & count5  & ncount6  & count7  & ncount8  & count9  & count10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & ncount2  & ncount4  & ncount5  & count6  & count7  & ncount8  & count9  & count10  -> (c3'=0) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & count1  & ncount2  & ncount4  & ncount5  & count6  & count7  & ncount8  & count9  & count10  -> (c3'=0) & (c1'=c1+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & count2  & ncount4  & ncount5  & count6  & count7  & ncount8  & count9  & count10  -> (c3'=0) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & count1  & count2  & ncount4  & ncount5  & count6  & count7  & ncount8  & count9  & count10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & ncount2  & count4  & ncount5  & count6  & count7  & ncount8  & count9  & count10  -> (c3'=0) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & count1  & ncount2  & count4  & ncount5  & count6  & count7  & ncount8  & count9  & count10  -> (c3'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & count2  & count4  & ncount5  & count6  & count7  & ncount8  & count9  & count10  -> (c3'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & count1  & count2  & count4  & ncount5  & count6  & count7  & ncount8  & count9  & count10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & ncount2  & ncount4  & count5  & count6  & count7  & ncount8  & count9  & count10  -> (c3'=0) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & count1  & ncount2  & ncount4  & count5  & count6  & count7  & ncount8  & count9  & count10  -> (c3'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & count2  & ncount4  & count5  & count6  & count7  & ncount8  & count9  & count10  -> (c3'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & count1  & count2  & ncount4  & count5  & count6  & count7  & ncount8  & count9  & count10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & ncount2  & count4  & count5  & count6  & count7  & ncount8  & count9  & count10  -> (c3'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & count1  & ncount2  & count4  & count5  & count6  & count7  & ncount8  & count9  & count10  -> (c3'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & count2  & count4  & count5  & count6  & count7  & ncount8  & count9  & count10  -> (c3'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & count1  & count2  & count4  & count5  & count6  & count7  & ncount8  & count9  & count10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & ncount2  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & count9  & count10  -> (c3'=0) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & count1  & ncount2  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & count9  & count10  -> (c3'=0) & (c1'=c1+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & count2  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & count9  & count10  -> (c3'=0) & (c2'=c2+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & count1  & count2  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & count9  & count10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & ncount2  & count4  & ncount5  & ncount6  & ncount7  & count8  & count9  & count10  -> (c3'=0) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & count1  & ncount2  & count4  & ncount5  & ncount6  & ncount7  & count8  & count9  & count10  -> (c3'=0) & (c1'=c1+1) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & count2  & count4  & ncount5  & ncount6  & ncount7  & count8  & count9  & count10  -> (c3'=0) & (c2'=c2+1) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & count1  & count2  & count4  & ncount5  & ncount6  & ncount7  & count8  & count9  & count10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & ncount2  & ncount4  & count5  & ncount6  & ncount7  & count8  & count9  & count10  -> (c3'=0) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & count1  & ncount2  & ncount4  & count5  & ncount6  & ncount7  & count8  & count9  & count10  -> (c3'=0) & (c1'=c1+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & count2  & ncount4  & count5  & ncount6  & ncount7  & count8  & count9  & count10  -> (c3'=0) & (c2'=c2+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & count1  & count2  & ncount4  & count5  & ncount6  & ncount7  & count8  & count9  & count10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & ncount2  & count4  & count5  & ncount6  & ncount7  & count8  & count9  & count10  -> (c3'=0) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & count1  & ncount2  & count4  & count5  & ncount6  & ncount7  & count8  & count9  & count10  -> (c3'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & count2  & count4  & count5  & ncount6  & ncount7  & count8  & count9  & count10  -> (c3'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & count1  & count2  & count4  & count5  & ncount6  & ncount7  & count8  & count9  & count10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & ncount2  & ncount4  & ncount5  & count6  & ncount7  & count8  & count9  & count10  -> (c3'=0) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & count1  & ncount2  & ncount4  & ncount5  & count6  & ncount7  & count8  & count9  & count10  -> (c3'=0) & (c1'=c1+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & count2  & ncount4  & ncount5  & count6  & ncount7  & count8  & count9  & count10  -> (c3'=0) & (c2'=c2+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & count1  & count2  & ncount4  & ncount5  & count6  & ncount7  & count8  & count9  & count10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & ncount2  & count4  & ncount5  & count6  & ncount7  & count8  & count9  & count10  -> (c3'=0) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & count1  & ncount2  & count4  & ncount5  & count6  & ncount7  & count8  & count9  & count10  -> (c3'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & count2  & count4  & ncount5  & count6  & ncount7  & count8  & count9  & count10  -> (c3'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & count1  & count2  & count4  & ncount5  & count6  & ncount7  & count8  & count9  & count10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & ncount2  & ncount4  & count5  & count6  & ncount7  & count8  & count9  & count10  -> (c3'=0) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & count1  & ncount2  & ncount4  & count5  & count6  & ncount7  & count8  & count9  & count10  -> (c3'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & count2  & ncount4  & count5  & count6  & ncount7  & count8  & count9  & count10  -> (c3'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & count1  & count2  & ncount4  & count5  & count6  & ncount7  & count8  & count9  & count10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & ncount2  & count4  & count5  & count6  & ncount7  & count8  & count9  & count10  -> (c3'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & count1  & ncount2  & count4  & count5  & count6  & ncount7  & count8  & count9  & count10  -> (c3'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & count2  & count4  & count5  & count6  & ncount7  & count8  & count9  & count10  -> (c3'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & count1  & count2  & count4  & count5  & count6  & ncount7  & count8  & count9  & count10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & ncount2  & ncount4  & ncount5  & ncount6  & count7  & count8  & count9  & count10  -> (c3'=0) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & count1  & ncount2  & ncount4  & ncount5  & ncount6  & count7  & count8  & count9  & count10  -> (c3'=0) & (c1'=c1+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & count2  & ncount4  & ncount5  & ncount6  & count7  & count8  & count9  & count10  -> (c3'=0) & (c2'=c2+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & count1  & count2  & ncount4  & ncount5  & ncount6  & count7  & count8  & count9  & count10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & ncount2  & count4  & ncount5  & ncount6  & count7  & count8  & count9  & count10  -> (c3'=0) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & count1  & ncount2  & count4  & ncount5  & ncount6  & count7  & count8  & count9  & count10  -> (c3'=0) & (c1'=c1+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & count2  & count4  & ncount5  & ncount6  & count7  & count8  & count9  & count10  -> (c3'=0) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & count1  & count2  & count4  & ncount5  & ncount6  & count7  & count8  & count9  & count10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & ncount2  & ncount4  & count5  & ncount6  & count7  & count8  & count9  & count10  -> (c3'=0) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & count1  & ncount2  & ncount4  & count5  & ncount6  & count7  & count8  & count9  & count10  -> (c3'=0) & (c1'=c1+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & count2  & ncount4  & count5  & ncount6  & count7  & count8  & count9  & count10  -> (c3'=0) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & count1  & count2  & ncount4  & count5  & ncount6  & count7  & count8  & count9  & count10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & ncount2  & count4  & count5  & ncount6  & count7  & count8  & count9  & count10  -> (c3'=0) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & count1  & ncount2  & count4  & count5  & ncount6  & count7  & count8  & count9  & count10  -> (c3'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & count2  & count4  & count5  & ncount6  & count7  & count8  & count9  & count10  -> (c3'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & count1  & count2  & count4  & count5  & ncount6  & count7  & count8  & count9  & count10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & ncount2  & ncount4  & ncount5  & count6  & count7  & count8  & count9  & count10  -> (c3'=0) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & count1  & ncount2  & ncount4  & ncount5  & count6  & count7  & count8  & count9  & count10  -> (c3'=0) & (c1'=c1+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & count2  & ncount4  & ncount5  & count6  & count7  & count8  & count9  & count10  -> (c3'=0) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & count1  & count2  & ncount4  & ncount5  & count6  & count7  & count8  & count9  & count10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & ncount2  & count4  & ncount5  & count6  & count7  & count8  & count9  & count10  -> (c3'=0) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & count1  & ncount2  & count4  & ncount5  & count6  & count7  & count8  & count9  & count10  -> (c3'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & count2  & count4  & ncount5  & count6  & count7  & count8  & count9  & count10  -> (c3'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & count1  & count2  & count4  & ncount5  & count6  & count7  & count8  & count9  & count10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & ncount2  & ncount4  & count5  & count6  & count7  & count8  & count9  & count10  -> (c3'=0) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & count1  & ncount2  & ncount4  & count5  & count6  & count7  & count8  & count9  & count10  -> (c3'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & count2  & ncount4  & count5  & count6  & count7  & count8  & count9  & count10  -> (c3'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & count1  & count2  & ncount4  & count5  & count6  & count7  & count8  & count9  & count10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & ncount2  & count4  & count5  & count6  & count7  & count8  & count9  & count10  -> (c3'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & count1  & ncount2  & count4  & count5  & count6  & count7  & count8  & count9  & count10  -> (c3'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & ncount1  & count2  & count4  & count5  & count6  & count7  & count8  & count9  & count10  -> (c3'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s3] can3  & count1  & count2  & count4  & count5  & count6  & count7  & count8  & count9  & count10  -> (c3'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & ncount2  & ncount3  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c4'=0);
	[s4] can4  & count1  & ncount2  & ncount3  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c4'=0) & (c1'=c1+1);
	[s4] can4  & ncount1  & count2  & ncount3  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c4'=0) & (c2'=c2+1);
	[s4] can4  & count1  & count2  & ncount3  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1);
	[s4] can4  & ncount1  & ncount2  & count3  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c4'=0) & (c3'=c3+1);
	[s4] can4  & count1  & ncount2  & count3  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c3'=c3+1);
	[s4] can4  & ncount1  & count2  & count3  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c4'=0) & (c2'=c2+1) & (c3'=c3+1);
	[s4] can4  & count1  & count2  & count3  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1);
	[s4] can4  & ncount1  & ncount2  & ncount3  & count5  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c4'=0) & (c5'=c5+1);
	[s4] can4  & count1  & ncount2  & ncount3  & count5  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c5'=c5+1);
	[s4] can4  & ncount1  & count2  & ncount3  & count5  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c4'=0) & (c2'=c2+1) & (c5'=c5+1);
	[s4] can4  & count1  & count2  & ncount3  & count5  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1);
	[s4] can4  & ncount1  & ncount2  & count3  & count5  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c4'=0) & (c3'=c3+1) & (c5'=c5+1);
	[s4] can4  & count1  & ncount2  & count3  & count5  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1);
	[s4] can4  & ncount1  & count2  & count3  & count5  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c4'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1);
	[s4] can4  & count1  & count2  & count3  & count5  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1);
	[s4] can4  & ncount1  & ncount2  & ncount3  & ncount5  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c4'=0) & (c6'=c6+1);
	[s4] can4  & count1  & ncount2  & ncount3  & ncount5  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c6'=c6+1);
	[s4] can4  & ncount1  & count2  & ncount3  & ncount5  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c4'=0) & (c2'=c2+1) & (c6'=c6+1);
	[s4] can4  & count1  & count2  & ncount3  & ncount5  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1);
	[s4] can4  & ncount1  & ncount2  & count3  & ncount5  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c4'=0) & (c3'=c3+1) & (c6'=c6+1);
	[s4] can4  & count1  & ncount2  & count3  & ncount5  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1);
	[s4] can4  & ncount1  & count2  & count3  & ncount5  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c4'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1);
	[s4] can4  & count1  & count2  & count3  & ncount5  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1);
	[s4] can4  & ncount1  & ncount2  & ncount3  & count5  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c4'=0) & (c5'=c5+1) & (c6'=c6+1);
	[s4] can4  & count1  & ncount2  & ncount3  & count5  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1);
	[s4] can4  & ncount1  & count2  & ncount3  & count5  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c4'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1);
	[s4] can4  & count1  & count2  & ncount3  & count5  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1);
	[s4] can4  & ncount1  & ncount2  & count3  & count5  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c4'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1);
	[s4] can4  & count1  & ncount2  & count3  & count5  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1);
	[s4] can4  & ncount1  & count2  & count3  & count5  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c4'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1);
	[s4] can4  & count1  & count2  & count3  & count5  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1);
	[s4] can4  & ncount1  & ncount2  & ncount3  & ncount5  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c4'=0) & (c7'=c7+1);
	[s4] can4  & count1  & ncount2  & ncount3  & ncount5  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c7'=c7+1);
	[s4] can4  & ncount1  & count2  & ncount3  & ncount5  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c4'=0) & (c2'=c2+1) & (c7'=c7+1);
	[s4] can4  & count1  & count2  & ncount3  & ncount5  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c7'=c7+1);
	[s4] can4  & ncount1  & ncount2  & count3  & ncount5  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c4'=0) & (c3'=c3+1) & (c7'=c7+1);
	[s4] can4  & count1  & ncount2  & count3  & ncount5  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c3'=c3+1) & (c7'=c7+1);
	[s4] can4  & ncount1  & count2  & count3  & ncount5  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c4'=0) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1);
	[s4] can4  & count1  & count2  & count3  & ncount5  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1);
	[s4] can4  & ncount1  & ncount2  & ncount3  & count5  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c4'=0) & (c5'=c5+1) & (c7'=c7+1);
	[s4] can4  & count1  & ncount2  & ncount3  & count5  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c5'=c5+1) & (c7'=c7+1);
	[s4] can4  & ncount1  & count2  & ncount3  & count5  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c4'=0) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1);
	[s4] can4  & count1  & count2  & ncount3  & count5  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1);
	[s4] can4  & ncount1  & ncount2  & count3  & count5  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c4'=0) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1);
	[s4] can4  & count1  & ncount2  & count3  & count5  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1);
	[s4] can4  & ncount1  & count2  & count3  & count5  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c4'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1);
	[s4] can4  & count1  & count2  & count3  & count5  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1);
	[s4] can4  & ncount1  & ncount2  & ncount3  & ncount5  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c4'=0) & (c6'=c6+1) & (c7'=c7+1);
	[s4] can4  & count1  & ncount2  & ncount3  & ncount5  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c6'=c6+1) & (c7'=c7+1);
	[s4] can4  & ncount1  & count2  & ncount3  & ncount5  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c4'=0) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1);
	[s4] can4  & count1  & count2  & ncount3  & ncount5  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1);
	[s4] can4  & ncount1  & ncount2  & count3  & ncount5  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c4'=0) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1);
	[s4] can4  & count1  & ncount2  & count3  & ncount5  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1);
	[s4] can4  & ncount1  & count2  & count3  & ncount5  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c4'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1);
	[s4] can4  & count1  & count2  & count3  & ncount5  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1);
	[s4] can4  & ncount1  & ncount2  & ncount3  & count5  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c4'=0) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s4] can4  & count1  & ncount2  & ncount3  & count5  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s4] can4  & ncount1  & count2  & ncount3  & count5  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c4'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s4] can4  & count1  & count2  & ncount3  & count5  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s4] can4  & ncount1  & ncount2  & count3  & count5  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c4'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s4] can4  & count1  & ncount2  & count3  & count5  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s4] can4  & ncount1  & count2  & count3  & count5  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c4'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s4] can4  & count1  & count2  & count3  & count5  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s4] can4  & ncount1  & ncount2  & ncount3  & ncount5  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c4'=0) & (c8'=c8+1);
	[s4] can4  & count1  & ncount2  & ncount3  & ncount5  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c8'=c8+1);
	[s4] can4  & ncount1  & count2  & ncount3  & ncount5  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c4'=0) & (c2'=c2+1) & (c8'=c8+1);
	[s4] can4  & count1  & count2  & ncount3  & ncount5  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c8'=c8+1);
	[s4] can4  & ncount1  & ncount2  & count3  & ncount5  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c4'=0) & (c3'=c3+1) & (c8'=c8+1);
	[s4] can4  & count1  & ncount2  & count3  & ncount5  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c3'=c3+1) & (c8'=c8+1);
	[s4] can4  & ncount1  & count2  & count3  & ncount5  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c4'=0) & (c2'=c2+1) & (c3'=c3+1) & (c8'=c8+1);
	[s4] can4  & count1  & count2  & count3  & ncount5  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c8'=c8+1);
	[s4] can4  & ncount1  & ncount2  & ncount3  & count5  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c4'=0) & (c5'=c5+1) & (c8'=c8+1);
	[s4] can4  & count1  & ncount2  & ncount3  & count5  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c5'=c5+1) & (c8'=c8+1);
	[s4] can4  & ncount1  & count2  & ncount3  & count5  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c4'=0) & (c2'=c2+1) & (c5'=c5+1) & (c8'=c8+1);
	[s4] can4  & count1  & count2  & ncount3  & count5  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c8'=c8+1);
	[s4] can4  & ncount1  & ncount2  & count3  & count5  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c4'=0) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1);
	[s4] can4  & count1  & ncount2  & count3  & count5  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1);
	[s4] can4  & ncount1  & count2  & count3  & count5  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c4'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1);
	[s4] can4  & count1  & count2  & count3  & count5  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1);
	[s4] can4  & ncount1  & ncount2  & ncount3  & ncount5  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c4'=0) & (c6'=c6+1) & (c8'=c8+1);
	[s4] can4  & count1  & ncount2  & ncount3  & ncount5  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c6'=c6+1) & (c8'=c8+1);
	[s4] can4  & ncount1  & count2  & ncount3  & ncount5  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c4'=0) & (c2'=c2+1) & (c6'=c6+1) & (c8'=c8+1);
	[s4] can4  & count1  & count2  & ncount3  & ncount5  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c8'=c8+1);
	[s4] can4  & ncount1  & ncount2  & count3  & ncount5  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c4'=0) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1);
	[s4] can4  & count1  & ncount2  & count3  & ncount5  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1);
	[s4] can4  & ncount1  & count2  & count3  & ncount5  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c4'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1);
	[s4] can4  & count1  & count2  & count3  & ncount5  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1);
	[s4] can4  & ncount1  & ncount2  & ncount3  & count5  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c4'=0) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s4] can4  & count1  & ncount2  & ncount3  & count5  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s4] can4  & ncount1  & count2  & ncount3  & count5  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c4'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s4] can4  & count1  & count2  & ncount3  & count5  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s4] can4  & ncount1  & ncount2  & count3  & count5  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c4'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s4] can4  & count1  & ncount2  & count3  & count5  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s4] can4  & ncount1  & count2  & count3  & count5  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c4'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s4] can4  & count1  & count2  & count3  & count5  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s4] can4  & ncount1  & ncount2  & ncount3  & ncount5  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c4'=0) & (c7'=c7+1) & (c8'=c8+1);
	[s4] can4  & count1  & ncount2  & ncount3  & ncount5  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c7'=c7+1) & (c8'=c8+1);
	[s4] can4  & ncount1  & count2  & ncount3  & ncount5  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c4'=0) & (c2'=c2+1) & (c7'=c7+1) & (c8'=c8+1);
	[s4] can4  & count1  & count2  & ncount3  & ncount5  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c7'=c7+1) & (c8'=c8+1);
	[s4] can4  & ncount1  & ncount2  & count3  & ncount5  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c4'=0) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1);
	[s4] can4  & count1  & ncount2  & count3  & ncount5  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1);
	[s4] can4  & ncount1  & count2  & count3  & ncount5  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c4'=0) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1);
	[s4] can4  & count1  & count2  & count3  & ncount5  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1);
	[s4] can4  & ncount1  & ncount2  & ncount3  & count5  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c4'=0) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s4] can4  & count1  & ncount2  & ncount3  & count5  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s4] can4  & ncount1  & count2  & ncount3  & count5  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c4'=0) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s4] can4  & count1  & count2  & ncount3  & count5  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s4] can4  & ncount1  & ncount2  & count3  & count5  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c4'=0) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s4] can4  & count1  & ncount2  & count3  & count5  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s4] can4  & ncount1  & count2  & count3  & count5  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c4'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s4] can4  & count1  & count2  & count3  & count5  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s4] can4  & ncount1  & ncount2  & ncount3  & ncount5  & count6  & count7  & count8  & ncount9  & ncount10  -> (c4'=0) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s4] can4  & count1  & ncount2  & ncount3  & ncount5  & count6  & count7  & count8  & ncount9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s4] can4  & ncount1  & count2  & ncount3  & ncount5  & count6  & count7  & count8  & ncount9  & ncount10  -> (c4'=0) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s4] can4  & count1  & count2  & ncount3  & ncount5  & count6  & count7  & count8  & ncount9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s4] can4  & ncount1  & ncount2  & count3  & ncount5  & count6  & count7  & count8  & ncount9  & ncount10  -> (c4'=0) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s4] can4  & count1  & ncount2  & count3  & ncount5  & count6  & count7  & count8  & ncount9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s4] can4  & ncount1  & count2  & count3  & ncount5  & count6  & count7  & count8  & ncount9  & ncount10  -> (c4'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s4] can4  & count1  & count2  & count3  & ncount5  & count6  & count7  & count8  & ncount9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s4] can4  & ncount1  & ncount2  & ncount3  & count5  & count6  & count7  & count8  & ncount9  & ncount10  -> (c4'=0) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s4] can4  & count1  & ncount2  & ncount3  & count5  & count6  & count7  & count8  & ncount9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s4] can4  & ncount1  & count2  & ncount3  & count5  & count6  & count7  & count8  & ncount9  & ncount10  -> (c4'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s4] can4  & count1  & count2  & ncount3  & count5  & count6  & count7  & count8  & ncount9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s4] can4  & ncount1  & ncount2  & count3  & count5  & count6  & count7  & count8  & ncount9  & ncount10  -> (c4'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s4] can4  & count1  & ncount2  & count3  & count5  & count6  & count7  & count8  & ncount9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s4] can4  & ncount1  & count2  & count3  & count5  & count6  & count7  & count8  & ncount9  & ncount10  -> (c4'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s4] can4  & count1  & count2  & count3  & count5  & count6  & count7  & count8  & ncount9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s4] can4  & ncount1  & ncount2  & ncount3  & ncount5  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c4'=0) & (c9'=c9+1);
	[s4] can4  & count1  & ncount2  & ncount3  & ncount5  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c9'=c9+1);
	[s4] can4  & ncount1  & count2  & ncount3  & ncount5  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c4'=0) & (c2'=c2+1) & (c9'=c9+1);
	[s4] can4  & count1  & count2  & ncount3  & ncount5  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c9'=c9+1);
	[s4] can4  & ncount1  & ncount2  & count3  & ncount5  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c4'=0) & (c3'=c3+1) & (c9'=c9+1);
	[s4] can4  & count1  & ncount2  & count3  & ncount5  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c3'=c3+1) & (c9'=c9+1);
	[s4] can4  & ncount1  & count2  & count3  & ncount5  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c4'=0) & (c2'=c2+1) & (c3'=c3+1) & (c9'=c9+1);
	[s4] can4  & count1  & count2  & count3  & ncount5  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c9'=c9+1);
	[s4] can4  & ncount1  & ncount2  & ncount3  & count5  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c4'=0) & (c5'=c5+1) & (c9'=c9+1);
	[s4] can4  & count1  & ncount2  & ncount3  & count5  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c5'=c5+1) & (c9'=c9+1);
	[s4] can4  & ncount1  & count2  & ncount3  & count5  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c4'=0) & (c2'=c2+1) & (c5'=c5+1) & (c9'=c9+1);
	[s4] can4  & count1  & count2  & ncount3  & count5  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c9'=c9+1);
	[s4] can4  & ncount1  & ncount2  & count3  & count5  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c4'=0) & (c3'=c3+1) & (c5'=c5+1) & (c9'=c9+1);
	[s4] can4  & count1  & ncount2  & count3  & count5  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c9'=c9+1);
	[s4] can4  & ncount1  & count2  & count3  & count5  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c4'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c9'=c9+1);
	[s4] can4  & count1  & count2  & count3  & count5  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c9'=c9+1);
	[s4] can4  & ncount1  & ncount2  & ncount3  & ncount5  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c4'=0) & (c6'=c6+1) & (c9'=c9+1);
	[s4] can4  & count1  & ncount2  & ncount3  & ncount5  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c6'=c6+1) & (c9'=c9+1);
	[s4] can4  & ncount1  & count2  & ncount3  & ncount5  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c4'=0) & (c2'=c2+1) & (c6'=c6+1) & (c9'=c9+1);
	[s4] can4  & count1  & count2  & ncount3  & ncount5  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c9'=c9+1);
	[s4] can4  & ncount1  & ncount2  & count3  & ncount5  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c4'=0) & (c3'=c3+1) & (c6'=c6+1) & (c9'=c9+1);
	[s4] can4  & count1  & ncount2  & count3  & ncount5  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c9'=c9+1);
	[s4] can4  & ncount1  & count2  & count3  & ncount5  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c4'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c9'=c9+1);
	[s4] can4  & count1  & count2  & count3  & ncount5  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c9'=c9+1);
	[s4] can4  & ncount1  & ncount2  & ncount3  & count5  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c4'=0) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s4] can4  & count1  & ncount2  & ncount3  & count5  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s4] can4  & ncount1  & count2  & ncount3  & count5  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c4'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s4] can4  & count1  & count2  & ncount3  & count5  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s4] can4  & ncount1  & ncount2  & count3  & count5  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c4'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s4] can4  & count1  & ncount2  & count3  & count5  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s4] can4  & ncount1  & count2  & count3  & count5  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c4'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s4] can4  & count1  & count2  & count3  & count5  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s4] can4  & ncount1  & ncount2  & ncount3  & ncount5  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c4'=0) & (c7'=c7+1) & (c9'=c9+1);
	[s4] can4  & count1  & ncount2  & ncount3  & ncount5  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c7'=c7+1) & (c9'=c9+1);
	[s4] can4  & ncount1  & count2  & ncount3  & ncount5  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c4'=0) & (c2'=c2+1) & (c7'=c7+1) & (c9'=c9+1);
	[s4] can4  & count1  & count2  & ncount3  & ncount5  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c7'=c7+1) & (c9'=c9+1);
	[s4] can4  & ncount1  & ncount2  & count3  & ncount5  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c4'=0) & (c3'=c3+1) & (c7'=c7+1) & (c9'=c9+1);
	[s4] can4  & count1  & ncount2  & count3  & ncount5  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c3'=c3+1) & (c7'=c7+1) & (c9'=c9+1);
	[s4] can4  & ncount1  & count2  & count3  & ncount5  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c4'=0) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1) & (c9'=c9+1);
	[s4] can4  & count1  & count2  & count3  & ncount5  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1) & (c9'=c9+1);
	[s4] can4  & ncount1  & ncount2  & ncount3  & count5  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c4'=0) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s4] can4  & count1  & ncount2  & ncount3  & count5  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s4] can4  & ncount1  & count2  & ncount3  & count5  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c4'=0) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s4] can4  & count1  & count2  & ncount3  & count5  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s4] can4  & ncount1  & ncount2  & count3  & count5  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c4'=0) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s4] can4  & count1  & ncount2  & count3  & count5  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s4] can4  & ncount1  & count2  & count3  & count5  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c4'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s4] can4  & count1  & count2  & count3  & count5  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s4] can4  & ncount1  & ncount2  & ncount3  & ncount5  & count6  & count7  & ncount8  & count9  & ncount10  -> (c4'=0) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s4] can4  & count1  & ncount2  & ncount3  & ncount5  & count6  & count7  & ncount8  & count9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s4] can4  & ncount1  & count2  & ncount3  & ncount5  & count6  & count7  & ncount8  & count9  & ncount10  -> (c4'=0) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s4] can4  & count1  & count2  & ncount3  & ncount5  & count6  & count7  & ncount8  & count9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s4] can4  & ncount1  & ncount2  & count3  & ncount5  & count6  & count7  & ncount8  & count9  & ncount10  -> (c4'=0) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s4] can4  & count1  & ncount2  & count3  & ncount5  & count6  & count7  & ncount8  & count9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s4] can4  & ncount1  & count2  & count3  & ncount5  & count6  & count7  & ncount8  & count9  & ncount10  -> (c4'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s4] can4  & count1  & count2  & count3  & ncount5  & count6  & count7  & ncount8  & count9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s4] can4  & ncount1  & ncount2  & ncount3  & count5  & count6  & count7  & ncount8  & count9  & ncount10  -> (c4'=0) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s4] can4  & count1  & ncount2  & ncount3  & count5  & count6  & count7  & ncount8  & count9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s4] can4  & ncount1  & count2  & ncount3  & count5  & count6  & count7  & ncount8  & count9  & ncount10  -> (c4'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s4] can4  & count1  & count2  & ncount3  & count5  & count6  & count7  & ncount8  & count9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s4] can4  & ncount1  & ncount2  & count3  & count5  & count6  & count7  & ncount8  & count9  & ncount10  -> (c4'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s4] can4  & count1  & ncount2  & count3  & count5  & count6  & count7  & ncount8  & count9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s4] can4  & ncount1  & count2  & count3  & count5  & count6  & count7  & ncount8  & count9  & ncount10  -> (c4'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s4] can4  & count1  & count2  & count3  & count5  & count6  & count7  & ncount8  & count9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s4] can4  & ncount1  & ncount2  & ncount3  & ncount5  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c4'=0) & (c8'=c8+1) & (c9'=c9+1);
	[s4] can4  & count1  & ncount2  & ncount3  & ncount5  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c8'=c8+1) & (c9'=c9+1);
	[s4] can4  & ncount1  & count2  & ncount3  & ncount5  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c4'=0) & (c2'=c2+1) & (c8'=c8+1) & (c9'=c9+1);
	[s4] can4  & count1  & count2  & ncount3  & ncount5  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c8'=c8+1) & (c9'=c9+1);
	[s4] can4  & ncount1  & ncount2  & count3  & ncount5  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c4'=0) & (c3'=c3+1) & (c8'=c8+1) & (c9'=c9+1);
	[s4] can4  & count1  & ncount2  & count3  & ncount5  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c3'=c3+1) & (c8'=c8+1) & (c9'=c9+1);
	[s4] can4  & ncount1  & count2  & count3  & ncount5  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c4'=0) & (c2'=c2+1) & (c3'=c3+1) & (c8'=c8+1) & (c9'=c9+1);
	[s4] can4  & count1  & count2  & count3  & ncount5  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c8'=c8+1) & (c9'=c9+1);
	[s4] can4  & ncount1  & ncount2  & ncount3  & count5  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c4'=0) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s4] can4  & count1  & ncount2  & ncount3  & count5  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s4] can4  & ncount1  & count2  & ncount3  & count5  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c4'=0) & (c2'=c2+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s4] can4  & count1  & count2  & ncount3  & count5  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s4] can4  & ncount1  & ncount2  & count3  & count5  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c4'=0) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s4] can4  & count1  & ncount2  & count3  & count5  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s4] can4  & ncount1  & count2  & count3  & count5  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c4'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s4] can4  & count1  & count2  & count3  & count5  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s4] can4  & ncount1  & ncount2  & ncount3  & ncount5  & count6  & ncount7  & count8  & count9  & ncount10  -> (c4'=0) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s4] can4  & count1  & ncount2  & ncount3  & ncount5  & count6  & ncount7  & count8  & count9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s4] can4  & ncount1  & count2  & ncount3  & ncount5  & count6  & ncount7  & count8  & count9  & ncount10  -> (c4'=0) & (c2'=c2+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s4] can4  & count1  & count2  & ncount3  & ncount5  & count6  & ncount7  & count8  & count9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s4] can4  & ncount1  & ncount2  & count3  & ncount5  & count6  & ncount7  & count8  & count9  & ncount10  -> (c4'=0) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s4] can4  & count1  & ncount2  & count3  & ncount5  & count6  & ncount7  & count8  & count9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s4] can4  & ncount1  & count2  & count3  & ncount5  & count6  & ncount7  & count8  & count9  & ncount10  -> (c4'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s4] can4  & count1  & count2  & count3  & ncount5  & count6  & ncount7  & count8  & count9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s4] can4  & ncount1  & ncount2  & ncount3  & count5  & count6  & ncount7  & count8  & count9  & ncount10  -> (c4'=0) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s4] can4  & count1  & ncount2  & ncount3  & count5  & count6  & ncount7  & count8  & count9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s4] can4  & ncount1  & count2  & ncount3  & count5  & count6  & ncount7  & count8  & count9  & ncount10  -> (c4'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s4] can4  & count1  & count2  & ncount3  & count5  & count6  & ncount7  & count8  & count9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s4] can4  & ncount1  & ncount2  & count3  & count5  & count6  & ncount7  & count8  & count9  & ncount10  -> (c4'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s4] can4  & count1  & ncount2  & count3  & count5  & count6  & ncount7  & count8  & count9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s4] can4  & ncount1  & count2  & count3  & count5  & count6  & ncount7  & count8  & count9  & ncount10  -> (c4'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s4] can4  & count1  & count2  & count3  & count5  & count6  & ncount7  & count8  & count9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s4] can4  & ncount1  & ncount2  & ncount3  & ncount5  & ncount6  & count7  & count8  & count9  & ncount10  -> (c4'=0) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s4] can4  & count1  & ncount2  & ncount3  & ncount5  & ncount6  & count7  & count8  & count9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s4] can4  & ncount1  & count2  & ncount3  & ncount5  & ncount6  & count7  & count8  & count9  & ncount10  -> (c4'=0) & (c2'=c2+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s4] can4  & count1  & count2  & ncount3  & ncount5  & ncount6  & count7  & count8  & count9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s4] can4  & ncount1  & ncount2  & count3  & ncount5  & ncount6  & count7  & count8  & count9  & ncount10  -> (c4'=0) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s4] can4  & count1  & ncount2  & count3  & ncount5  & ncount6  & count7  & count8  & count9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s4] can4  & ncount1  & count2  & count3  & ncount5  & ncount6  & count7  & count8  & count9  & ncount10  -> (c4'=0) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s4] can4  & count1  & count2  & count3  & ncount5  & ncount6  & count7  & count8  & count9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s4] can4  & ncount1  & ncount2  & ncount3  & count5  & ncount6  & count7  & count8  & count9  & ncount10  -> (c4'=0) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s4] can4  & count1  & ncount2  & ncount3  & count5  & ncount6  & count7  & count8  & count9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s4] can4  & ncount1  & count2  & ncount3  & count5  & ncount6  & count7  & count8  & count9  & ncount10  -> (c4'=0) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s4] can4  & count1  & count2  & ncount3  & count5  & ncount6  & count7  & count8  & count9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s4] can4  & ncount1  & ncount2  & count3  & count5  & ncount6  & count7  & count8  & count9  & ncount10  -> (c4'=0) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s4] can4  & count1  & ncount2  & count3  & count5  & ncount6  & count7  & count8  & count9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s4] can4  & ncount1  & count2  & count3  & count5  & ncount6  & count7  & count8  & count9  & ncount10  -> (c4'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s4] can4  & count1  & count2  & count3  & count5  & ncount6  & count7  & count8  & count9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s4] can4  & ncount1  & ncount2  & ncount3  & ncount5  & count6  & count7  & count8  & count9  & ncount10  -> (c4'=0) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s4] can4  & count1  & ncount2  & ncount3  & ncount5  & count6  & count7  & count8  & count9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s4] can4  & ncount1  & count2  & ncount3  & ncount5  & count6  & count7  & count8  & count9  & ncount10  -> (c4'=0) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s4] can4  & count1  & count2  & ncount3  & ncount5  & count6  & count7  & count8  & count9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s4] can4  & ncount1  & ncount2  & count3  & ncount5  & count6  & count7  & count8  & count9  & ncount10  -> (c4'=0) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s4] can4  & count1  & ncount2  & count3  & ncount5  & count6  & count7  & count8  & count9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s4] can4  & ncount1  & count2  & count3  & ncount5  & count6  & count7  & count8  & count9  & ncount10  -> (c4'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s4] can4  & count1  & count2  & count3  & ncount5  & count6  & count7  & count8  & count9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s4] can4  & ncount1  & ncount2  & ncount3  & count5  & count6  & count7  & count8  & count9  & ncount10  -> (c4'=0) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s4] can4  & count1  & ncount2  & ncount3  & count5  & count6  & count7  & count8  & count9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s4] can4  & ncount1  & count2  & ncount3  & count5  & count6  & count7  & count8  & count9  & ncount10  -> (c4'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s4] can4  & count1  & count2  & ncount3  & count5  & count6  & count7  & count8  & count9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s4] can4  & ncount1  & ncount2  & count3  & count5  & count6  & count7  & count8  & count9  & ncount10  -> (c4'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s4] can4  & count1  & ncount2  & count3  & count5  & count6  & count7  & count8  & count9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s4] can4  & ncount1  & count2  & count3  & count5  & count6  & count7  & count8  & count9  & ncount10  -> (c4'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s4] can4  & count1  & count2  & count3  & count5  & count6  & count7  & count8  & count9  & ncount10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s4] can4  & ncount1  & ncount2  & ncount3  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c4'=0) & (c10'=c10+1);
	[s4] can4  & count1  & ncount2  & ncount3  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c4'=0) & (c1'=c1+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & count2  & ncount3  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c4'=0) & (c2'=c2+1) & (c10'=c10+1);
	[s4] can4  & count1  & count2  & ncount3  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & ncount2  & count3  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c4'=0) & (c3'=c3+1) & (c10'=c10+1);
	[s4] can4  & count1  & ncount2  & count3  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c4'=0) & (c1'=c1+1) & (c3'=c3+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & count2  & count3  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c4'=0) & (c2'=c2+1) & (c3'=c3+1) & (c10'=c10+1);
	[s4] can4  & count1  & count2  & count3  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & ncount2  & ncount3  & count5  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c4'=0) & (c5'=c5+1) & (c10'=c10+1);
	[s4] can4  & count1  & ncount2  & ncount3  & count5  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c4'=0) & (c1'=c1+1) & (c5'=c5+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & count2  & ncount3  & count5  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c4'=0) & (c2'=c2+1) & (c5'=c5+1) & (c10'=c10+1);
	[s4] can4  & count1  & count2  & ncount3  & count5  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & ncount2  & count3  & count5  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c4'=0) & (c3'=c3+1) & (c5'=c5+1) & (c10'=c10+1);
	[s4] can4  & count1  & ncount2  & count3  & count5  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c4'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & count2  & count3  & count5  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c4'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c10'=c10+1);
	[s4] can4  & count1  & count2  & count3  & count5  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & ncount2  & ncount3  & ncount5  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c4'=0) & (c6'=c6+1) & (c10'=c10+1);
	[s4] can4  & count1  & ncount2  & ncount3  & ncount5  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c4'=0) & (c1'=c1+1) & (c6'=c6+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & count2  & ncount3  & ncount5  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c4'=0) & (c2'=c2+1) & (c6'=c6+1) & (c10'=c10+1);
	[s4] can4  & count1  & count2  & ncount3  & ncount5  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & ncount2  & count3  & ncount5  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c4'=0) & (c3'=c3+1) & (c6'=c6+1) & (c10'=c10+1);
	[s4] can4  & count1  & ncount2  & count3  & ncount5  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c4'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & count2  & count3  & ncount5  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c4'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c10'=c10+1);
	[s4] can4  & count1  & count2  & count3  & ncount5  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & ncount2  & ncount3  & count5  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c4'=0) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s4] can4  & count1  & ncount2  & ncount3  & count5  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c4'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & count2  & ncount3  & count5  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c4'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s4] can4  & count1  & count2  & ncount3  & count5  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & ncount2  & count3  & count5  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c4'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s4] can4  & count1  & ncount2  & count3  & count5  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c4'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & count2  & count3  & count5  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c4'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s4] can4  & count1  & count2  & count3  & count5  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & ncount2  & ncount3  & ncount5  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c4'=0) & (c7'=c7+1) & (c10'=c10+1);
	[s4] can4  & count1  & ncount2  & ncount3  & ncount5  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c4'=0) & (c1'=c1+1) & (c7'=c7+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & count2  & ncount3  & ncount5  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c4'=0) & (c2'=c2+1) & (c7'=c7+1) & (c10'=c10+1);
	[s4] can4  & count1  & count2  & ncount3  & ncount5  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c7'=c7+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & ncount2  & count3  & ncount5  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c4'=0) & (c3'=c3+1) & (c7'=c7+1) & (c10'=c10+1);
	[s4] can4  & count1  & ncount2  & count3  & ncount5  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c4'=0) & (c1'=c1+1) & (c3'=c3+1) & (c7'=c7+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & count2  & count3  & ncount5  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c4'=0) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1) & (c10'=c10+1);
	[s4] can4  & count1  & count2  & count3  & ncount5  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & ncount2  & ncount3  & count5  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c4'=0) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s4] can4  & count1  & ncount2  & ncount3  & count5  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c4'=0) & (c1'=c1+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & count2  & ncount3  & count5  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c4'=0) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s4] can4  & count1  & count2  & ncount3  & count5  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & ncount2  & count3  & count5  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c4'=0) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s4] can4  & count1  & ncount2  & count3  & count5  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c4'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & count2  & count3  & count5  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c4'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s4] can4  & count1  & count2  & count3  & count5  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & ncount2  & ncount3  & ncount5  & count6  & count7  & ncount8  & ncount9  & count10  -> (c4'=0) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s4] can4  & count1  & ncount2  & ncount3  & ncount5  & count6  & count7  & ncount8  & ncount9  & count10  -> (c4'=0) & (c1'=c1+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & count2  & ncount3  & ncount5  & count6  & count7  & ncount8  & ncount9  & count10  -> (c4'=0) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s4] can4  & count1  & count2  & ncount3  & ncount5  & count6  & count7  & ncount8  & ncount9  & count10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & ncount2  & count3  & ncount5  & count6  & count7  & ncount8  & ncount9  & count10  -> (c4'=0) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s4] can4  & count1  & ncount2  & count3  & ncount5  & count6  & count7  & ncount8  & ncount9  & count10  -> (c4'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & count2  & count3  & ncount5  & count6  & count7  & ncount8  & ncount9  & count10  -> (c4'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s4] can4  & count1  & count2  & count3  & ncount5  & count6  & count7  & ncount8  & ncount9  & count10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & ncount2  & ncount3  & count5  & count6  & count7  & ncount8  & ncount9  & count10  -> (c4'=0) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s4] can4  & count1  & ncount2  & ncount3  & count5  & count6  & count7  & ncount8  & ncount9  & count10  -> (c4'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & count2  & ncount3  & count5  & count6  & count7  & ncount8  & ncount9  & count10  -> (c4'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s4] can4  & count1  & count2  & ncount3  & count5  & count6  & count7  & ncount8  & ncount9  & count10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & ncount2  & count3  & count5  & count6  & count7  & ncount8  & ncount9  & count10  -> (c4'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s4] can4  & count1  & ncount2  & count3  & count5  & count6  & count7  & ncount8  & ncount9  & count10  -> (c4'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & count2  & count3  & count5  & count6  & count7  & ncount8  & ncount9  & count10  -> (c4'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s4] can4  & count1  & count2  & count3  & count5  & count6  & count7  & ncount8  & ncount9  & count10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & ncount2  & ncount3  & ncount5  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c4'=0) & (c8'=c8+1) & (c10'=c10+1);
	[s4] can4  & count1  & ncount2  & ncount3  & ncount5  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c4'=0) & (c1'=c1+1) & (c8'=c8+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & count2  & ncount3  & ncount5  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c4'=0) & (c2'=c2+1) & (c8'=c8+1) & (c10'=c10+1);
	[s4] can4  & count1  & count2  & ncount3  & ncount5  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c8'=c8+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & ncount2  & count3  & ncount5  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c4'=0) & (c3'=c3+1) & (c8'=c8+1) & (c10'=c10+1);
	[s4] can4  & count1  & ncount2  & count3  & ncount5  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c4'=0) & (c1'=c1+1) & (c3'=c3+1) & (c8'=c8+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & count2  & count3  & ncount5  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c4'=0) & (c2'=c2+1) & (c3'=c3+1) & (c8'=c8+1) & (c10'=c10+1);
	[s4] can4  & count1  & count2  & count3  & ncount5  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c8'=c8+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & ncount2  & ncount3  & count5  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c4'=0) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s4] can4  & count1  & ncount2  & ncount3  & count5  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c4'=0) & (c1'=c1+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & count2  & ncount3  & count5  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c4'=0) & (c2'=c2+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s4] can4  & count1  & count2  & ncount3  & count5  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & ncount2  & count3  & count5  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c4'=0) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s4] can4  & count1  & ncount2  & count3  & count5  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c4'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & count2  & count3  & count5  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c4'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s4] can4  & count1  & count2  & count3  & count5  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & ncount2  & ncount3  & ncount5  & count6  & ncount7  & count8  & ncount9  & count10  -> (c4'=0) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s4] can4  & count1  & ncount2  & ncount3  & ncount5  & count6  & ncount7  & count8  & ncount9  & count10  -> (c4'=0) & (c1'=c1+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & count2  & ncount3  & ncount5  & count6  & ncount7  & count8  & ncount9  & count10  -> (c4'=0) & (c2'=c2+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s4] can4  & count1  & count2  & ncount3  & ncount5  & count6  & ncount7  & count8  & ncount9  & count10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & ncount2  & count3  & ncount5  & count6  & ncount7  & count8  & ncount9  & count10  -> (c4'=0) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s4] can4  & count1  & ncount2  & count3  & ncount5  & count6  & ncount7  & count8  & ncount9  & count10  -> (c4'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & count2  & count3  & ncount5  & count6  & ncount7  & count8  & ncount9  & count10  -> (c4'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s4] can4  & count1  & count2  & count3  & ncount5  & count6  & ncount7  & count8  & ncount9  & count10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & ncount2  & ncount3  & count5  & count6  & ncount7  & count8  & ncount9  & count10  -> (c4'=0) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s4] can4  & count1  & ncount2  & ncount3  & count5  & count6  & ncount7  & count8  & ncount9  & count10  -> (c4'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & count2  & ncount3  & count5  & count6  & ncount7  & count8  & ncount9  & count10  -> (c4'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s4] can4  & count1  & count2  & ncount3  & count5  & count6  & ncount7  & count8  & ncount9  & count10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & ncount2  & count3  & count5  & count6  & ncount7  & count8  & ncount9  & count10  -> (c4'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s4] can4  & count1  & ncount2  & count3  & count5  & count6  & ncount7  & count8  & ncount9  & count10  -> (c4'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & count2  & count3  & count5  & count6  & ncount7  & count8  & ncount9  & count10  -> (c4'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s4] can4  & count1  & count2  & count3  & count5  & count6  & ncount7  & count8  & ncount9  & count10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & ncount2  & ncount3  & ncount5  & ncount6  & count7  & count8  & ncount9  & count10  -> (c4'=0) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s4] can4  & count1  & ncount2  & ncount3  & ncount5  & ncount6  & count7  & count8  & ncount9  & count10  -> (c4'=0) & (c1'=c1+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & count2  & ncount3  & ncount5  & ncount6  & count7  & count8  & ncount9  & count10  -> (c4'=0) & (c2'=c2+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s4] can4  & count1  & count2  & ncount3  & ncount5  & ncount6  & count7  & count8  & ncount9  & count10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & ncount2  & count3  & ncount5  & ncount6  & count7  & count8  & ncount9  & count10  -> (c4'=0) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s4] can4  & count1  & ncount2  & count3  & ncount5  & ncount6  & count7  & count8  & ncount9  & count10  -> (c4'=0) & (c1'=c1+1) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & count2  & count3  & ncount5  & ncount6  & count7  & count8  & ncount9  & count10  -> (c4'=0) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s4] can4  & count1  & count2  & count3  & ncount5  & ncount6  & count7  & count8  & ncount9  & count10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & ncount2  & ncount3  & count5  & ncount6  & count7  & count8  & ncount9  & count10  -> (c4'=0) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s4] can4  & count1  & ncount2  & ncount3  & count5  & ncount6  & count7  & count8  & ncount9  & count10  -> (c4'=0) & (c1'=c1+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & count2  & ncount3  & count5  & ncount6  & count7  & count8  & ncount9  & count10  -> (c4'=0) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s4] can4  & count1  & count2  & ncount3  & count5  & ncount6  & count7  & count8  & ncount9  & count10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & ncount2  & count3  & count5  & ncount6  & count7  & count8  & ncount9  & count10  -> (c4'=0) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s4] can4  & count1  & ncount2  & count3  & count5  & ncount6  & count7  & count8  & ncount9  & count10  -> (c4'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & count2  & count3  & count5  & ncount6  & count7  & count8  & ncount9  & count10  -> (c4'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s4] can4  & count1  & count2  & count3  & count5  & ncount6  & count7  & count8  & ncount9  & count10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & ncount2  & ncount3  & ncount5  & count6  & count7  & count8  & ncount9  & count10  -> (c4'=0) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s4] can4  & count1  & ncount2  & ncount3  & ncount5  & count6  & count7  & count8  & ncount9  & count10  -> (c4'=0) & (c1'=c1+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & count2  & ncount3  & ncount5  & count6  & count7  & count8  & ncount9  & count10  -> (c4'=0) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s4] can4  & count1  & count2  & ncount3  & ncount5  & count6  & count7  & count8  & ncount9  & count10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & ncount2  & count3  & ncount5  & count6  & count7  & count8  & ncount9  & count10  -> (c4'=0) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s4] can4  & count1  & ncount2  & count3  & ncount5  & count6  & count7  & count8  & ncount9  & count10  -> (c4'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & count2  & count3  & ncount5  & count6  & count7  & count8  & ncount9  & count10  -> (c4'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s4] can4  & count1  & count2  & count3  & ncount5  & count6  & count7  & count8  & ncount9  & count10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & ncount2  & ncount3  & count5  & count6  & count7  & count8  & ncount9  & count10  -> (c4'=0) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s4] can4  & count1  & ncount2  & ncount3  & count5  & count6  & count7  & count8  & ncount9  & count10  -> (c4'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & count2  & ncount3  & count5  & count6  & count7  & count8  & ncount9  & count10  -> (c4'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s4] can4  & count1  & count2  & ncount3  & count5  & count6  & count7  & count8  & ncount9  & count10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & ncount2  & count3  & count5  & count6  & count7  & count8  & ncount9  & count10  -> (c4'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s4] can4  & count1  & ncount2  & count3  & count5  & count6  & count7  & count8  & ncount9  & count10  -> (c4'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & count2  & count3  & count5  & count6  & count7  & count8  & ncount9  & count10  -> (c4'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s4] can4  & count1  & count2  & count3  & count5  & count6  & count7  & count8  & ncount9  & count10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & ncount2  & ncount3  & ncount5  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c4'=0) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & count1  & ncount2  & ncount3  & ncount5  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c4'=0) & (c1'=c1+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & count2  & ncount3  & ncount5  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c4'=0) & (c2'=c2+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & count1  & count2  & ncount3  & ncount5  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & ncount2  & count3  & ncount5  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c4'=0) & (c3'=c3+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & count1  & ncount2  & count3  & ncount5  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c4'=0) & (c1'=c1+1) & (c3'=c3+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & count2  & count3  & ncount5  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c4'=0) & (c2'=c2+1) & (c3'=c3+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & count1  & count2  & count3  & ncount5  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & ncount2  & ncount3  & count5  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c4'=0) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & count1  & ncount2  & ncount3  & count5  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c4'=0) & (c1'=c1+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & count2  & ncount3  & count5  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c4'=0) & (c2'=c2+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & count1  & count2  & ncount3  & count5  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & ncount2  & count3  & count5  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c4'=0) & (c3'=c3+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & count1  & ncount2  & count3  & count5  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c4'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & count2  & count3  & count5  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c4'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & count1  & count2  & count3  & count5  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & ncount2  & ncount3  & ncount5  & count6  & ncount7  & ncount8  & count9  & count10  -> (c4'=0) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & count1  & ncount2  & ncount3  & ncount5  & count6  & ncount7  & ncount8  & count9  & count10  -> (c4'=0) & (c1'=c1+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & count2  & ncount3  & ncount5  & count6  & ncount7  & ncount8  & count9  & count10  -> (c4'=0) & (c2'=c2+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & count1  & count2  & ncount3  & ncount5  & count6  & ncount7  & ncount8  & count9  & count10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & ncount2  & count3  & ncount5  & count6  & ncount7  & ncount8  & count9  & count10  -> (c4'=0) & (c3'=c3+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & count1  & ncount2  & count3  & ncount5  & count6  & ncount7  & ncount8  & count9  & count10  -> (c4'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & count2  & count3  & ncount5  & count6  & ncount7  & ncount8  & count9  & count10  -> (c4'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & count1  & count2  & count3  & ncount5  & count6  & ncount7  & ncount8  & count9  & count10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & ncount2  & ncount3  & count5  & count6  & ncount7  & ncount8  & count9  & count10  -> (c4'=0) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & count1  & ncount2  & ncount3  & count5  & count6  & ncount7  & ncount8  & count9  & count10  -> (c4'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & count2  & ncount3  & count5  & count6  & ncount7  & ncount8  & count9  & count10  -> (c4'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & count1  & count2  & ncount3  & count5  & count6  & ncount7  & ncount8  & count9  & count10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & ncount2  & count3  & count5  & count6  & ncount7  & ncount8  & count9  & count10  -> (c4'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & count1  & ncount2  & count3  & count5  & count6  & ncount7  & ncount8  & count9  & count10  -> (c4'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & count2  & count3  & count5  & count6  & ncount7  & ncount8  & count9  & count10  -> (c4'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & count1  & count2  & count3  & count5  & count6  & ncount7  & ncount8  & count9  & count10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & ncount2  & ncount3  & ncount5  & ncount6  & count7  & ncount8  & count9  & count10  -> (c4'=0) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & count1  & ncount2  & ncount3  & ncount5  & ncount6  & count7  & ncount8  & count9  & count10  -> (c4'=0) & (c1'=c1+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & count2  & ncount3  & ncount5  & ncount6  & count7  & ncount8  & count9  & count10  -> (c4'=0) & (c2'=c2+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & count1  & count2  & ncount3  & ncount5  & ncount6  & count7  & ncount8  & count9  & count10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & ncount2  & count3  & ncount5  & ncount6  & count7  & ncount8  & count9  & count10  -> (c4'=0) & (c3'=c3+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & count1  & ncount2  & count3  & ncount5  & ncount6  & count7  & ncount8  & count9  & count10  -> (c4'=0) & (c1'=c1+1) & (c3'=c3+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & count2  & count3  & ncount5  & ncount6  & count7  & ncount8  & count9  & count10  -> (c4'=0) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & count1  & count2  & count3  & ncount5  & ncount6  & count7  & ncount8  & count9  & count10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & ncount2  & ncount3  & count5  & ncount6  & count7  & ncount8  & count9  & count10  -> (c4'=0) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & count1  & ncount2  & ncount3  & count5  & ncount6  & count7  & ncount8  & count9  & count10  -> (c4'=0) & (c1'=c1+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & count2  & ncount3  & count5  & ncount6  & count7  & ncount8  & count9  & count10  -> (c4'=0) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & count1  & count2  & ncount3  & count5  & ncount6  & count7  & ncount8  & count9  & count10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & ncount2  & count3  & count5  & ncount6  & count7  & ncount8  & count9  & count10  -> (c4'=0) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & count1  & ncount2  & count3  & count5  & ncount6  & count7  & ncount8  & count9  & count10  -> (c4'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & count2  & count3  & count5  & ncount6  & count7  & ncount8  & count9  & count10  -> (c4'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & count1  & count2  & count3  & count5  & ncount6  & count7  & ncount8  & count9  & count10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & ncount2  & ncount3  & ncount5  & count6  & count7  & ncount8  & count9  & count10  -> (c4'=0) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & count1  & ncount2  & ncount3  & ncount5  & count6  & count7  & ncount8  & count9  & count10  -> (c4'=0) & (c1'=c1+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & count2  & ncount3  & ncount5  & count6  & count7  & ncount8  & count9  & count10  -> (c4'=0) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & count1  & count2  & ncount3  & ncount5  & count6  & count7  & ncount8  & count9  & count10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & ncount2  & count3  & ncount5  & count6  & count7  & ncount8  & count9  & count10  -> (c4'=0) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & count1  & ncount2  & count3  & ncount5  & count6  & count7  & ncount8  & count9  & count10  -> (c4'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & count2  & count3  & ncount5  & count6  & count7  & ncount8  & count9  & count10  -> (c4'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & count1  & count2  & count3  & ncount5  & count6  & count7  & ncount8  & count9  & count10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & ncount2  & ncount3  & count5  & count6  & count7  & ncount8  & count9  & count10  -> (c4'=0) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & count1  & ncount2  & ncount3  & count5  & count6  & count7  & ncount8  & count9  & count10  -> (c4'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & count2  & ncount3  & count5  & count6  & count7  & ncount8  & count9  & count10  -> (c4'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & count1  & count2  & ncount3  & count5  & count6  & count7  & ncount8  & count9  & count10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & ncount2  & count3  & count5  & count6  & count7  & ncount8  & count9  & count10  -> (c4'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & count1  & ncount2  & count3  & count5  & count6  & count7  & ncount8  & count9  & count10  -> (c4'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & count2  & count3  & count5  & count6  & count7  & ncount8  & count9  & count10  -> (c4'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & count1  & count2  & count3  & count5  & count6  & count7  & ncount8  & count9  & count10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & ncount2  & ncount3  & ncount5  & ncount6  & ncount7  & count8  & count9  & count10  -> (c4'=0) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & count1  & ncount2  & ncount3  & ncount5  & ncount6  & ncount7  & count8  & count9  & count10  -> (c4'=0) & (c1'=c1+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & count2  & ncount3  & ncount5  & ncount6  & ncount7  & count8  & count9  & count10  -> (c4'=0) & (c2'=c2+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & count1  & count2  & ncount3  & ncount5  & ncount6  & ncount7  & count8  & count9  & count10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & ncount2  & count3  & ncount5  & ncount6  & ncount7  & count8  & count9  & count10  -> (c4'=0) & (c3'=c3+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & count1  & ncount2  & count3  & ncount5  & ncount6  & ncount7  & count8  & count9  & count10  -> (c4'=0) & (c1'=c1+1) & (c3'=c3+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & count2  & count3  & ncount5  & ncount6  & ncount7  & count8  & count9  & count10  -> (c4'=0) & (c2'=c2+1) & (c3'=c3+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & count1  & count2  & count3  & ncount5  & ncount6  & ncount7  & count8  & count9  & count10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & ncount2  & ncount3  & count5  & ncount6  & ncount7  & count8  & count9  & count10  -> (c4'=0) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & count1  & ncount2  & ncount3  & count5  & ncount6  & ncount7  & count8  & count9  & count10  -> (c4'=0) & (c1'=c1+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & count2  & ncount3  & count5  & ncount6  & ncount7  & count8  & count9  & count10  -> (c4'=0) & (c2'=c2+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & count1  & count2  & ncount3  & count5  & ncount6  & ncount7  & count8  & count9  & count10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & ncount2  & count3  & count5  & ncount6  & ncount7  & count8  & count9  & count10  -> (c4'=0) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & count1  & ncount2  & count3  & count5  & ncount6  & ncount7  & count8  & count9  & count10  -> (c4'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & count2  & count3  & count5  & ncount6  & ncount7  & count8  & count9  & count10  -> (c4'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & count1  & count2  & count3  & count5  & ncount6  & ncount7  & count8  & count9  & count10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & ncount2  & ncount3  & ncount5  & count6  & ncount7  & count8  & count9  & count10  -> (c4'=0) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & count1  & ncount2  & ncount3  & ncount5  & count6  & ncount7  & count8  & count9  & count10  -> (c4'=0) & (c1'=c1+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & count2  & ncount3  & ncount5  & count6  & ncount7  & count8  & count9  & count10  -> (c4'=0) & (c2'=c2+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & count1  & count2  & ncount3  & ncount5  & count6  & ncount7  & count8  & count9  & count10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & ncount2  & count3  & ncount5  & count6  & ncount7  & count8  & count9  & count10  -> (c4'=0) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & count1  & ncount2  & count3  & ncount5  & count6  & ncount7  & count8  & count9  & count10  -> (c4'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & count2  & count3  & ncount5  & count6  & ncount7  & count8  & count9  & count10  -> (c4'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & count1  & count2  & count3  & ncount5  & count6  & ncount7  & count8  & count9  & count10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & ncount2  & ncount3  & count5  & count6  & ncount7  & count8  & count9  & count10  -> (c4'=0) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & count1  & ncount2  & ncount3  & count5  & count6  & ncount7  & count8  & count9  & count10  -> (c4'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & count2  & ncount3  & count5  & count6  & ncount7  & count8  & count9  & count10  -> (c4'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & count1  & count2  & ncount3  & count5  & count6  & ncount7  & count8  & count9  & count10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & ncount2  & count3  & count5  & count6  & ncount7  & count8  & count9  & count10  -> (c4'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & count1  & ncount2  & count3  & count5  & count6  & ncount7  & count8  & count9  & count10  -> (c4'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & count2  & count3  & count5  & count6  & ncount7  & count8  & count9  & count10  -> (c4'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & count1  & count2  & count3  & count5  & count6  & ncount7  & count8  & count9  & count10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & ncount2  & ncount3  & ncount5  & ncount6  & count7  & count8  & count9  & count10  -> (c4'=0) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & count1  & ncount2  & ncount3  & ncount5  & ncount6  & count7  & count8  & count9  & count10  -> (c4'=0) & (c1'=c1+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & count2  & ncount3  & ncount5  & ncount6  & count7  & count8  & count9  & count10  -> (c4'=0) & (c2'=c2+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & count1  & count2  & ncount3  & ncount5  & ncount6  & count7  & count8  & count9  & count10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & ncount2  & count3  & ncount5  & ncount6  & count7  & count8  & count9  & count10  -> (c4'=0) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & count1  & ncount2  & count3  & ncount5  & ncount6  & count7  & count8  & count9  & count10  -> (c4'=0) & (c1'=c1+1) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & count2  & count3  & ncount5  & ncount6  & count7  & count8  & count9  & count10  -> (c4'=0) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & count1  & count2  & count3  & ncount5  & ncount6  & count7  & count8  & count9  & count10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & ncount2  & ncount3  & count5  & ncount6  & count7  & count8  & count9  & count10  -> (c4'=0) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & count1  & ncount2  & ncount3  & count5  & ncount6  & count7  & count8  & count9  & count10  -> (c4'=0) & (c1'=c1+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & count2  & ncount3  & count5  & ncount6  & count7  & count8  & count9  & count10  -> (c4'=0) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & count1  & count2  & ncount3  & count5  & ncount6  & count7  & count8  & count9  & count10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & ncount2  & count3  & count5  & ncount6  & count7  & count8  & count9  & count10  -> (c4'=0) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & count1  & ncount2  & count3  & count5  & ncount6  & count7  & count8  & count9  & count10  -> (c4'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & count2  & count3  & count5  & ncount6  & count7  & count8  & count9  & count10  -> (c4'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & count1  & count2  & count3  & count5  & ncount6  & count7  & count8  & count9  & count10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & ncount2  & ncount3  & ncount5  & count6  & count7  & count8  & count9  & count10  -> (c4'=0) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & count1  & ncount2  & ncount3  & ncount5  & count6  & count7  & count8  & count9  & count10  -> (c4'=0) & (c1'=c1+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & count2  & ncount3  & ncount5  & count6  & count7  & count8  & count9  & count10  -> (c4'=0) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & count1  & count2  & ncount3  & ncount5  & count6  & count7  & count8  & count9  & count10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & ncount2  & count3  & ncount5  & count6  & count7  & count8  & count9  & count10  -> (c4'=0) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & count1  & ncount2  & count3  & ncount5  & count6  & count7  & count8  & count9  & count10  -> (c4'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & count2  & count3  & ncount5  & count6  & count7  & count8  & count9  & count10  -> (c4'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & count1  & count2  & count3  & ncount5  & count6  & count7  & count8  & count9  & count10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & ncount2  & ncount3  & count5  & count6  & count7  & count8  & count9  & count10  -> (c4'=0) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & count1  & ncount2  & ncount3  & count5  & count6  & count7  & count8  & count9  & count10  -> (c4'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & count2  & ncount3  & count5  & count6  & count7  & count8  & count9  & count10  -> (c4'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & count1  & count2  & ncount3  & count5  & count6  & count7  & count8  & count9  & count10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & ncount2  & count3  & count5  & count6  & count7  & count8  & count9  & count10  -> (c4'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & count1  & ncount2  & count3  & count5  & count6  & count7  & count8  & count9  & count10  -> (c4'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & ncount1  & count2  & count3  & count5  & count6  & count7  & count8  & count9  & count10  -> (c4'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s4] can4  & count1  & count2  & count3  & count5  & count6  & count7  & count8  & count9  & count10  -> (c4'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & ncount2  & ncount3  & ncount4  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c5'=0);
	[s5] can5  & count1  & ncount2  & ncount3  & ncount4  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c5'=0) & (c1'=c1+1);
	[s5] can5  & ncount1  & count2  & ncount3  & ncount4  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c5'=0) & (c2'=c2+1);
	[s5] can5  & count1  & count2  & ncount3  & ncount4  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1);
	[s5] can5  & ncount1  & ncount2  & count3  & ncount4  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c5'=0) & (c3'=c3+1);
	[s5] can5  & count1  & ncount2  & count3  & ncount4  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c3'=c3+1);
	[s5] can5  & ncount1  & count2  & count3  & ncount4  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c5'=0) & (c2'=c2+1) & (c3'=c3+1);
	[s5] can5  & count1  & count2  & count3  & ncount4  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1);
	[s5] can5  & ncount1  & ncount2  & ncount3  & count4  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c5'=0) & (c4'=c4+1);
	[s5] can5  & count1  & ncount2  & ncount3  & count4  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c4'=c4+1);
	[s5] can5  & ncount1  & count2  & ncount3  & count4  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c5'=0) & (c2'=c2+1) & (c4'=c4+1);
	[s5] can5  & count1  & count2  & ncount3  & count4  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1);
	[s5] can5  & ncount1  & ncount2  & count3  & count4  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c5'=0) & (c3'=c3+1) & (c4'=c4+1);
	[s5] can5  & count1  & ncount2  & count3  & count4  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1);
	[s5] can5  & ncount1  & count2  & count3  & count4  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c5'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1);
	[s5] can5  & count1  & count2  & count3  & count4  & ncount6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1);
	[s5] can5  & ncount1  & ncount2  & ncount3  & ncount4  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c5'=0) & (c6'=c6+1);
	[s5] can5  & count1  & ncount2  & ncount3  & ncount4  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c6'=c6+1);
	[s5] can5  & ncount1  & count2  & ncount3  & ncount4  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c5'=0) & (c2'=c2+1) & (c6'=c6+1);
	[s5] can5  & count1  & count2  & ncount3  & ncount4  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1);
	[s5] can5  & ncount1  & ncount2  & count3  & ncount4  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c5'=0) & (c3'=c3+1) & (c6'=c6+1);
	[s5] can5  & count1  & ncount2  & count3  & ncount4  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1);
	[s5] can5  & ncount1  & count2  & count3  & ncount4  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c5'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1);
	[s5] can5  & count1  & count2  & count3  & ncount4  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1);
	[s5] can5  & ncount1  & ncount2  & ncount3  & count4  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c5'=0) & (c4'=c4+1) & (c6'=c6+1);
	[s5] can5  & count1  & ncount2  & ncount3  & count4  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1);
	[s5] can5  & ncount1  & count2  & ncount3  & count4  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c5'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1);
	[s5] can5  & count1  & count2  & ncount3  & count4  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1);
	[s5] can5  & ncount1  & ncount2  & count3  & count4  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c5'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1);
	[s5] can5  & count1  & ncount2  & count3  & count4  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1);
	[s5] can5  & ncount1  & count2  & count3  & count4  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c5'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1);
	[s5] can5  & count1  & count2  & count3  & count4  & count6  & ncount7  & ncount8  & ncount9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1);
	[s5] can5  & ncount1  & ncount2  & ncount3  & ncount4  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c5'=0) & (c7'=c7+1);
	[s5] can5  & count1  & ncount2  & ncount3  & ncount4  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c7'=c7+1);
	[s5] can5  & ncount1  & count2  & ncount3  & ncount4  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c5'=0) & (c2'=c2+1) & (c7'=c7+1);
	[s5] can5  & count1  & count2  & ncount3  & ncount4  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c7'=c7+1);
	[s5] can5  & ncount1  & ncount2  & count3  & ncount4  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c5'=0) & (c3'=c3+1) & (c7'=c7+1);
	[s5] can5  & count1  & ncount2  & count3  & ncount4  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c3'=c3+1) & (c7'=c7+1);
	[s5] can5  & ncount1  & count2  & count3  & ncount4  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c5'=0) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1);
	[s5] can5  & count1  & count2  & count3  & ncount4  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1);
	[s5] can5  & ncount1  & ncount2  & ncount3  & count4  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c5'=0) & (c4'=c4+1) & (c7'=c7+1);
	[s5] can5  & count1  & ncount2  & ncount3  & count4  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c4'=c4+1) & (c7'=c7+1);
	[s5] can5  & ncount1  & count2  & ncount3  & count4  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c5'=0) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1);
	[s5] can5  & count1  & count2  & ncount3  & count4  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1);
	[s5] can5  & ncount1  & ncount2  & count3  & count4  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c5'=0) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1);
	[s5] can5  & count1  & ncount2  & count3  & count4  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1);
	[s5] can5  & ncount1  & count2  & count3  & count4  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c5'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1);
	[s5] can5  & count1  & count2  & count3  & count4  & ncount6  & count7  & ncount8  & ncount9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1);
	[s5] can5  & ncount1  & ncount2  & ncount3  & ncount4  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c5'=0) & (c6'=c6+1) & (c7'=c7+1);
	[s5] can5  & count1  & ncount2  & ncount3  & ncount4  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c6'=c6+1) & (c7'=c7+1);
	[s5] can5  & ncount1  & count2  & ncount3  & ncount4  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c5'=0) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1);
	[s5] can5  & count1  & count2  & ncount3  & ncount4  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1);
	[s5] can5  & ncount1  & ncount2  & count3  & ncount4  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c5'=0) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1);
	[s5] can5  & count1  & ncount2  & count3  & ncount4  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1);
	[s5] can5  & ncount1  & count2  & count3  & ncount4  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c5'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1);
	[s5] can5  & count1  & count2  & count3  & ncount4  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1);
	[s5] can5  & ncount1  & ncount2  & ncount3  & count4  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c5'=0) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1);
	[s5] can5  & count1  & ncount2  & ncount3  & count4  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1);
	[s5] can5  & ncount1  & count2  & ncount3  & count4  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c5'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1);
	[s5] can5  & count1  & count2  & ncount3  & count4  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1);
	[s5] can5  & ncount1  & ncount2  & count3  & count4  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c5'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1);
	[s5] can5  & count1  & ncount2  & count3  & count4  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1);
	[s5] can5  & ncount1  & count2  & count3  & count4  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c5'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1);
	[s5] can5  & count1  & count2  & count3  & count4  & count6  & count7  & ncount8  & ncount9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1);
	[s5] can5  & ncount1  & ncount2  & ncount3  & ncount4  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c5'=0) & (c8'=c8+1);
	[s5] can5  & count1  & ncount2  & ncount3  & ncount4  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c8'=c8+1);
	[s5] can5  & ncount1  & count2  & ncount3  & ncount4  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c5'=0) & (c2'=c2+1) & (c8'=c8+1);
	[s5] can5  & count1  & count2  & ncount3  & ncount4  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c8'=c8+1);
	[s5] can5  & ncount1  & ncount2  & count3  & ncount4  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c5'=0) & (c3'=c3+1) & (c8'=c8+1);
	[s5] can5  & count1  & ncount2  & count3  & ncount4  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c3'=c3+1) & (c8'=c8+1);
	[s5] can5  & ncount1  & count2  & count3  & ncount4  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c5'=0) & (c2'=c2+1) & (c3'=c3+1) & (c8'=c8+1);
	[s5] can5  & count1  & count2  & count3  & ncount4  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c8'=c8+1);
	[s5] can5  & ncount1  & ncount2  & ncount3  & count4  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c5'=0) & (c4'=c4+1) & (c8'=c8+1);
	[s5] can5  & count1  & ncount2  & ncount3  & count4  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c4'=c4+1) & (c8'=c8+1);
	[s5] can5  & ncount1  & count2  & ncount3  & count4  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c5'=0) & (c2'=c2+1) & (c4'=c4+1) & (c8'=c8+1);
	[s5] can5  & count1  & count2  & ncount3  & count4  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c8'=c8+1);
	[s5] can5  & ncount1  & ncount2  & count3  & count4  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c5'=0) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1);
	[s5] can5  & count1  & ncount2  & count3  & count4  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1);
	[s5] can5  & ncount1  & count2  & count3  & count4  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c5'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1);
	[s5] can5  & count1  & count2  & count3  & count4  & ncount6  & ncount7  & count8  & ncount9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1);
	[s5] can5  & ncount1  & ncount2  & ncount3  & ncount4  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c5'=0) & (c6'=c6+1) & (c8'=c8+1);
	[s5] can5  & count1  & ncount2  & ncount3  & ncount4  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c6'=c6+1) & (c8'=c8+1);
	[s5] can5  & ncount1  & count2  & ncount3  & ncount4  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c5'=0) & (c2'=c2+1) & (c6'=c6+1) & (c8'=c8+1);
	[s5] can5  & count1  & count2  & ncount3  & ncount4  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c8'=c8+1);
	[s5] can5  & ncount1  & ncount2  & count3  & ncount4  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c5'=0) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1);
	[s5] can5  & count1  & ncount2  & count3  & ncount4  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1);
	[s5] can5  & ncount1  & count2  & count3  & ncount4  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c5'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1);
	[s5] can5  & count1  & count2  & count3  & ncount4  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1);
	[s5] can5  & ncount1  & ncount2  & ncount3  & count4  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c5'=0) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1);
	[s5] can5  & count1  & ncount2  & ncount3  & count4  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1);
	[s5] can5  & ncount1  & count2  & ncount3  & count4  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c5'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1);
	[s5] can5  & count1  & count2  & ncount3  & count4  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1);
	[s5] can5  & ncount1  & ncount2  & count3  & count4  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c5'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1);
	[s5] can5  & count1  & ncount2  & count3  & count4  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1);
	[s5] can5  & ncount1  & count2  & count3  & count4  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c5'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1);
	[s5] can5  & count1  & count2  & count3  & count4  & count6  & ncount7  & count8  & ncount9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1);
	[s5] can5  & ncount1  & ncount2  & ncount3  & ncount4  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c5'=0) & (c7'=c7+1) & (c8'=c8+1);
	[s5] can5  & count1  & ncount2  & ncount3  & ncount4  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c7'=c7+1) & (c8'=c8+1);
	[s5] can5  & ncount1  & count2  & ncount3  & ncount4  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c5'=0) & (c2'=c2+1) & (c7'=c7+1) & (c8'=c8+1);
	[s5] can5  & count1  & count2  & ncount3  & ncount4  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c7'=c7+1) & (c8'=c8+1);
	[s5] can5  & ncount1  & ncount2  & count3  & ncount4  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c5'=0) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1);
	[s5] can5  & count1  & ncount2  & count3  & ncount4  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1);
	[s5] can5  & ncount1  & count2  & count3  & ncount4  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c5'=0) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1);
	[s5] can5  & count1  & count2  & count3  & ncount4  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1);
	[s5] can5  & ncount1  & ncount2  & ncount3  & count4  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c5'=0) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1);
	[s5] can5  & count1  & ncount2  & ncount3  & count4  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1);
	[s5] can5  & ncount1  & count2  & ncount3  & count4  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c5'=0) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1);
	[s5] can5  & count1  & count2  & ncount3  & count4  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1);
	[s5] can5  & ncount1  & ncount2  & count3  & count4  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c5'=0) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1);
	[s5] can5  & count1  & ncount2  & count3  & count4  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1);
	[s5] can5  & ncount1  & count2  & count3  & count4  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c5'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1);
	[s5] can5  & count1  & count2  & count3  & count4  & ncount6  & count7  & count8  & ncount9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1);
	[s5] can5  & ncount1  & ncount2  & ncount3  & ncount4  & count6  & count7  & count8  & ncount9  & ncount10  -> (c5'=0) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s5] can5  & count1  & ncount2  & ncount3  & ncount4  & count6  & count7  & count8  & ncount9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s5] can5  & ncount1  & count2  & ncount3  & ncount4  & count6  & count7  & count8  & ncount9  & ncount10  -> (c5'=0) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s5] can5  & count1  & count2  & ncount3  & ncount4  & count6  & count7  & count8  & ncount9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s5] can5  & ncount1  & ncount2  & count3  & ncount4  & count6  & count7  & count8  & ncount9  & ncount10  -> (c5'=0) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s5] can5  & count1  & ncount2  & count3  & ncount4  & count6  & count7  & count8  & ncount9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s5] can5  & ncount1  & count2  & count3  & ncount4  & count6  & count7  & count8  & ncount9  & ncount10  -> (c5'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s5] can5  & count1  & count2  & count3  & ncount4  & count6  & count7  & count8  & ncount9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s5] can5  & ncount1  & ncount2  & ncount3  & count4  & count6  & count7  & count8  & ncount9  & ncount10  -> (c5'=0) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s5] can5  & count1  & ncount2  & ncount3  & count4  & count6  & count7  & count8  & ncount9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s5] can5  & ncount1  & count2  & ncount3  & count4  & count6  & count7  & count8  & ncount9  & ncount10  -> (c5'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s5] can5  & count1  & count2  & ncount3  & count4  & count6  & count7  & count8  & ncount9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s5] can5  & ncount1  & ncount2  & count3  & count4  & count6  & count7  & count8  & ncount9  & ncount10  -> (c5'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s5] can5  & count1  & ncount2  & count3  & count4  & count6  & count7  & count8  & ncount9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s5] can5  & ncount1  & count2  & count3  & count4  & count6  & count7  & count8  & ncount9  & ncount10  -> (c5'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s5] can5  & count1  & count2  & count3  & count4  & count6  & count7  & count8  & ncount9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s5] can5  & ncount1  & ncount2  & ncount3  & ncount4  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c5'=0) & (c9'=c9+1);
	[s5] can5  & count1  & ncount2  & ncount3  & ncount4  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c9'=c9+1);
	[s5] can5  & ncount1  & count2  & ncount3  & ncount4  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c5'=0) & (c2'=c2+1) & (c9'=c9+1);
	[s5] can5  & count1  & count2  & ncount3  & ncount4  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c9'=c9+1);
	[s5] can5  & ncount1  & ncount2  & count3  & ncount4  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c5'=0) & (c3'=c3+1) & (c9'=c9+1);
	[s5] can5  & count1  & ncount2  & count3  & ncount4  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c3'=c3+1) & (c9'=c9+1);
	[s5] can5  & ncount1  & count2  & count3  & ncount4  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c5'=0) & (c2'=c2+1) & (c3'=c3+1) & (c9'=c9+1);
	[s5] can5  & count1  & count2  & count3  & ncount4  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c9'=c9+1);
	[s5] can5  & ncount1  & ncount2  & ncount3  & count4  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c5'=0) & (c4'=c4+1) & (c9'=c9+1);
	[s5] can5  & count1  & ncount2  & ncount3  & count4  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c4'=c4+1) & (c9'=c9+1);
	[s5] can5  & ncount1  & count2  & ncount3  & count4  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c5'=0) & (c2'=c2+1) & (c4'=c4+1) & (c9'=c9+1);
	[s5] can5  & count1  & count2  & ncount3  & count4  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c9'=c9+1);
	[s5] can5  & ncount1  & ncount2  & count3  & count4  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c5'=0) & (c3'=c3+1) & (c4'=c4+1) & (c9'=c9+1);
	[s5] can5  & count1  & ncount2  & count3  & count4  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c9'=c9+1);
	[s5] can5  & ncount1  & count2  & count3  & count4  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c5'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c9'=c9+1);
	[s5] can5  & count1  & count2  & count3  & count4  & ncount6  & ncount7  & ncount8  & count9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c9'=c9+1);
	[s5] can5  & ncount1  & ncount2  & ncount3  & ncount4  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c5'=0) & (c6'=c6+1) & (c9'=c9+1);
	[s5] can5  & count1  & ncount2  & ncount3  & ncount4  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c6'=c6+1) & (c9'=c9+1);
	[s5] can5  & ncount1  & count2  & ncount3  & ncount4  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c5'=0) & (c2'=c2+1) & (c6'=c6+1) & (c9'=c9+1);
	[s5] can5  & count1  & count2  & ncount3  & ncount4  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c9'=c9+1);
	[s5] can5  & ncount1  & ncount2  & count3  & ncount4  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c5'=0) & (c3'=c3+1) & (c6'=c6+1) & (c9'=c9+1);
	[s5] can5  & count1  & ncount2  & count3  & ncount4  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c9'=c9+1);
	[s5] can5  & ncount1  & count2  & count3  & ncount4  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c5'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c9'=c9+1);
	[s5] can5  & count1  & count2  & count3  & ncount4  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c9'=c9+1);
	[s5] can5  & ncount1  & ncount2  & ncount3  & count4  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c5'=0) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1);
	[s5] can5  & count1  & ncount2  & ncount3  & count4  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1);
	[s5] can5  & ncount1  & count2  & ncount3  & count4  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c5'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1);
	[s5] can5  & count1  & count2  & ncount3  & count4  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1);
	[s5] can5  & ncount1  & ncount2  & count3  & count4  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c5'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1);
	[s5] can5  & count1  & ncount2  & count3  & count4  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1);
	[s5] can5  & ncount1  & count2  & count3  & count4  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c5'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1);
	[s5] can5  & count1  & count2  & count3  & count4  & count6  & ncount7  & ncount8  & count9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1);
	[s5] can5  & ncount1  & ncount2  & ncount3  & ncount4  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c5'=0) & (c7'=c7+1) & (c9'=c9+1);
	[s5] can5  & count1  & ncount2  & ncount3  & ncount4  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c7'=c7+1) & (c9'=c9+1);
	[s5] can5  & ncount1  & count2  & ncount3  & ncount4  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c5'=0) & (c2'=c2+1) & (c7'=c7+1) & (c9'=c9+1);
	[s5] can5  & count1  & count2  & ncount3  & ncount4  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c7'=c7+1) & (c9'=c9+1);
	[s5] can5  & ncount1  & ncount2  & count3  & ncount4  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c5'=0) & (c3'=c3+1) & (c7'=c7+1) & (c9'=c9+1);
	[s5] can5  & count1  & ncount2  & count3  & ncount4  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c3'=c3+1) & (c7'=c7+1) & (c9'=c9+1);
	[s5] can5  & ncount1  & count2  & count3  & ncount4  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c5'=0) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1) & (c9'=c9+1);
	[s5] can5  & count1  & count2  & count3  & ncount4  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1) & (c9'=c9+1);
	[s5] can5  & ncount1  & ncount2  & ncount3  & count4  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c5'=0) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1);
	[s5] can5  & count1  & ncount2  & ncount3  & count4  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1);
	[s5] can5  & ncount1  & count2  & ncount3  & count4  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c5'=0) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1);
	[s5] can5  & count1  & count2  & ncount3  & count4  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1);
	[s5] can5  & ncount1  & ncount2  & count3  & count4  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c5'=0) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1);
	[s5] can5  & count1  & ncount2  & count3  & count4  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1);
	[s5] can5  & ncount1  & count2  & count3  & count4  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c5'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1);
	[s5] can5  & count1  & count2  & count3  & count4  & ncount6  & count7  & ncount8  & count9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1);
	[s5] can5  & ncount1  & ncount2  & ncount3  & ncount4  & count6  & count7  & ncount8  & count9  & ncount10  -> (c5'=0) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s5] can5  & count1  & ncount2  & ncount3  & ncount4  & count6  & count7  & ncount8  & count9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s5] can5  & ncount1  & count2  & ncount3  & ncount4  & count6  & count7  & ncount8  & count9  & ncount10  -> (c5'=0) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s5] can5  & count1  & count2  & ncount3  & ncount4  & count6  & count7  & ncount8  & count9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s5] can5  & ncount1  & ncount2  & count3  & ncount4  & count6  & count7  & ncount8  & count9  & ncount10  -> (c5'=0) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s5] can5  & count1  & ncount2  & count3  & ncount4  & count6  & count7  & ncount8  & count9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s5] can5  & ncount1  & count2  & count3  & ncount4  & count6  & count7  & ncount8  & count9  & ncount10  -> (c5'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s5] can5  & count1  & count2  & count3  & ncount4  & count6  & count7  & ncount8  & count9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s5] can5  & ncount1  & ncount2  & ncount3  & count4  & count6  & count7  & ncount8  & count9  & ncount10  -> (c5'=0) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s5] can5  & count1  & ncount2  & ncount3  & count4  & count6  & count7  & ncount8  & count9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s5] can5  & ncount1  & count2  & ncount3  & count4  & count6  & count7  & ncount8  & count9  & ncount10  -> (c5'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s5] can5  & count1  & count2  & ncount3  & count4  & count6  & count7  & ncount8  & count9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s5] can5  & ncount1  & ncount2  & count3  & count4  & count6  & count7  & ncount8  & count9  & ncount10  -> (c5'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s5] can5  & count1  & ncount2  & count3  & count4  & count6  & count7  & ncount8  & count9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s5] can5  & ncount1  & count2  & count3  & count4  & count6  & count7  & ncount8  & count9  & ncount10  -> (c5'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s5] can5  & count1  & count2  & count3  & count4  & count6  & count7  & ncount8  & count9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s5] can5  & ncount1  & ncount2  & ncount3  & ncount4  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c5'=0) & (c8'=c8+1) & (c9'=c9+1);
	[s5] can5  & count1  & ncount2  & ncount3  & ncount4  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c8'=c8+1) & (c9'=c9+1);
	[s5] can5  & ncount1  & count2  & ncount3  & ncount4  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c5'=0) & (c2'=c2+1) & (c8'=c8+1) & (c9'=c9+1);
	[s5] can5  & count1  & count2  & ncount3  & ncount4  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c8'=c8+1) & (c9'=c9+1);
	[s5] can5  & ncount1  & ncount2  & count3  & ncount4  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c5'=0) & (c3'=c3+1) & (c8'=c8+1) & (c9'=c9+1);
	[s5] can5  & count1  & ncount2  & count3  & ncount4  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c3'=c3+1) & (c8'=c8+1) & (c9'=c9+1);
	[s5] can5  & ncount1  & count2  & count3  & ncount4  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c5'=0) & (c2'=c2+1) & (c3'=c3+1) & (c8'=c8+1) & (c9'=c9+1);
	[s5] can5  & count1  & count2  & count3  & ncount4  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c8'=c8+1) & (c9'=c9+1);
	[s5] can5  & ncount1  & ncount2  & ncount3  & count4  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c5'=0) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1);
	[s5] can5  & count1  & ncount2  & ncount3  & count4  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1);
	[s5] can5  & ncount1  & count2  & ncount3  & count4  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c5'=0) & (c2'=c2+1) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1);
	[s5] can5  & count1  & count2  & ncount3  & count4  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1);
	[s5] can5  & ncount1  & ncount2  & count3  & count4  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c5'=0) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1);
	[s5] can5  & count1  & ncount2  & count3  & count4  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1);
	[s5] can5  & ncount1  & count2  & count3  & count4  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c5'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1);
	[s5] can5  & count1  & count2  & count3  & count4  & ncount6  & ncount7  & count8  & count9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1);
	[s5] can5  & ncount1  & ncount2  & ncount3  & ncount4  & count6  & ncount7  & count8  & count9  & ncount10  -> (c5'=0) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s5] can5  & count1  & ncount2  & ncount3  & ncount4  & count6  & ncount7  & count8  & count9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s5] can5  & ncount1  & count2  & ncount3  & ncount4  & count6  & ncount7  & count8  & count9  & ncount10  -> (c5'=0) & (c2'=c2+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s5] can5  & count1  & count2  & ncount3  & ncount4  & count6  & ncount7  & count8  & count9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s5] can5  & ncount1  & ncount2  & count3  & ncount4  & count6  & ncount7  & count8  & count9  & ncount10  -> (c5'=0) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s5] can5  & count1  & ncount2  & count3  & ncount4  & count6  & ncount7  & count8  & count9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s5] can5  & ncount1  & count2  & count3  & ncount4  & count6  & ncount7  & count8  & count9  & ncount10  -> (c5'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s5] can5  & count1  & count2  & count3  & ncount4  & count6  & ncount7  & count8  & count9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s5] can5  & ncount1  & ncount2  & ncount3  & count4  & count6  & ncount7  & count8  & count9  & ncount10  -> (c5'=0) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s5] can5  & count1  & ncount2  & ncount3  & count4  & count6  & ncount7  & count8  & count9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s5] can5  & ncount1  & count2  & ncount3  & count4  & count6  & ncount7  & count8  & count9  & ncount10  -> (c5'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s5] can5  & count1  & count2  & ncount3  & count4  & count6  & ncount7  & count8  & count9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s5] can5  & ncount1  & ncount2  & count3  & count4  & count6  & ncount7  & count8  & count9  & ncount10  -> (c5'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s5] can5  & count1  & ncount2  & count3  & count4  & count6  & ncount7  & count8  & count9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s5] can5  & ncount1  & count2  & count3  & count4  & count6  & ncount7  & count8  & count9  & ncount10  -> (c5'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s5] can5  & count1  & count2  & count3  & count4  & count6  & ncount7  & count8  & count9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s5] can5  & ncount1  & ncount2  & ncount3  & ncount4  & ncount6  & count7  & count8  & count9  & ncount10  -> (c5'=0) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s5] can5  & count1  & ncount2  & ncount3  & ncount4  & ncount6  & count7  & count8  & count9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s5] can5  & ncount1  & count2  & ncount3  & ncount4  & ncount6  & count7  & count8  & count9  & ncount10  -> (c5'=0) & (c2'=c2+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s5] can5  & count1  & count2  & ncount3  & ncount4  & ncount6  & count7  & count8  & count9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s5] can5  & ncount1  & ncount2  & count3  & ncount4  & ncount6  & count7  & count8  & count9  & ncount10  -> (c5'=0) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s5] can5  & count1  & ncount2  & count3  & ncount4  & ncount6  & count7  & count8  & count9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s5] can5  & ncount1  & count2  & count3  & ncount4  & ncount6  & count7  & count8  & count9  & ncount10  -> (c5'=0) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s5] can5  & count1  & count2  & count3  & ncount4  & ncount6  & count7  & count8  & count9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s5] can5  & ncount1  & ncount2  & ncount3  & count4  & ncount6  & count7  & count8  & count9  & ncount10  -> (c5'=0) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s5] can5  & count1  & ncount2  & ncount3  & count4  & ncount6  & count7  & count8  & count9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s5] can5  & ncount1  & count2  & ncount3  & count4  & ncount6  & count7  & count8  & count9  & ncount10  -> (c5'=0) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s5] can5  & count1  & count2  & ncount3  & count4  & ncount6  & count7  & count8  & count9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s5] can5  & ncount1  & ncount2  & count3  & count4  & ncount6  & count7  & count8  & count9  & ncount10  -> (c5'=0) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s5] can5  & count1  & ncount2  & count3  & count4  & ncount6  & count7  & count8  & count9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s5] can5  & ncount1  & count2  & count3  & count4  & ncount6  & count7  & count8  & count9  & ncount10  -> (c5'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s5] can5  & count1  & count2  & count3  & count4  & ncount6  & count7  & count8  & count9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s5] can5  & ncount1  & ncount2  & ncount3  & ncount4  & count6  & count7  & count8  & count9  & ncount10  -> (c5'=0) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s5] can5  & count1  & ncount2  & ncount3  & ncount4  & count6  & count7  & count8  & count9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s5] can5  & ncount1  & count2  & ncount3  & ncount4  & count6  & count7  & count8  & count9  & ncount10  -> (c5'=0) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s5] can5  & count1  & count2  & ncount3  & ncount4  & count6  & count7  & count8  & count9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s5] can5  & ncount1  & ncount2  & count3  & ncount4  & count6  & count7  & count8  & count9  & ncount10  -> (c5'=0) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s5] can5  & count1  & ncount2  & count3  & ncount4  & count6  & count7  & count8  & count9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s5] can5  & ncount1  & count2  & count3  & ncount4  & count6  & count7  & count8  & count9  & ncount10  -> (c5'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s5] can5  & count1  & count2  & count3  & ncount4  & count6  & count7  & count8  & count9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s5] can5  & ncount1  & ncount2  & ncount3  & count4  & count6  & count7  & count8  & count9  & ncount10  -> (c5'=0) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s5] can5  & count1  & ncount2  & ncount3  & count4  & count6  & count7  & count8  & count9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s5] can5  & ncount1  & count2  & ncount3  & count4  & count6  & count7  & count8  & count9  & ncount10  -> (c5'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s5] can5  & count1  & count2  & ncount3  & count4  & count6  & count7  & count8  & count9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s5] can5  & ncount1  & ncount2  & count3  & count4  & count6  & count7  & count8  & count9  & ncount10  -> (c5'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s5] can5  & count1  & ncount2  & count3  & count4  & count6  & count7  & count8  & count9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s5] can5  & ncount1  & count2  & count3  & count4  & count6  & count7  & count8  & count9  & ncount10  -> (c5'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s5] can5  & count1  & count2  & count3  & count4  & count6  & count7  & count8  & count9  & ncount10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s5] can5  & ncount1  & ncount2  & ncount3  & ncount4  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c5'=0) & (c10'=c10+1);
	[s5] can5  & count1  & ncount2  & ncount3  & ncount4  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c5'=0) & (c1'=c1+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & count2  & ncount3  & ncount4  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c5'=0) & (c2'=c2+1) & (c10'=c10+1);
	[s5] can5  & count1  & count2  & ncount3  & ncount4  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & ncount2  & count3  & ncount4  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c5'=0) & (c3'=c3+1) & (c10'=c10+1);
	[s5] can5  & count1  & ncount2  & count3  & ncount4  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c5'=0) & (c1'=c1+1) & (c3'=c3+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & count2  & count3  & ncount4  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c5'=0) & (c2'=c2+1) & (c3'=c3+1) & (c10'=c10+1);
	[s5] can5  & count1  & count2  & count3  & ncount4  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & ncount2  & ncount3  & count4  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c5'=0) & (c4'=c4+1) & (c10'=c10+1);
	[s5] can5  & count1  & ncount2  & ncount3  & count4  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c5'=0) & (c1'=c1+1) & (c4'=c4+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & count2  & ncount3  & count4  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c5'=0) & (c2'=c2+1) & (c4'=c4+1) & (c10'=c10+1);
	[s5] can5  & count1  & count2  & ncount3  & count4  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & ncount2  & count3  & count4  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c5'=0) & (c3'=c3+1) & (c4'=c4+1) & (c10'=c10+1);
	[s5] can5  & count1  & ncount2  & count3  & count4  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c5'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & count2  & count3  & count4  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c5'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c10'=c10+1);
	[s5] can5  & count1  & count2  & count3  & count4  & ncount6  & ncount7  & ncount8  & ncount9  & count10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & ncount2  & ncount3  & ncount4  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c5'=0) & (c6'=c6+1) & (c10'=c10+1);
	[s5] can5  & count1  & ncount2  & ncount3  & ncount4  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c5'=0) & (c1'=c1+1) & (c6'=c6+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & count2  & ncount3  & ncount4  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c5'=0) & (c2'=c2+1) & (c6'=c6+1) & (c10'=c10+1);
	[s5] can5  & count1  & count2  & ncount3  & ncount4  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & ncount2  & count3  & ncount4  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c5'=0) & (c3'=c3+1) & (c6'=c6+1) & (c10'=c10+1);
	[s5] can5  & count1  & ncount2  & count3  & ncount4  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c5'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & count2  & count3  & ncount4  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c5'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c10'=c10+1);
	[s5] can5  & count1  & count2  & count3  & ncount4  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & ncount2  & ncount3  & count4  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c5'=0) & (c4'=c4+1) & (c6'=c6+1) & (c10'=c10+1);
	[s5] can5  & count1  & ncount2  & ncount3  & count4  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c5'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & count2  & ncount3  & count4  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c5'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c10'=c10+1);
	[s5] can5  & count1  & count2  & ncount3  & count4  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & ncount2  & count3  & count4  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c5'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c10'=c10+1);
	[s5] can5  & count1  & ncount2  & count3  & count4  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c5'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & count2  & count3  & count4  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c5'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c10'=c10+1);
	[s5] can5  & count1  & count2  & count3  & count4  & count6  & ncount7  & ncount8  & ncount9  & count10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & ncount2  & ncount3  & ncount4  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c5'=0) & (c7'=c7+1) & (c10'=c10+1);
	[s5] can5  & count1  & ncount2  & ncount3  & ncount4  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c5'=0) & (c1'=c1+1) & (c7'=c7+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & count2  & ncount3  & ncount4  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c5'=0) & (c2'=c2+1) & (c7'=c7+1) & (c10'=c10+1);
	[s5] can5  & count1  & count2  & ncount3  & ncount4  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c7'=c7+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & ncount2  & count3  & ncount4  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c5'=0) & (c3'=c3+1) & (c7'=c7+1) & (c10'=c10+1);
	[s5] can5  & count1  & ncount2  & count3  & ncount4  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c5'=0) & (c1'=c1+1) & (c3'=c3+1) & (c7'=c7+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & count2  & count3  & ncount4  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c5'=0) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1) & (c10'=c10+1);
	[s5] can5  & count1  & count2  & count3  & ncount4  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & ncount2  & ncount3  & count4  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c5'=0) & (c4'=c4+1) & (c7'=c7+1) & (c10'=c10+1);
	[s5] can5  & count1  & ncount2  & ncount3  & count4  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c5'=0) & (c1'=c1+1) & (c4'=c4+1) & (c7'=c7+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & count2  & ncount3  & count4  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c5'=0) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1) & (c10'=c10+1);
	[s5] can5  & count1  & count2  & ncount3  & count4  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & ncount2  & count3  & count4  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c5'=0) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c10'=c10+1);
	[s5] can5  & count1  & ncount2  & count3  & count4  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c5'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & count2  & count3  & count4  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c5'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c10'=c10+1);
	[s5] can5  & count1  & count2  & count3  & count4  & ncount6  & count7  & ncount8  & ncount9  & count10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & ncount2  & ncount3  & ncount4  & count6  & count7  & ncount8  & ncount9  & count10  -> (c5'=0) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s5] can5  & count1  & ncount2  & ncount3  & ncount4  & count6  & count7  & ncount8  & ncount9  & count10  -> (c5'=0) & (c1'=c1+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & count2  & ncount3  & ncount4  & count6  & count7  & ncount8  & ncount9  & count10  -> (c5'=0) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s5] can5  & count1  & count2  & ncount3  & ncount4  & count6  & count7  & ncount8  & ncount9  & count10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & ncount2  & count3  & ncount4  & count6  & count7  & ncount8  & ncount9  & count10  -> (c5'=0) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s5] can5  & count1  & ncount2  & count3  & ncount4  & count6  & count7  & ncount8  & ncount9  & count10  -> (c5'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & count2  & count3  & ncount4  & count6  & count7  & ncount8  & ncount9  & count10  -> (c5'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s5] can5  & count1  & count2  & count3  & ncount4  & count6  & count7  & ncount8  & ncount9  & count10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & ncount2  & ncount3  & count4  & count6  & count7  & ncount8  & ncount9  & count10  -> (c5'=0) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s5] can5  & count1  & ncount2  & ncount3  & count4  & count6  & count7  & ncount8  & ncount9  & count10  -> (c5'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & count2  & ncount3  & count4  & count6  & count7  & ncount8  & ncount9  & count10  -> (c5'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s5] can5  & count1  & count2  & ncount3  & count4  & count6  & count7  & ncount8  & ncount9  & count10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & ncount2  & count3  & count4  & count6  & count7  & ncount8  & ncount9  & count10  -> (c5'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s5] can5  & count1  & ncount2  & count3  & count4  & count6  & count7  & ncount8  & ncount9  & count10  -> (c5'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & count2  & count3  & count4  & count6  & count7  & ncount8  & ncount9  & count10  -> (c5'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s5] can5  & count1  & count2  & count3  & count4  & count6  & count7  & ncount8  & ncount9  & count10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & ncount2  & ncount3  & ncount4  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c5'=0) & (c8'=c8+1) & (c10'=c10+1);
	[s5] can5  & count1  & ncount2  & ncount3  & ncount4  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c5'=0) & (c1'=c1+1) & (c8'=c8+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & count2  & ncount3  & ncount4  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c5'=0) & (c2'=c2+1) & (c8'=c8+1) & (c10'=c10+1);
	[s5] can5  & count1  & count2  & ncount3  & ncount4  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c8'=c8+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & ncount2  & count3  & ncount4  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c5'=0) & (c3'=c3+1) & (c8'=c8+1) & (c10'=c10+1);
	[s5] can5  & count1  & ncount2  & count3  & ncount4  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c5'=0) & (c1'=c1+1) & (c3'=c3+1) & (c8'=c8+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & count2  & count3  & ncount4  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c5'=0) & (c2'=c2+1) & (c3'=c3+1) & (c8'=c8+1) & (c10'=c10+1);
	[s5] can5  & count1  & count2  & count3  & ncount4  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c8'=c8+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & ncount2  & ncount3  & count4  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c5'=0) & (c4'=c4+1) & (c8'=c8+1) & (c10'=c10+1);
	[s5] can5  & count1  & ncount2  & ncount3  & count4  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c5'=0) & (c1'=c1+1) & (c4'=c4+1) & (c8'=c8+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & count2  & ncount3  & count4  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c5'=0) & (c2'=c2+1) & (c4'=c4+1) & (c8'=c8+1) & (c10'=c10+1);
	[s5] can5  & count1  & count2  & ncount3  & count4  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c8'=c8+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & ncount2  & count3  & count4  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c5'=0) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1) & (c10'=c10+1);
	[s5] can5  & count1  & ncount2  & count3  & count4  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c5'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & count2  & count3  & count4  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c5'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1) & (c10'=c10+1);
	[s5] can5  & count1  & count2  & count3  & count4  & ncount6  & ncount7  & count8  & ncount9  & count10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & ncount2  & ncount3  & ncount4  & count6  & ncount7  & count8  & ncount9  & count10  -> (c5'=0) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s5] can5  & count1  & ncount2  & ncount3  & ncount4  & count6  & ncount7  & count8  & ncount9  & count10  -> (c5'=0) & (c1'=c1+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & count2  & ncount3  & ncount4  & count6  & ncount7  & count8  & ncount9  & count10  -> (c5'=0) & (c2'=c2+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s5] can5  & count1  & count2  & ncount3  & ncount4  & count6  & ncount7  & count8  & ncount9  & count10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & ncount2  & count3  & ncount4  & count6  & ncount7  & count8  & ncount9  & count10  -> (c5'=0) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s5] can5  & count1  & ncount2  & count3  & ncount4  & count6  & ncount7  & count8  & ncount9  & count10  -> (c5'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & count2  & count3  & ncount4  & count6  & ncount7  & count8  & ncount9  & count10  -> (c5'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s5] can5  & count1  & count2  & count3  & ncount4  & count6  & ncount7  & count8  & ncount9  & count10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & ncount2  & ncount3  & count4  & count6  & ncount7  & count8  & ncount9  & count10  -> (c5'=0) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s5] can5  & count1  & ncount2  & ncount3  & count4  & count6  & ncount7  & count8  & ncount9  & count10  -> (c5'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & count2  & ncount3  & count4  & count6  & ncount7  & count8  & ncount9  & count10  -> (c5'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s5] can5  & count1  & count2  & ncount3  & count4  & count6  & ncount7  & count8  & ncount9  & count10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & ncount2  & count3  & count4  & count6  & ncount7  & count8  & ncount9  & count10  -> (c5'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s5] can5  & count1  & ncount2  & count3  & count4  & count6  & ncount7  & count8  & ncount9  & count10  -> (c5'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & count2  & count3  & count4  & count6  & ncount7  & count8  & ncount9  & count10  -> (c5'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s5] can5  & count1  & count2  & count3  & count4  & count6  & ncount7  & count8  & ncount9  & count10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & ncount2  & ncount3  & ncount4  & ncount6  & count7  & count8  & ncount9  & count10  -> (c5'=0) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s5] can5  & count1  & ncount2  & ncount3  & ncount4  & ncount6  & count7  & count8  & ncount9  & count10  -> (c5'=0) & (c1'=c1+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & count2  & ncount3  & ncount4  & ncount6  & count7  & count8  & ncount9  & count10  -> (c5'=0) & (c2'=c2+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s5] can5  & count1  & count2  & ncount3  & ncount4  & ncount6  & count7  & count8  & ncount9  & count10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & ncount2  & count3  & ncount4  & ncount6  & count7  & count8  & ncount9  & count10  -> (c5'=0) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s5] can5  & count1  & ncount2  & count3  & ncount4  & ncount6  & count7  & count8  & ncount9  & count10  -> (c5'=0) & (c1'=c1+1) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & count2  & count3  & ncount4  & ncount6  & count7  & count8  & ncount9  & count10  -> (c5'=0) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s5] can5  & count1  & count2  & count3  & ncount4  & ncount6  & count7  & count8  & ncount9  & count10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & ncount2  & ncount3  & count4  & ncount6  & count7  & count8  & ncount9  & count10  -> (c5'=0) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s5] can5  & count1  & ncount2  & ncount3  & count4  & ncount6  & count7  & count8  & ncount9  & count10  -> (c5'=0) & (c1'=c1+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & count2  & ncount3  & count4  & ncount6  & count7  & count8  & ncount9  & count10  -> (c5'=0) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s5] can5  & count1  & count2  & ncount3  & count4  & ncount6  & count7  & count8  & ncount9  & count10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & ncount2  & count3  & count4  & ncount6  & count7  & count8  & ncount9  & count10  -> (c5'=0) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s5] can5  & count1  & ncount2  & count3  & count4  & ncount6  & count7  & count8  & ncount9  & count10  -> (c5'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & count2  & count3  & count4  & ncount6  & count7  & count8  & ncount9  & count10  -> (c5'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s5] can5  & count1  & count2  & count3  & count4  & ncount6  & count7  & count8  & ncount9  & count10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & ncount2  & ncount3  & ncount4  & count6  & count7  & count8  & ncount9  & count10  -> (c5'=0) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s5] can5  & count1  & ncount2  & ncount3  & ncount4  & count6  & count7  & count8  & ncount9  & count10  -> (c5'=0) & (c1'=c1+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & count2  & ncount3  & ncount4  & count6  & count7  & count8  & ncount9  & count10  -> (c5'=0) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s5] can5  & count1  & count2  & ncount3  & ncount4  & count6  & count7  & count8  & ncount9  & count10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & ncount2  & count3  & ncount4  & count6  & count7  & count8  & ncount9  & count10  -> (c5'=0) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s5] can5  & count1  & ncount2  & count3  & ncount4  & count6  & count7  & count8  & ncount9  & count10  -> (c5'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & count2  & count3  & ncount4  & count6  & count7  & count8  & ncount9  & count10  -> (c5'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s5] can5  & count1  & count2  & count3  & ncount4  & count6  & count7  & count8  & ncount9  & count10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & ncount2  & ncount3  & count4  & count6  & count7  & count8  & ncount9  & count10  -> (c5'=0) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s5] can5  & count1  & ncount2  & ncount3  & count4  & count6  & count7  & count8  & ncount9  & count10  -> (c5'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & count2  & ncount3  & count4  & count6  & count7  & count8  & ncount9  & count10  -> (c5'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s5] can5  & count1  & count2  & ncount3  & count4  & count6  & count7  & count8  & ncount9  & count10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & ncount2  & count3  & count4  & count6  & count7  & count8  & ncount9  & count10  -> (c5'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s5] can5  & count1  & ncount2  & count3  & count4  & count6  & count7  & count8  & ncount9  & count10  -> (c5'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & count2  & count3  & count4  & count6  & count7  & count8  & ncount9  & count10  -> (c5'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s5] can5  & count1  & count2  & count3  & count4  & count6  & count7  & count8  & ncount9  & count10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & ncount2  & ncount3  & ncount4  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c5'=0) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & count1  & ncount2  & ncount3  & ncount4  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c5'=0) & (c1'=c1+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & count2  & ncount3  & ncount4  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c5'=0) & (c2'=c2+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & count1  & count2  & ncount3  & ncount4  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & ncount2  & count3  & ncount4  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c5'=0) & (c3'=c3+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & count1  & ncount2  & count3  & ncount4  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c5'=0) & (c1'=c1+1) & (c3'=c3+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & count2  & count3  & ncount4  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c5'=0) & (c2'=c2+1) & (c3'=c3+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & count1  & count2  & count3  & ncount4  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & ncount2  & ncount3  & count4  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c5'=0) & (c4'=c4+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & count1  & ncount2  & ncount3  & count4  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c5'=0) & (c1'=c1+1) & (c4'=c4+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & count2  & ncount3  & count4  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c5'=0) & (c2'=c2+1) & (c4'=c4+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & count1  & count2  & ncount3  & count4  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & ncount2  & count3  & count4  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c5'=0) & (c3'=c3+1) & (c4'=c4+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & count1  & ncount2  & count3  & count4  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c5'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & count2  & count3  & count4  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c5'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & count1  & count2  & count3  & count4  & ncount6  & ncount7  & ncount8  & count9  & count10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & ncount2  & ncount3  & ncount4  & count6  & ncount7  & ncount8  & count9  & count10  -> (c5'=0) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & count1  & ncount2  & ncount3  & ncount4  & count6  & ncount7  & ncount8  & count9  & count10  -> (c5'=0) & (c1'=c1+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & count2  & ncount3  & ncount4  & count6  & ncount7  & ncount8  & count9  & count10  -> (c5'=0) & (c2'=c2+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & count1  & count2  & ncount3  & ncount4  & count6  & ncount7  & ncount8  & count9  & count10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & ncount2  & count3  & ncount4  & count6  & ncount7  & ncount8  & count9  & count10  -> (c5'=0) & (c3'=c3+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & count1  & ncount2  & count3  & ncount4  & count6  & ncount7  & ncount8  & count9  & count10  -> (c5'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & count2  & count3  & ncount4  & count6  & ncount7  & ncount8  & count9  & count10  -> (c5'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & count1  & count2  & count3  & ncount4  & count6  & ncount7  & ncount8  & count9  & count10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & ncount2  & ncount3  & count4  & count6  & ncount7  & ncount8  & count9  & count10  -> (c5'=0) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & count1  & ncount2  & ncount3  & count4  & count6  & ncount7  & ncount8  & count9  & count10  -> (c5'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & count2  & ncount3  & count4  & count6  & ncount7  & ncount8  & count9  & count10  -> (c5'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & count1  & count2  & ncount3  & count4  & count6  & ncount7  & ncount8  & count9  & count10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & ncount2  & count3  & count4  & count6  & ncount7  & ncount8  & count9  & count10  -> (c5'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & count1  & ncount2  & count3  & count4  & count6  & ncount7  & ncount8  & count9  & count10  -> (c5'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & count2  & count3  & count4  & count6  & ncount7  & ncount8  & count9  & count10  -> (c5'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & count1  & count2  & count3  & count4  & count6  & ncount7  & ncount8  & count9  & count10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & ncount2  & ncount3  & ncount4  & ncount6  & count7  & ncount8  & count9  & count10  -> (c5'=0) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & count1  & ncount2  & ncount3  & ncount4  & ncount6  & count7  & ncount8  & count9  & count10  -> (c5'=0) & (c1'=c1+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & count2  & ncount3  & ncount4  & ncount6  & count7  & ncount8  & count9  & count10  -> (c5'=0) & (c2'=c2+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & count1  & count2  & ncount3  & ncount4  & ncount6  & count7  & ncount8  & count9  & count10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & ncount2  & count3  & ncount4  & ncount6  & count7  & ncount8  & count9  & count10  -> (c5'=0) & (c3'=c3+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & count1  & ncount2  & count3  & ncount4  & ncount6  & count7  & ncount8  & count9  & count10  -> (c5'=0) & (c1'=c1+1) & (c3'=c3+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & count2  & count3  & ncount4  & ncount6  & count7  & ncount8  & count9  & count10  -> (c5'=0) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & count1  & count2  & count3  & ncount4  & ncount6  & count7  & ncount8  & count9  & count10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & ncount2  & ncount3  & count4  & ncount6  & count7  & ncount8  & count9  & count10  -> (c5'=0) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & count1  & ncount2  & ncount3  & count4  & ncount6  & count7  & ncount8  & count9  & count10  -> (c5'=0) & (c1'=c1+1) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & count2  & ncount3  & count4  & ncount6  & count7  & ncount8  & count9  & count10  -> (c5'=0) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & count1  & count2  & ncount3  & count4  & ncount6  & count7  & ncount8  & count9  & count10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & ncount2  & count3  & count4  & ncount6  & count7  & ncount8  & count9  & count10  -> (c5'=0) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & count1  & ncount2  & count3  & count4  & ncount6  & count7  & ncount8  & count9  & count10  -> (c5'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & count2  & count3  & count4  & ncount6  & count7  & ncount8  & count9  & count10  -> (c5'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & count1  & count2  & count3  & count4  & ncount6  & count7  & ncount8  & count9  & count10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & ncount2  & ncount3  & ncount4  & count6  & count7  & ncount8  & count9  & count10  -> (c5'=0) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & count1  & ncount2  & ncount3  & ncount4  & count6  & count7  & ncount8  & count9  & count10  -> (c5'=0) & (c1'=c1+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & count2  & ncount3  & ncount4  & count6  & count7  & ncount8  & count9  & count10  -> (c5'=0) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & count1  & count2  & ncount3  & ncount4  & count6  & count7  & ncount8  & count9  & count10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & ncount2  & count3  & ncount4  & count6  & count7  & ncount8  & count9  & count10  -> (c5'=0) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & count1  & ncount2  & count3  & ncount4  & count6  & count7  & ncount8  & count9  & count10  -> (c5'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & count2  & count3  & ncount4  & count6  & count7  & ncount8  & count9  & count10  -> (c5'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & count1  & count2  & count3  & ncount4  & count6  & count7  & ncount8  & count9  & count10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & ncount2  & ncount3  & count4  & count6  & count7  & ncount8  & count9  & count10  -> (c5'=0) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & count1  & ncount2  & ncount3  & count4  & count6  & count7  & ncount8  & count9  & count10  -> (c5'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & count2  & ncount3  & count4  & count6  & count7  & ncount8  & count9  & count10  -> (c5'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & count1  & count2  & ncount3  & count4  & count6  & count7  & ncount8  & count9  & count10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & ncount2  & count3  & count4  & count6  & count7  & ncount8  & count9  & count10  -> (c5'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & count1  & ncount2  & count3  & count4  & count6  & count7  & ncount8  & count9  & count10  -> (c5'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & count2  & count3  & count4  & count6  & count7  & ncount8  & count9  & count10  -> (c5'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & count1  & count2  & count3  & count4  & count6  & count7  & ncount8  & count9  & count10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & ncount2  & ncount3  & ncount4  & ncount6  & ncount7  & count8  & count9  & count10  -> (c5'=0) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & count1  & ncount2  & ncount3  & ncount4  & ncount6  & ncount7  & count8  & count9  & count10  -> (c5'=0) & (c1'=c1+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & count2  & ncount3  & ncount4  & ncount6  & ncount7  & count8  & count9  & count10  -> (c5'=0) & (c2'=c2+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & count1  & count2  & ncount3  & ncount4  & ncount6  & ncount7  & count8  & count9  & count10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & ncount2  & count3  & ncount4  & ncount6  & ncount7  & count8  & count9  & count10  -> (c5'=0) & (c3'=c3+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & count1  & ncount2  & count3  & ncount4  & ncount6  & ncount7  & count8  & count9  & count10  -> (c5'=0) & (c1'=c1+1) & (c3'=c3+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & count2  & count3  & ncount4  & ncount6  & ncount7  & count8  & count9  & count10  -> (c5'=0) & (c2'=c2+1) & (c3'=c3+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & count1  & count2  & count3  & ncount4  & ncount6  & ncount7  & count8  & count9  & count10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & ncount2  & ncount3  & count4  & ncount6  & ncount7  & count8  & count9  & count10  -> (c5'=0) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & count1  & ncount2  & ncount3  & count4  & ncount6  & ncount7  & count8  & count9  & count10  -> (c5'=0) & (c1'=c1+1) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & count2  & ncount3  & count4  & ncount6  & ncount7  & count8  & count9  & count10  -> (c5'=0) & (c2'=c2+1) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & count1  & count2  & ncount3  & count4  & ncount6  & ncount7  & count8  & count9  & count10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & ncount2  & count3  & count4  & ncount6  & ncount7  & count8  & count9  & count10  -> (c5'=0) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & count1  & ncount2  & count3  & count4  & ncount6  & ncount7  & count8  & count9  & count10  -> (c5'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & count2  & count3  & count4  & ncount6  & ncount7  & count8  & count9  & count10  -> (c5'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & count1  & count2  & count3  & count4  & ncount6  & ncount7  & count8  & count9  & count10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & ncount2  & ncount3  & ncount4  & count6  & ncount7  & count8  & count9  & count10  -> (c5'=0) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & count1  & ncount2  & ncount3  & ncount4  & count6  & ncount7  & count8  & count9  & count10  -> (c5'=0) & (c1'=c1+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & count2  & ncount3  & ncount4  & count6  & ncount7  & count8  & count9  & count10  -> (c5'=0) & (c2'=c2+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & count1  & count2  & ncount3  & ncount4  & count6  & ncount7  & count8  & count9  & count10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & ncount2  & count3  & ncount4  & count6  & ncount7  & count8  & count9  & count10  -> (c5'=0) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & count1  & ncount2  & count3  & ncount4  & count6  & ncount7  & count8  & count9  & count10  -> (c5'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & count2  & count3  & ncount4  & count6  & ncount7  & count8  & count9  & count10  -> (c5'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & count1  & count2  & count3  & ncount4  & count6  & ncount7  & count8  & count9  & count10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & ncount2  & ncount3  & count4  & count6  & ncount7  & count8  & count9  & count10  -> (c5'=0) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & count1  & ncount2  & ncount3  & count4  & count6  & ncount7  & count8  & count9  & count10  -> (c5'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & count2  & ncount3  & count4  & count6  & ncount7  & count8  & count9  & count10  -> (c5'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & count1  & count2  & ncount3  & count4  & count6  & ncount7  & count8  & count9  & count10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & ncount2  & count3  & count4  & count6  & ncount7  & count8  & count9  & count10  -> (c5'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & count1  & ncount2  & count3  & count4  & count6  & ncount7  & count8  & count9  & count10  -> (c5'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & count2  & count3  & count4  & count6  & ncount7  & count8  & count9  & count10  -> (c5'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & count1  & count2  & count3  & count4  & count6  & ncount7  & count8  & count9  & count10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & ncount2  & ncount3  & ncount4  & ncount6  & count7  & count8  & count9  & count10  -> (c5'=0) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & count1  & ncount2  & ncount3  & ncount4  & ncount6  & count7  & count8  & count9  & count10  -> (c5'=0) & (c1'=c1+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & count2  & ncount3  & ncount4  & ncount6  & count7  & count8  & count9  & count10  -> (c5'=0) & (c2'=c2+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & count1  & count2  & ncount3  & ncount4  & ncount6  & count7  & count8  & count9  & count10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & ncount2  & count3  & ncount4  & ncount6  & count7  & count8  & count9  & count10  -> (c5'=0) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & count1  & ncount2  & count3  & ncount4  & ncount6  & count7  & count8  & count9  & count10  -> (c5'=0) & (c1'=c1+1) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & count2  & count3  & ncount4  & ncount6  & count7  & count8  & count9  & count10  -> (c5'=0) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & count1  & count2  & count3  & ncount4  & ncount6  & count7  & count8  & count9  & count10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & ncount2  & ncount3  & count4  & ncount6  & count7  & count8  & count9  & count10  -> (c5'=0) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & count1  & ncount2  & ncount3  & count4  & ncount6  & count7  & count8  & count9  & count10  -> (c5'=0) & (c1'=c1+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & count2  & ncount3  & count4  & ncount6  & count7  & count8  & count9  & count10  -> (c5'=0) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & count1  & count2  & ncount3  & count4  & ncount6  & count7  & count8  & count9  & count10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & ncount2  & count3  & count4  & ncount6  & count7  & count8  & count9  & count10  -> (c5'=0) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & count1  & ncount2  & count3  & count4  & ncount6  & count7  & count8  & count9  & count10  -> (c5'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & count2  & count3  & count4  & ncount6  & count7  & count8  & count9  & count10  -> (c5'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & count1  & count2  & count3  & count4  & ncount6  & count7  & count8  & count9  & count10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & ncount2  & ncount3  & ncount4  & count6  & count7  & count8  & count9  & count10  -> (c5'=0) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & count1  & ncount2  & ncount3  & ncount4  & count6  & count7  & count8  & count9  & count10  -> (c5'=0) & (c1'=c1+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & count2  & ncount3  & ncount4  & count6  & count7  & count8  & count9  & count10  -> (c5'=0) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & count1  & count2  & ncount3  & ncount4  & count6  & count7  & count8  & count9  & count10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & ncount2  & count3  & ncount4  & count6  & count7  & count8  & count9  & count10  -> (c5'=0) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & count1  & ncount2  & count3  & ncount4  & count6  & count7  & count8  & count9  & count10  -> (c5'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & count2  & count3  & ncount4  & count6  & count7  & count8  & count9  & count10  -> (c5'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & count1  & count2  & count3  & ncount4  & count6  & count7  & count8  & count9  & count10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & ncount2  & ncount3  & count4  & count6  & count7  & count8  & count9  & count10  -> (c5'=0) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & count1  & ncount2  & ncount3  & count4  & count6  & count7  & count8  & count9  & count10  -> (c5'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & count2  & ncount3  & count4  & count6  & count7  & count8  & count9  & count10  -> (c5'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & count1  & count2  & ncount3  & count4  & count6  & count7  & count8  & count9  & count10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & ncount2  & count3  & count4  & count6  & count7  & count8  & count9  & count10  -> (c5'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & count1  & ncount2  & count3  & count4  & count6  & count7  & count8  & count9  & count10  -> (c5'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & ncount1  & count2  & count3  & count4  & count6  & count7  & count8  & count9  & count10  -> (c5'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s5] can5  & count1  & count2  & count3  & count4  & count6  & count7  & count8  & count9  & count10  -> (c5'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount7  & ncount8  & ncount9  & ncount10  -> (c6'=0);
	[s6] can6  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount7  & ncount8  & ncount9  & ncount10  -> (c6'=0) & (c1'=c1+1);
	[s6] can6  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & ncount7  & ncount8  & ncount9  & ncount10  -> (c6'=0) & (c2'=c2+1);
	[s6] can6  & count1  & count2  & ncount3  & ncount4  & ncount5  & ncount7  & ncount8  & ncount9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1);
	[s6] can6  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & ncount7  & ncount8  & ncount9  & ncount10  -> (c6'=0) & (c3'=c3+1);
	[s6] can6  & count1  & ncount2  & count3  & ncount4  & ncount5  & ncount7  & ncount8  & ncount9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c3'=c3+1);
	[s6] can6  & ncount1  & count2  & count3  & ncount4  & ncount5  & ncount7  & ncount8  & ncount9  & ncount10  -> (c6'=0) & (c2'=c2+1) & (c3'=c3+1);
	[s6] can6  & count1  & count2  & count3  & ncount4  & ncount5  & ncount7  & ncount8  & ncount9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1);
	[s6] can6  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & ncount7  & ncount8  & ncount9  & ncount10  -> (c6'=0) & (c4'=c4+1);
	[s6] can6  & count1  & ncount2  & ncount3  & count4  & ncount5  & ncount7  & ncount8  & ncount9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c4'=c4+1);
	[s6] can6  & ncount1  & count2  & ncount3  & count4  & ncount5  & ncount7  & ncount8  & ncount9  & ncount10  -> (c6'=0) & (c2'=c2+1) & (c4'=c4+1);
	[s6] can6  & count1  & count2  & ncount3  & count4  & ncount5  & ncount7  & ncount8  & ncount9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1);
	[s6] can6  & ncount1  & ncount2  & count3  & count4  & ncount5  & ncount7  & ncount8  & ncount9  & ncount10  -> (c6'=0) & (c3'=c3+1) & (c4'=c4+1);
	[s6] can6  & count1  & ncount2  & count3  & count4  & ncount5  & ncount7  & ncount8  & ncount9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1);
	[s6] can6  & ncount1  & count2  & count3  & count4  & ncount5  & ncount7  & ncount8  & ncount9  & ncount10  -> (c6'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1);
	[s6] can6  & count1  & count2  & count3  & count4  & ncount5  & ncount7  & ncount8  & ncount9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1);
	[s6] can6  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & ncount7  & ncount8  & ncount9  & ncount10  -> (c6'=0) & (c5'=c5+1);
	[s6] can6  & count1  & ncount2  & ncount3  & ncount4  & count5  & ncount7  & ncount8  & ncount9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c5'=c5+1);
	[s6] can6  & ncount1  & count2  & ncount3  & ncount4  & count5  & ncount7  & ncount8  & ncount9  & ncount10  -> (c6'=0) & (c2'=c2+1) & (c5'=c5+1);
	[s6] can6  & count1  & count2  & ncount3  & ncount4  & count5  & ncount7  & ncount8  & ncount9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1);
	[s6] can6  & ncount1  & ncount2  & count3  & ncount4  & count5  & ncount7  & ncount8  & ncount9  & ncount10  -> (c6'=0) & (c3'=c3+1) & (c5'=c5+1);
	[s6] can6  & count1  & ncount2  & count3  & ncount4  & count5  & ncount7  & ncount8  & ncount9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1);
	[s6] can6  & ncount1  & count2  & count3  & ncount4  & count5  & ncount7  & ncount8  & ncount9  & ncount10  -> (c6'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1);
	[s6] can6  & count1  & count2  & count3  & ncount4  & count5  & ncount7  & ncount8  & ncount9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1);
	[s6] can6  & ncount1  & ncount2  & ncount3  & count4  & count5  & ncount7  & ncount8  & ncount9  & ncount10  -> (c6'=0) & (c4'=c4+1) & (c5'=c5+1);
	[s6] can6  & count1  & ncount2  & ncount3  & count4  & count5  & ncount7  & ncount8  & ncount9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1);
	[s6] can6  & ncount1  & count2  & ncount3  & count4  & count5  & ncount7  & ncount8  & ncount9  & ncount10  -> (c6'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1);
	[s6] can6  & count1  & count2  & ncount3  & count4  & count5  & ncount7  & ncount8  & ncount9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1);
	[s6] can6  & ncount1  & ncount2  & count3  & count4  & count5  & ncount7  & ncount8  & ncount9  & ncount10  -> (c6'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1);
	[s6] can6  & count1  & ncount2  & count3  & count4  & count5  & ncount7  & ncount8  & ncount9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1);
	[s6] can6  & ncount1  & count2  & count3  & count4  & count5  & ncount7  & ncount8  & ncount9  & ncount10  -> (c6'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1);
	[s6] can6  & count1  & count2  & count3  & count4  & count5  & ncount7  & ncount8  & ncount9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1);
	[s6] can6  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & count7  & ncount8  & ncount9  & ncount10  -> (c6'=0) & (c7'=c7+1);
	[s6] can6  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & count7  & ncount8  & ncount9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c7'=c7+1);
	[s6] can6  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & count7  & ncount8  & ncount9  & ncount10  -> (c6'=0) & (c2'=c2+1) & (c7'=c7+1);
	[s6] can6  & count1  & count2  & ncount3  & ncount4  & ncount5  & count7  & ncount8  & ncount9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c7'=c7+1);
	[s6] can6  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & count7  & ncount8  & ncount9  & ncount10  -> (c6'=0) & (c3'=c3+1) & (c7'=c7+1);
	[s6] can6  & count1  & ncount2  & count3  & ncount4  & ncount5  & count7  & ncount8  & ncount9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c3'=c3+1) & (c7'=c7+1);
	[s6] can6  & ncount1  & count2  & count3  & ncount4  & ncount5  & count7  & ncount8  & ncount9  & ncount10  -> (c6'=0) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1);
	[s6] can6  & count1  & count2  & count3  & ncount4  & ncount5  & count7  & ncount8  & ncount9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1);
	[s6] can6  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & count7  & ncount8  & ncount9  & ncount10  -> (c6'=0) & (c4'=c4+1) & (c7'=c7+1);
	[s6] can6  & count1  & ncount2  & ncount3  & count4  & ncount5  & count7  & ncount8  & ncount9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c4'=c4+1) & (c7'=c7+1);
	[s6] can6  & ncount1  & count2  & ncount3  & count4  & ncount5  & count7  & ncount8  & ncount9  & ncount10  -> (c6'=0) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1);
	[s6] can6  & count1  & count2  & ncount3  & count4  & ncount5  & count7  & ncount8  & ncount9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1);
	[s6] can6  & ncount1  & ncount2  & count3  & count4  & ncount5  & count7  & ncount8  & ncount9  & ncount10  -> (c6'=0) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1);
	[s6] can6  & count1  & ncount2  & count3  & count4  & ncount5  & count7  & ncount8  & ncount9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1);
	[s6] can6  & ncount1  & count2  & count3  & count4  & ncount5  & count7  & ncount8  & ncount9  & ncount10  -> (c6'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1);
	[s6] can6  & count1  & count2  & count3  & count4  & ncount5  & count7  & ncount8  & ncount9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1);
	[s6] can6  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & count7  & ncount8  & ncount9  & ncount10  -> (c6'=0) & (c5'=c5+1) & (c7'=c7+1);
	[s6] can6  & count1  & ncount2  & ncount3  & ncount4  & count5  & count7  & ncount8  & ncount9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c5'=c5+1) & (c7'=c7+1);
	[s6] can6  & ncount1  & count2  & ncount3  & ncount4  & count5  & count7  & ncount8  & ncount9  & ncount10  -> (c6'=0) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1);
	[s6] can6  & count1  & count2  & ncount3  & ncount4  & count5  & count7  & ncount8  & ncount9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1);
	[s6] can6  & ncount1  & ncount2  & count3  & ncount4  & count5  & count7  & ncount8  & ncount9  & ncount10  -> (c6'=0) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1);
	[s6] can6  & count1  & ncount2  & count3  & ncount4  & count5  & count7  & ncount8  & ncount9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1);
	[s6] can6  & ncount1  & count2  & count3  & ncount4  & count5  & count7  & ncount8  & ncount9  & ncount10  -> (c6'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1);
	[s6] can6  & count1  & count2  & count3  & ncount4  & count5  & count7  & ncount8  & ncount9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1);
	[s6] can6  & ncount1  & ncount2  & ncount3  & count4  & count5  & count7  & ncount8  & ncount9  & ncount10  -> (c6'=0) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1);
	[s6] can6  & count1  & ncount2  & ncount3  & count4  & count5  & count7  & ncount8  & ncount9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1);
	[s6] can6  & ncount1  & count2  & ncount3  & count4  & count5  & count7  & ncount8  & ncount9  & ncount10  -> (c6'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1);
	[s6] can6  & count1  & count2  & ncount3  & count4  & count5  & count7  & ncount8  & ncount9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1);
	[s6] can6  & ncount1  & ncount2  & count3  & count4  & count5  & count7  & ncount8  & ncount9  & ncount10  -> (c6'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1);
	[s6] can6  & count1  & ncount2  & count3  & count4  & count5  & count7  & ncount8  & ncount9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1);
	[s6] can6  & ncount1  & count2  & count3  & count4  & count5  & count7  & ncount8  & ncount9  & ncount10  -> (c6'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1);
	[s6] can6  & count1  & count2  & count3  & count4  & count5  & count7  & ncount8  & ncount9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1);
	[s6] can6  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount7  & count8  & ncount9  & ncount10  -> (c6'=0) & (c8'=c8+1);
	[s6] can6  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount7  & count8  & ncount9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c8'=c8+1);
	[s6] can6  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & ncount7  & count8  & ncount9  & ncount10  -> (c6'=0) & (c2'=c2+1) & (c8'=c8+1);
	[s6] can6  & count1  & count2  & ncount3  & ncount4  & ncount5  & ncount7  & count8  & ncount9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c8'=c8+1);
	[s6] can6  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & ncount7  & count8  & ncount9  & ncount10  -> (c6'=0) & (c3'=c3+1) & (c8'=c8+1);
	[s6] can6  & count1  & ncount2  & count3  & ncount4  & ncount5  & ncount7  & count8  & ncount9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c3'=c3+1) & (c8'=c8+1);
	[s6] can6  & ncount1  & count2  & count3  & ncount4  & ncount5  & ncount7  & count8  & ncount9  & ncount10  -> (c6'=0) & (c2'=c2+1) & (c3'=c3+1) & (c8'=c8+1);
	[s6] can6  & count1  & count2  & count3  & ncount4  & ncount5  & ncount7  & count8  & ncount9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c8'=c8+1);
	[s6] can6  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & ncount7  & count8  & ncount9  & ncount10  -> (c6'=0) & (c4'=c4+1) & (c8'=c8+1);
	[s6] can6  & count1  & ncount2  & ncount3  & count4  & ncount5  & ncount7  & count8  & ncount9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c4'=c4+1) & (c8'=c8+1);
	[s6] can6  & ncount1  & count2  & ncount3  & count4  & ncount5  & ncount7  & count8  & ncount9  & ncount10  -> (c6'=0) & (c2'=c2+1) & (c4'=c4+1) & (c8'=c8+1);
	[s6] can6  & count1  & count2  & ncount3  & count4  & ncount5  & ncount7  & count8  & ncount9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c8'=c8+1);
	[s6] can6  & ncount1  & ncount2  & count3  & count4  & ncount5  & ncount7  & count8  & ncount9  & ncount10  -> (c6'=0) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1);
	[s6] can6  & count1  & ncount2  & count3  & count4  & ncount5  & ncount7  & count8  & ncount9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1);
	[s6] can6  & ncount1  & count2  & count3  & count4  & ncount5  & ncount7  & count8  & ncount9  & ncount10  -> (c6'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1);
	[s6] can6  & count1  & count2  & count3  & count4  & ncount5  & ncount7  & count8  & ncount9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1);
	[s6] can6  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & ncount7  & count8  & ncount9  & ncount10  -> (c6'=0) & (c5'=c5+1) & (c8'=c8+1);
	[s6] can6  & count1  & ncount2  & ncount3  & ncount4  & count5  & ncount7  & count8  & ncount9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c5'=c5+1) & (c8'=c8+1);
	[s6] can6  & ncount1  & count2  & ncount3  & ncount4  & count5  & ncount7  & count8  & ncount9  & ncount10  -> (c6'=0) & (c2'=c2+1) & (c5'=c5+1) & (c8'=c8+1);
	[s6] can6  & count1  & count2  & ncount3  & ncount4  & count5  & ncount7  & count8  & ncount9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c8'=c8+1);
	[s6] can6  & ncount1  & ncount2  & count3  & ncount4  & count5  & ncount7  & count8  & ncount9  & ncount10  -> (c6'=0) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1);
	[s6] can6  & count1  & ncount2  & count3  & ncount4  & count5  & ncount7  & count8  & ncount9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1);
	[s6] can6  & ncount1  & count2  & count3  & ncount4  & count5  & ncount7  & count8  & ncount9  & ncount10  -> (c6'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1);
	[s6] can6  & count1  & count2  & count3  & ncount4  & count5  & ncount7  & count8  & ncount9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1);
	[s6] can6  & ncount1  & ncount2  & ncount3  & count4  & count5  & ncount7  & count8  & ncount9  & ncount10  -> (c6'=0) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1);
	[s6] can6  & count1  & ncount2  & ncount3  & count4  & count5  & ncount7  & count8  & ncount9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1);
	[s6] can6  & ncount1  & count2  & ncount3  & count4  & count5  & ncount7  & count8  & ncount9  & ncount10  -> (c6'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1);
	[s6] can6  & count1  & count2  & ncount3  & count4  & count5  & ncount7  & count8  & ncount9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1);
	[s6] can6  & ncount1  & ncount2  & count3  & count4  & count5  & ncount7  & count8  & ncount9  & ncount10  -> (c6'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1);
	[s6] can6  & count1  & ncount2  & count3  & count4  & count5  & ncount7  & count8  & ncount9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1);
	[s6] can6  & ncount1  & count2  & count3  & count4  & count5  & ncount7  & count8  & ncount9  & ncount10  -> (c6'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1);
	[s6] can6  & count1  & count2  & count3  & count4  & count5  & ncount7  & count8  & ncount9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1);
	[s6] can6  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & count7  & count8  & ncount9  & ncount10  -> (c6'=0) & (c7'=c7+1) & (c8'=c8+1);
	[s6] can6  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & count7  & count8  & ncount9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c7'=c7+1) & (c8'=c8+1);
	[s6] can6  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & count7  & count8  & ncount9  & ncount10  -> (c6'=0) & (c2'=c2+1) & (c7'=c7+1) & (c8'=c8+1);
	[s6] can6  & count1  & count2  & ncount3  & ncount4  & ncount5  & count7  & count8  & ncount9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c7'=c7+1) & (c8'=c8+1);
	[s6] can6  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & count7  & count8  & ncount9  & ncount10  -> (c6'=0) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1);
	[s6] can6  & count1  & ncount2  & count3  & ncount4  & ncount5  & count7  & count8  & ncount9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1);
	[s6] can6  & ncount1  & count2  & count3  & ncount4  & ncount5  & count7  & count8  & ncount9  & ncount10  -> (c6'=0) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1);
	[s6] can6  & count1  & count2  & count3  & ncount4  & ncount5  & count7  & count8  & ncount9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1);
	[s6] can6  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & count7  & count8  & ncount9  & ncount10  -> (c6'=0) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1);
	[s6] can6  & count1  & ncount2  & ncount3  & count4  & ncount5  & count7  & count8  & ncount9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1);
	[s6] can6  & ncount1  & count2  & ncount3  & count4  & ncount5  & count7  & count8  & ncount9  & ncount10  -> (c6'=0) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1);
	[s6] can6  & count1  & count2  & ncount3  & count4  & ncount5  & count7  & count8  & ncount9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1);
	[s6] can6  & ncount1  & ncount2  & count3  & count4  & ncount5  & count7  & count8  & ncount9  & ncount10  -> (c6'=0) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1);
	[s6] can6  & count1  & ncount2  & count3  & count4  & ncount5  & count7  & count8  & ncount9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1);
	[s6] can6  & ncount1  & count2  & count3  & count4  & ncount5  & count7  & count8  & ncount9  & ncount10  -> (c6'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1);
	[s6] can6  & count1  & count2  & count3  & count4  & ncount5  & count7  & count8  & ncount9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1);
	[s6] can6  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & count7  & count8  & ncount9  & ncount10  -> (c6'=0) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s6] can6  & count1  & ncount2  & ncount3  & ncount4  & count5  & count7  & count8  & ncount9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s6] can6  & ncount1  & count2  & ncount3  & ncount4  & count5  & count7  & count8  & ncount9  & ncount10  -> (c6'=0) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s6] can6  & count1  & count2  & ncount3  & ncount4  & count5  & count7  & count8  & ncount9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s6] can6  & ncount1  & ncount2  & count3  & ncount4  & count5  & count7  & count8  & ncount9  & ncount10  -> (c6'=0) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s6] can6  & count1  & ncount2  & count3  & ncount4  & count5  & count7  & count8  & ncount9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s6] can6  & ncount1  & count2  & count3  & ncount4  & count5  & count7  & count8  & ncount9  & ncount10  -> (c6'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s6] can6  & count1  & count2  & count3  & ncount4  & count5  & count7  & count8  & ncount9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s6] can6  & ncount1  & ncount2  & ncount3  & count4  & count5  & count7  & count8  & ncount9  & ncount10  -> (c6'=0) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s6] can6  & count1  & ncount2  & ncount3  & count4  & count5  & count7  & count8  & ncount9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s6] can6  & ncount1  & count2  & ncount3  & count4  & count5  & count7  & count8  & ncount9  & ncount10  -> (c6'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s6] can6  & count1  & count2  & ncount3  & count4  & count5  & count7  & count8  & ncount9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s6] can6  & ncount1  & ncount2  & count3  & count4  & count5  & count7  & count8  & ncount9  & ncount10  -> (c6'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s6] can6  & count1  & ncount2  & count3  & count4  & count5  & count7  & count8  & ncount9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s6] can6  & ncount1  & count2  & count3  & count4  & count5  & count7  & count8  & ncount9  & ncount10  -> (c6'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s6] can6  & count1  & count2  & count3  & count4  & count5  & count7  & count8  & ncount9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s6] can6  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount7  & ncount8  & count9  & ncount10  -> (c6'=0) & (c9'=c9+1);
	[s6] can6  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount7  & ncount8  & count9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c9'=c9+1);
	[s6] can6  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & ncount7  & ncount8  & count9  & ncount10  -> (c6'=0) & (c2'=c2+1) & (c9'=c9+1);
	[s6] can6  & count1  & count2  & ncount3  & ncount4  & ncount5  & ncount7  & ncount8  & count9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c9'=c9+1);
	[s6] can6  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & ncount7  & ncount8  & count9  & ncount10  -> (c6'=0) & (c3'=c3+1) & (c9'=c9+1);
	[s6] can6  & count1  & ncount2  & count3  & ncount4  & ncount5  & ncount7  & ncount8  & count9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c3'=c3+1) & (c9'=c9+1);
	[s6] can6  & ncount1  & count2  & count3  & ncount4  & ncount5  & ncount7  & ncount8  & count9  & ncount10  -> (c6'=0) & (c2'=c2+1) & (c3'=c3+1) & (c9'=c9+1);
	[s6] can6  & count1  & count2  & count3  & ncount4  & ncount5  & ncount7  & ncount8  & count9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c9'=c9+1);
	[s6] can6  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & ncount7  & ncount8  & count9  & ncount10  -> (c6'=0) & (c4'=c4+1) & (c9'=c9+1);
	[s6] can6  & count1  & ncount2  & ncount3  & count4  & ncount5  & ncount7  & ncount8  & count9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c4'=c4+1) & (c9'=c9+1);
	[s6] can6  & ncount1  & count2  & ncount3  & count4  & ncount5  & ncount7  & ncount8  & count9  & ncount10  -> (c6'=0) & (c2'=c2+1) & (c4'=c4+1) & (c9'=c9+1);
	[s6] can6  & count1  & count2  & ncount3  & count4  & ncount5  & ncount7  & ncount8  & count9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c9'=c9+1);
	[s6] can6  & ncount1  & ncount2  & count3  & count4  & ncount5  & ncount7  & ncount8  & count9  & ncount10  -> (c6'=0) & (c3'=c3+1) & (c4'=c4+1) & (c9'=c9+1);
	[s6] can6  & count1  & ncount2  & count3  & count4  & ncount5  & ncount7  & ncount8  & count9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c9'=c9+1);
	[s6] can6  & ncount1  & count2  & count3  & count4  & ncount5  & ncount7  & ncount8  & count9  & ncount10  -> (c6'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c9'=c9+1);
	[s6] can6  & count1  & count2  & count3  & count4  & ncount5  & ncount7  & ncount8  & count9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c9'=c9+1);
	[s6] can6  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & ncount7  & ncount8  & count9  & ncount10  -> (c6'=0) & (c5'=c5+1) & (c9'=c9+1);
	[s6] can6  & count1  & ncount2  & ncount3  & ncount4  & count5  & ncount7  & ncount8  & count9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c5'=c5+1) & (c9'=c9+1);
	[s6] can6  & ncount1  & count2  & ncount3  & ncount4  & count5  & ncount7  & ncount8  & count9  & ncount10  -> (c6'=0) & (c2'=c2+1) & (c5'=c5+1) & (c9'=c9+1);
	[s6] can6  & count1  & count2  & ncount3  & ncount4  & count5  & ncount7  & ncount8  & count9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c9'=c9+1);
	[s6] can6  & ncount1  & ncount2  & count3  & ncount4  & count5  & ncount7  & ncount8  & count9  & ncount10  -> (c6'=0) & (c3'=c3+1) & (c5'=c5+1) & (c9'=c9+1);
	[s6] can6  & count1  & ncount2  & count3  & ncount4  & count5  & ncount7  & ncount8  & count9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c9'=c9+1);
	[s6] can6  & ncount1  & count2  & count3  & ncount4  & count5  & ncount7  & ncount8  & count9  & ncount10  -> (c6'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c9'=c9+1);
	[s6] can6  & count1  & count2  & count3  & ncount4  & count5  & ncount7  & ncount8  & count9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c9'=c9+1);
	[s6] can6  & ncount1  & ncount2  & ncount3  & count4  & count5  & ncount7  & ncount8  & count9  & ncount10  -> (c6'=0) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1);
	[s6] can6  & count1  & ncount2  & ncount3  & count4  & count5  & ncount7  & ncount8  & count9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1);
	[s6] can6  & ncount1  & count2  & ncount3  & count4  & count5  & ncount7  & ncount8  & count9  & ncount10  -> (c6'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1);
	[s6] can6  & count1  & count2  & ncount3  & count4  & count5  & ncount7  & ncount8  & count9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1);
	[s6] can6  & ncount1  & ncount2  & count3  & count4  & count5  & ncount7  & ncount8  & count9  & ncount10  -> (c6'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1);
	[s6] can6  & count1  & ncount2  & count3  & count4  & count5  & ncount7  & ncount8  & count9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1);
	[s6] can6  & ncount1  & count2  & count3  & count4  & count5  & ncount7  & ncount8  & count9  & ncount10  -> (c6'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1);
	[s6] can6  & count1  & count2  & count3  & count4  & count5  & ncount7  & ncount8  & count9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1);
	[s6] can6  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & count7  & ncount8  & count9  & ncount10  -> (c6'=0) & (c7'=c7+1) & (c9'=c9+1);
	[s6] can6  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & count7  & ncount8  & count9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c7'=c7+1) & (c9'=c9+1);
	[s6] can6  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & count7  & ncount8  & count9  & ncount10  -> (c6'=0) & (c2'=c2+1) & (c7'=c7+1) & (c9'=c9+1);
	[s6] can6  & count1  & count2  & ncount3  & ncount4  & ncount5  & count7  & ncount8  & count9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c7'=c7+1) & (c9'=c9+1);
	[s6] can6  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & count7  & ncount8  & count9  & ncount10  -> (c6'=0) & (c3'=c3+1) & (c7'=c7+1) & (c9'=c9+1);
	[s6] can6  & count1  & ncount2  & count3  & ncount4  & ncount5  & count7  & ncount8  & count9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c3'=c3+1) & (c7'=c7+1) & (c9'=c9+1);
	[s6] can6  & ncount1  & count2  & count3  & ncount4  & ncount5  & count7  & ncount8  & count9  & ncount10  -> (c6'=0) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1) & (c9'=c9+1);
	[s6] can6  & count1  & count2  & count3  & ncount4  & ncount5  & count7  & ncount8  & count9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1) & (c9'=c9+1);
	[s6] can6  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & count7  & ncount8  & count9  & ncount10  -> (c6'=0) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1);
	[s6] can6  & count1  & ncount2  & ncount3  & count4  & ncount5  & count7  & ncount8  & count9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1);
	[s6] can6  & ncount1  & count2  & ncount3  & count4  & ncount5  & count7  & ncount8  & count9  & ncount10  -> (c6'=0) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1);
	[s6] can6  & count1  & count2  & ncount3  & count4  & ncount5  & count7  & ncount8  & count9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1);
	[s6] can6  & ncount1  & ncount2  & count3  & count4  & ncount5  & count7  & ncount8  & count9  & ncount10  -> (c6'=0) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1);
	[s6] can6  & count1  & ncount2  & count3  & count4  & ncount5  & count7  & ncount8  & count9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1);
	[s6] can6  & ncount1  & count2  & count3  & count4  & ncount5  & count7  & ncount8  & count9  & ncount10  -> (c6'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1);
	[s6] can6  & count1  & count2  & count3  & count4  & ncount5  & count7  & ncount8  & count9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1);
	[s6] can6  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & count7  & ncount8  & count9  & ncount10  -> (c6'=0) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s6] can6  & count1  & ncount2  & ncount3  & ncount4  & count5  & count7  & ncount8  & count9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s6] can6  & ncount1  & count2  & ncount3  & ncount4  & count5  & count7  & ncount8  & count9  & ncount10  -> (c6'=0) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s6] can6  & count1  & count2  & ncount3  & ncount4  & count5  & count7  & ncount8  & count9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s6] can6  & ncount1  & ncount2  & count3  & ncount4  & count5  & count7  & ncount8  & count9  & ncount10  -> (c6'=0) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s6] can6  & count1  & ncount2  & count3  & ncount4  & count5  & count7  & ncount8  & count9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s6] can6  & ncount1  & count2  & count3  & ncount4  & count5  & count7  & ncount8  & count9  & ncount10  -> (c6'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s6] can6  & count1  & count2  & count3  & ncount4  & count5  & count7  & ncount8  & count9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s6] can6  & ncount1  & ncount2  & ncount3  & count4  & count5  & count7  & ncount8  & count9  & ncount10  -> (c6'=0) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s6] can6  & count1  & ncount2  & ncount3  & count4  & count5  & count7  & ncount8  & count9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s6] can6  & ncount1  & count2  & ncount3  & count4  & count5  & count7  & ncount8  & count9  & ncount10  -> (c6'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s6] can6  & count1  & count2  & ncount3  & count4  & count5  & count7  & ncount8  & count9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s6] can6  & ncount1  & ncount2  & count3  & count4  & count5  & count7  & ncount8  & count9  & ncount10  -> (c6'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s6] can6  & count1  & ncount2  & count3  & count4  & count5  & count7  & ncount8  & count9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s6] can6  & ncount1  & count2  & count3  & count4  & count5  & count7  & ncount8  & count9  & ncount10  -> (c6'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s6] can6  & count1  & count2  & count3  & count4  & count5  & count7  & ncount8  & count9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s6] can6  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount7  & count8  & count9  & ncount10  -> (c6'=0) & (c8'=c8+1) & (c9'=c9+1);
	[s6] can6  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount7  & count8  & count9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c8'=c8+1) & (c9'=c9+1);
	[s6] can6  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & ncount7  & count8  & count9  & ncount10  -> (c6'=0) & (c2'=c2+1) & (c8'=c8+1) & (c9'=c9+1);
	[s6] can6  & count1  & count2  & ncount3  & ncount4  & ncount5  & ncount7  & count8  & count9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c8'=c8+1) & (c9'=c9+1);
	[s6] can6  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & ncount7  & count8  & count9  & ncount10  -> (c6'=0) & (c3'=c3+1) & (c8'=c8+1) & (c9'=c9+1);
	[s6] can6  & count1  & ncount2  & count3  & ncount4  & ncount5  & ncount7  & count8  & count9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c3'=c3+1) & (c8'=c8+1) & (c9'=c9+1);
	[s6] can6  & ncount1  & count2  & count3  & ncount4  & ncount5  & ncount7  & count8  & count9  & ncount10  -> (c6'=0) & (c2'=c2+1) & (c3'=c3+1) & (c8'=c8+1) & (c9'=c9+1);
	[s6] can6  & count1  & count2  & count3  & ncount4  & ncount5  & ncount7  & count8  & count9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c8'=c8+1) & (c9'=c9+1);
	[s6] can6  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & ncount7  & count8  & count9  & ncount10  -> (c6'=0) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1);
	[s6] can6  & count1  & ncount2  & ncount3  & count4  & ncount5  & ncount7  & count8  & count9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1);
	[s6] can6  & ncount1  & count2  & ncount3  & count4  & ncount5  & ncount7  & count8  & count9  & ncount10  -> (c6'=0) & (c2'=c2+1) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1);
	[s6] can6  & count1  & count2  & ncount3  & count4  & ncount5  & ncount7  & count8  & count9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1);
	[s6] can6  & ncount1  & ncount2  & count3  & count4  & ncount5  & ncount7  & count8  & count9  & ncount10  -> (c6'=0) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1);
	[s6] can6  & count1  & ncount2  & count3  & count4  & ncount5  & ncount7  & count8  & count9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1);
	[s6] can6  & ncount1  & count2  & count3  & count4  & ncount5  & ncount7  & count8  & count9  & ncount10  -> (c6'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1);
	[s6] can6  & count1  & count2  & count3  & count4  & ncount5  & ncount7  & count8  & count9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1);
	[s6] can6  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & ncount7  & count8  & count9  & ncount10  -> (c6'=0) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s6] can6  & count1  & ncount2  & ncount3  & ncount4  & count5  & ncount7  & count8  & count9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s6] can6  & ncount1  & count2  & ncount3  & ncount4  & count5  & ncount7  & count8  & count9  & ncount10  -> (c6'=0) & (c2'=c2+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s6] can6  & count1  & count2  & ncount3  & ncount4  & count5  & ncount7  & count8  & count9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s6] can6  & ncount1  & ncount2  & count3  & ncount4  & count5  & ncount7  & count8  & count9  & ncount10  -> (c6'=0) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s6] can6  & count1  & ncount2  & count3  & ncount4  & count5  & ncount7  & count8  & count9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s6] can6  & ncount1  & count2  & count3  & ncount4  & count5  & ncount7  & count8  & count9  & ncount10  -> (c6'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s6] can6  & count1  & count2  & count3  & ncount4  & count5  & ncount7  & count8  & count9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s6] can6  & ncount1  & ncount2  & ncount3  & count4  & count5  & ncount7  & count8  & count9  & ncount10  -> (c6'=0) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s6] can6  & count1  & ncount2  & ncount3  & count4  & count5  & ncount7  & count8  & count9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s6] can6  & ncount1  & count2  & ncount3  & count4  & count5  & ncount7  & count8  & count9  & ncount10  -> (c6'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s6] can6  & count1  & count2  & ncount3  & count4  & count5  & ncount7  & count8  & count9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s6] can6  & ncount1  & ncount2  & count3  & count4  & count5  & ncount7  & count8  & count9  & ncount10  -> (c6'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s6] can6  & count1  & ncount2  & count3  & count4  & count5  & ncount7  & count8  & count9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s6] can6  & ncount1  & count2  & count3  & count4  & count5  & ncount7  & count8  & count9  & ncount10  -> (c6'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s6] can6  & count1  & count2  & count3  & count4  & count5  & ncount7  & count8  & count9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s6] can6  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & count7  & count8  & count9  & ncount10  -> (c6'=0) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s6] can6  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & count7  & count8  & count9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s6] can6  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & count7  & count8  & count9  & ncount10  -> (c6'=0) & (c2'=c2+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s6] can6  & count1  & count2  & ncount3  & ncount4  & ncount5  & count7  & count8  & count9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s6] can6  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & count7  & count8  & count9  & ncount10  -> (c6'=0) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s6] can6  & count1  & ncount2  & count3  & ncount4  & ncount5  & count7  & count8  & count9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s6] can6  & ncount1  & count2  & count3  & ncount4  & ncount5  & count7  & count8  & count9  & ncount10  -> (c6'=0) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s6] can6  & count1  & count2  & count3  & ncount4  & ncount5  & count7  & count8  & count9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s6] can6  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & count7  & count8  & count9  & ncount10  -> (c6'=0) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s6] can6  & count1  & ncount2  & ncount3  & count4  & ncount5  & count7  & count8  & count9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s6] can6  & ncount1  & count2  & ncount3  & count4  & ncount5  & count7  & count8  & count9  & ncount10  -> (c6'=0) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s6] can6  & count1  & count2  & ncount3  & count4  & ncount5  & count7  & count8  & count9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s6] can6  & ncount1  & ncount2  & count3  & count4  & ncount5  & count7  & count8  & count9  & ncount10  -> (c6'=0) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s6] can6  & count1  & ncount2  & count3  & count4  & ncount5  & count7  & count8  & count9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s6] can6  & ncount1  & count2  & count3  & count4  & ncount5  & count7  & count8  & count9  & ncount10  -> (c6'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s6] can6  & count1  & count2  & count3  & count4  & ncount5  & count7  & count8  & count9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s6] can6  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & count7  & count8  & count9  & ncount10  -> (c6'=0) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s6] can6  & count1  & ncount2  & ncount3  & ncount4  & count5  & count7  & count8  & count9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s6] can6  & ncount1  & count2  & ncount3  & ncount4  & count5  & count7  & count8  & count9  & ncount10  -> (c6'=0) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s6] can6  & count1  & count2  & ncount3  & ncount4  & count5  & count7  & count8  & count9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s6] can6  & ncount1  & ncount2  & count3  & ncount4  & count5  & count7  & count8  & count9  & ncount10  -> (c6'=0) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s6] can6  & count1  & ncount2  & count3  & ncount4  & count5  & count7  & count8  & count9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s6] can6  & ncount1  & count2  & count3  & ncount4  & count5  & count7  & count8  & count9  & ncount10  -> (c6'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s6] can6  & count1  & count2  & count3  & ncount4  & count5  & count7  & count8  & count9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s6] can6  & ncount1  & ncount2  & ncount3  & count4  & count5  & count7  & count8  & count9  & ncount10  -> (c6'=0) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s6] can6  & count1  & ncount2  & ncount3  & count4  & count5  & count7  & count8  & count9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s6] can6  & ncount1  & count2  & ncount3  & count4  & count5  & count7  & count8  & count9  & ncount10  -> (c6'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s6] can6  & count1  & count2  & ncount3  & count4  & count5  & count7  & count8  & count9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s6] can6  & ncount1  & ncount2  & count3  & count4  & count5  & count7  & count8  & count9  & ncount10  -> (c6'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s6] can6  & count1  & ncount2  & count3  & count4  & count5  & count7  & count8  & count9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s6] can6  & ncount1  & count2  & count3  & count4  & count5  & count7  & count8  & count9  & ncount10  -> (c6'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s6] can6  & count1  & count2  & count3  & count4  & count5  & count7  & count8  & count9  & ncount10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s6] can6  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount7  & ncount8  & ncount9  & count10  -> (c6'=0) & (c10'=c10+1);
	[s6] can6  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount7  & ncount8  & ncount9  & count10  -> (c6'=0) & (c1'=c1+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & ncount7  & ncount8  & ncount9  & count10  -> (c6'=0) & (c2'=c2+1) & (c10'=c10+1);
	[s6] can6  & count1  & count2  & ncount3  & ncount4  & ncount5  & ncount7  & ncount8  & ncount9  & count10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & ncount7  & ncount8  & ncount9  & count10  -> (c6'=0) & (c3'=c3+1) & (c10'=c10+1);
	[s6] can6  & count1  & ncount2  & count3  & ncount4  & ncount5  & ncount7  & ncount8  & ncount9  & count10  -> (c6'=0) & (c1'=c1+1) & (c3'=c3+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & count2  & count3  & ncount4  & ncount5  & ncount7  & ncount8  & ncount9  & count10  -> (c6'=0) & (c2'=c2+1) & (c3'=c3+1) & (c10'=c10+1);
	[s6] can6  & count1  & count2  & count3  & ncount4  & ncount5  & ncount7  & ncount8  & ncount9  & count10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & ncount7  & ncount8  & ncount9  & count10  -> (c6'=0) & (c4'=c4+1) & (c10'=c10+1);
	[s6] can6  & count1  & ncount2  & ncount3  & count4  & ncount5  & ncount7  & ncount8  & ncount9  & count10  -> (c6'=0) & (c1'=c1+1) & (c4'=c4+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & count2  & ncount3  & count4  & ncount5  & ncount7  & ncount8  & ncount9  & count10  -> (c6'=0) & (c2'=c2+1) & (c4'=c4+1) & (c10'=c10+1);
	[s6] can6  & count1  & count2  & ncount3  & count4  & ncount5  & ncount7  & ncount8  & ncount9  & count10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & ncount2  & count3  & count4  & ncount5  & ncount7  & ncount8  & ncount9  & count10  -> (c6'=0) & (c3'=c3+1) & (c4'=c4+1) & (c10'=c10+1);
	[s6] can6  & count1  & ncount2  & count3  & count4  & ncount5  & ncount7  & ncount8  & ncount9  & count10  -> (c6'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & count2  & count3  & count4  & ncount5  & ncount7  & ncount8  & ncount9  & count10  -> (c6'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c10'=c10+1);
	[s6] can6  & count1  & count2  & count3  & count4  & ncount5  & ncount7  & ncount8  & ncount9  & count10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & ncount7  & ncount8  & ncount9  & count10  -> (c6'=0) & (c5'=c5+1) & (c10'=c10+1);
	[s6] can6  & count1  & ncount2  & ncount3  & ncount4  & count5  & ncount7  & ncount8  & ncount9  & count10  -> (c6'=0) & (c1'=c1+1) & (c5'=c5+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & count2  & ncount3  & ncount4  & count5  & ncount7  & ncount8  & ncount9  & count10  -> (c6'=0) & (c2'=c2+1) & (c5'=c5+1) & (c10'=c10+1);
	[s6] can6  & count1  & count2  & ncount3  & ncount4  & count5  & ncount7  & ncount8  & ncount9  & count10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & ncount2  & count3  & ncount4  & count5  & ncount7  & ncount8  & ncount9  & count10  -> (c6'=0) & (c3'=c3+1) & (c5'=c5+1) & (c10'=c10+1);
	[s6] can6  & count1  & ncount2  & count3  & ncount4  & count5  & ncount7  & ncount8  & ncount9  & count10  -> (c6'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & count2  & count3  & ncount4  & count5  & ncount7  & ncount8  & ncount9  & count10  -> (c6'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c10'=c10+1);
	[s6] can6  & count1  & count2  & count3  & ncount4  & count5  & ncount7  & ncount8  & ncount9  & count10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & ncount2  & ncount3  & count4  & count5  & ncount7  & ncount8  & ncount9  & count10  -> (c6'=0) & (c4'=c4+1) & (c5'=c5+1) & (c10'=c10+1);
	[s6] can6  & count1  & ncount2  & ncount3  & count4  & count5  & ncount7  & ncount8  & ncount9  & count10  -> (c6'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & count2  & ncount3  & count4  & count5  & ncount7  & ncount8  & ncount9  & count10  -> (c6'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c10'=c10+1);
	[s6] can6  & count1  & count2  & ncount3  & count4  & count5  & ncount7  & ncount8  & ncount9  & count10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & ncount2  & count3  & count4  & count5  & ncount7  & ncount8  & ncount9  & count10  -> (c6'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c10'=c10+1);
	[s6] can6  & count1  & ncount2  & count3  & count4  & count5  & ncount7  & ncount8  & ncount9  & count10  -> (c6'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & count2  & count3  & count4  & count5  & ncount7  & ncount8  & ncount9  & count10  -> (c6'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c10'=c10+1);
	[s6] can6  & count1  & count2  & count3  & count4  & count5  & ncount7  & ncount8  & ncount9  & count10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & count7  & ncount8  & ncount9  & count10  -> (c6'=0) & (c7'=c7+1) & (c10'=c10+1);
	[s6] can6  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & count7  & ncount8  & ncount9  & count10  -> (c6'=0) & (c1'=c1+1) & (c7'=c7+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & count7  & ncount8  & ncount9  & count10  -> (c6'=0) & (c2'=c2+1) & (c7'=c7+1) & (c10'=c10+1);
	[s6] can6  & count1  & count2  & ncount3  & ncount4  & ncount5  & count7  & ncount8  & ncount9  & count10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c7'=c7+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & count7  & ncount8  & ncount9  & count10  -> (c6'=0) & (c3'=c3+1) & (c7'=c7+1) & (c10'=c10+1);
	[s6] can6  & count1  & ncount2  & count3  & ncount4  & ncount5  & count7  & ncount8  & ncount9  & count10  -> (c6'=0) & (c1'=c1+1) & (c3'=c3+1) & (c7'=c7+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & count2  & count3  & ncount4  & ncount5  & count7  & ncount8  & ncount9  & count10  -> (c6'=0) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1) & (c10'=c10+1);
	[s6] can6  & count1  & count2  & count3  & ncount4  & ncount5  & count7  & ncount8  & ncount9  & count10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & count7  & ncount8  & ncount9  & count10  -> (c6'=0) & (c4'=c4+1) & (c7'=c7+1) & (c10'=c10+1);
	[s6] can6  & count1  & ncount2  & ncount3  & count4  & ncount5  & count7  & ncount8  & ncount9  & count10  -> (c6'=0) & (c1'=c1+1) & (c4'=c4+1) & (c7'=c7+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & count2  & ncount3  & count4  & ncount5  & count7  & ncount8  & ncount9  & count10  -> (c6'=0) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1) & (c10'=c10+1);
	[s6] can6  & count1  & count2  & ncount3  & count4  & ncount5  & count7  & ncount8  & ncount9  & count10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & ncount2  & count3  & count4  & ncount5  & count7  & ncount8  & ncount9  & count10  -> (c6'=0) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c10'=c10+1);
	[s6] can6  & count1  & ncount2  & count3  & count4  & ncount5  & count7  & ncount8  & ncount9  & count10  -> (c6'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & count2  & count3  & count4  & ncount5  & count7  & ncount8  & ncount9  & count10  -> (c6'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c10'=c10+1);
	[s6] can6  & count1  & count2  & count3  & count4  & ncount5  & count7  & ncount8  & ncount9  & count10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & count7  & ncount8  & ncount9  & count10  -> (c6'=0) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s6] can6  & count1  & ncount2  & ncount3  & ncount4  & count5  & count7  & ncount8  & ncount9  & count10  -> (c6'=0) & (c1'=c1+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & count2  & ncount3  & ncount4  & count5  & count7  & ncount8  & ncount9  & count10  -> (c6'=0) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s6] can6  & count1  & count2  & ncount3  & ncount4  & count5  & count7  & ncount8  & ncount9  & count10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & ncount2  & count3  & ncount4  & count5  & count7  & ncount8  & ncount9  & count10  -> (c6'=0) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s6] can6  & count1  & ncount2  & count3  & ncount4  & count5  & count7  & ncount8  & ncount9  & count10  -> (c6'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & count2  & count3  & ncount4  & count5  & count7  & ncount8  & ncount9  & count10  -> (c6'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s6] can6  & count1  & count2  & count3  & ncount4  & count5  & count7  & ncount8  & ncount9  & count10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & ncount2  & ncount3  & count4  & count5  & count7  & ncount8  & ncount9  & count10  -> (c6'=0) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s6] can6  & count1  & ncount2  & ncount3  & count4  & count5  & count7  & ncount8  & ncount9  & count10  -> (c6'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & count2  & ncount3  & count4  & count5  & count7  & ncount8  & ncount9  & count10  -> (c6'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s6] can6  & count1  & count2  & ncount3  & count4  & count5  & count7  & ncount8  & ncount9  & count10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & ncount2  & count3  & count4  & count5  & count7  & ncount8  & ncount9  & count10  -> (c6'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s6] can6  & count1  & ncount2  & count3  & count4  & count5  & count7  & ncount8  & ncount9  & count10  -> (c6'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & count2  & count3  & count4  & count5  & count7  & ncount8  & ncount9  & count10  -> (c6'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s6] can6  & count1  & count2  & count3  & count4  & count5  & count7  & ncount8  & ncount9  & count10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount7  & count8  & ncount9  & count10  -> (c6'=0) & (c8'=c8+1) & (c10'=c10+1);
	[s6] can6  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount7  & count8  & ncount9  & count10  -> (c6'=0) & (c1'=c1+1) & (c8'=c8+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & ncount7  & count8  & ncount9  & count10  -> (c6'=0) & (c2'=c2+1) & (c8'=c8+1) & (c10'=c10+1);
	[s6] can6  & count1  & count2  & ncount3  & ncount4  & ncount5  & ncount7  & count8  & ncount9  & count10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c8'=c8+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & ncount7  & count8  & ncount9  & count10  -> (c6'=0) & (c3'=c3+1) & (c8'=c8+1) & (c10'=c10+1);
	[s6] can6  & count1  & ncount2  & count3  & ncount4  & ncount5  & ncount7  & count8  & ncount9  & count10  -> (c6'=0) & (c1'=c1+1) & (c3'=c3+1) & (c8'=c8+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & count2  & count3  & ncount4  & ncount5  & ncount7  & count8  & ncount9  & count10  -> (c6'=0) & (c2'=c2+1) & (c3'=c3+1) & (c8'=c8+1) & (c10'=c10+1);
	[s6] can6  & count1  & count2  & count3  & ncount4  & ncount5  & ncount7  & count8  & ncount9  & count10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c8'=c8+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & ncount7  & count8  & ncount9  & count10  -> (c6'=0) & (c4'=c4+1) & (c8'=c8+1) & (c10'=c10+1);
	[s6] can6  & count1  & ncount2  & ncount3  & count4  & ncount5  & ncount7  & count8  & ncount9  & count10  -> (c6'=0) & (c1'=c1+1) & (c4'=c4+1) & (c8'=c8+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & count2  & ncount3  & count4  & ncount5  & ncount7  & count8  & ncount9  & count10  -> (c6'=0) & (c2'=c2+1) & (c4'=c4+1) & (c8'=c8+1) & (c10'=c10+1);
	[s6] can6  & count1  & count2  & ncount3  & count4  & ncount5  & ncount7  & count8  & ncount9  & count10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c8'=c8+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & ncount2  & count3  & count4  & ncount5  & ncount7  & count8  & ncount9  & count10  -> (c6'=0) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1) & (c10'=c10+1);
	[s6] can6  & count1  & ncount2  & count3  & count4  & ncount5  & ncount7  & count8  & ncount9  & count10  -> (c6'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & count2  & count3  & count4  & ncount5  & ncount7  & count8  & ncount9  & count10  -> (c6'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1) & (c10'=c10+1);
	[s6] can6  & count1  & count2  & count3  & count4  & ncount5  & ncount7  & count8  & ncount9  & count10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & ncount7  & count8  & ncount9  & count10  -> (c6'=0) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s6] can6  & count1  & ncount2  & ncount3  & ncount4  & count5  & ncount7  & count8  & ncount9  & count10  -> (c6'=0) & (c1'=c1+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & count2  & ncount3  & ncount4  & count5  & ncount7  & count8  & ncount9  & count10  -> (c6'=0) & (c2'=c2+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s6] can6  & count1  & count2  & ncount3  & ncount4  & count5  & ncount7  & count8  & ncount9  & count10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & ncount2  & count3  & ncount4  & count5  & ncount7  & count8  & ncount9  & count10  -> (c6'=0) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s6] can6  & count1  & ncount2  & count3  & ncount4  & count5  & ncount7  & count8  & ncount9  & count10  -> (c6'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & count2  & count3  & ncount4  & count5  & ncount7  & count8  & ncount9  & count10  -> (c6'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s6] can6  & count1  & count2  & count3  & ncount4  & count5  & ncount7  & count8  & ncount9  & count10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & ncount2  & ncount3  & count4  & count5  & ncount7  & count8  & ncount9  & count10  -> (c6'=0) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s6] can6  & count1  & ncount2  & ncount3  & count4  & count5  & ncount7  & count8  & ncount9  & count10  -> (c6'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & count2  & ncount3  & count4  & count5  & ncount7  & count8  & ncount9  & count10  -> (c6'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s6] can6  & count1  & count2  & ncount3  & count4  & count5  & ncount7  & count8  & ncount9  & count10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & ncount2  & count3  & count4  & count5  & ncount7  & count8  & ncount9  & count10  -> (c6'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s6] can6  & count1  & ncount2  & count3  & count4  & count5  & ncount7  & count8  & ncount9  & count10  -> (c6'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & count2  & count3  & count4  & count5  & ncount7  & count8  & ncount9  & count10  -> (c6'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s6] can6  & count1  & count2  & count3  & count4  & count5  & ncount7  & count8  & ncount9  & count10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & count7  & count8  & ncount9  & count10  -> (c6'=0) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s6] can6  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & count7  & count8  & ncount9  & count10  -> (c6'=0) & (c1'=c1+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & count7  & count8  & ncount9  & count10  -> (c6'=0) & (c2'=c2+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s6] can6  & count1  & count2  & ncount3  & ncount4  & ncount5  & count7  & count8  & ncount9  & count10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & count7  & count8  & ncount9  & count10  -> (c6'=0) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s6] can6  & count1  & ncount2  & count3  & ncount4  & ncount5  & count7  & count8  & ncount9  & count10  -> (c6'=0) & (c1'=c1+1) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & count2  & count3  & ncount4  & ncount5  & count7  & count8  & ncount9  & count10  -> (c6'=0) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s6] can6  & count1  & count2  & count3  & ncount4  & ncount5  & count7  & count8  & ncount9  & count10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & count7  & count8  & ncount9  & count10  -> (c6'=0) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s6] can6  & count1  & ncount2  & ncount3  & count4  & ncount5  & count7  & count8  & ncount9  & count10  -> (c6'=0) & (c1'=c1+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & count2  & ncount3  & count4  & ncount5  & count7  & count8  & ncount9  & count10  -> (c6'=0) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s6] can6  & count1  & count2  & ncount3  & count4  & ncount5  & count7  & count8  & ncount9  & count10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & ncount2  & count3  & count4  & ncount5  & count7  & count8  & ncount9  & count10  -> (c6'=0) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s6] can6  & count1  & ncount2  & count3  & count4  & ncount5  & count7  & count8  & ncount9  & count10  -> (c6'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & count2  & count3  & count4  & ncount5  & count7  & count8  & ncount9  & count10  -> (c6'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s6] can6  & count1  & count2  & count3  & count4  & ncount5  & count7  & count8  & ncount9  & count10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & count7  & count8  & ncount9  & count10  -> (c6'=0) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s6] can6  & count1  & ncount2  & ncount3  & ncount4  & count5  & count7  & count8  & ncount9  & count10  -> (c6'=0) & (c1'=c1+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & count2  & ncount3  & ncount4  & count5  & count7  & count8  & ncount9  & count10  -> (c6'=0) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s6] can6  & count1  & count2  & ncount3  & ncount4  & count5  & count7  & count8  & ncount9  & count10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & ncount2  & count3  & ncount4  & count5  & count7  & count8  & ncount9  & count10  -> (c6'=0) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s6] can6  & count1  & ncount2  & count3  & ncount4  & count5  & count7  & count8  & ncount9  & count10  -> (c6'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & count2  & count3  & ncount4  & count5  & count7  & count8  & ncount9  & count10  -> (c6'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s6] can6  & count1  & count2  & count3  & ncount4  & count5  & count7  & count8  & ncount9  & count10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & ncount2  & ncount3  & count4  & count5  & count7  & count8  & ncount9  & count10  -> (c6'=0) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s6] can6  & count1  & ncount2  & ncount3  & count4  & count5  & count7  & count8  & ncount9  & count10  -> (c6'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & count2  & ncount3  & count4  & count5  & count7  & count8  & ncount9  & count10  -> (c6'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s6] can6  & count1  & count2  & ncount3  & count4  & count5  & count7  & count8  & ncount9  & count10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & ncount2  & count3  & count4  & count5  & count7  & count8  & ncount9  & count10  -> (c6'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s6] can6  & count1  & ncount2  & count3  & count4  & count5  & count7  & count8  & ncount9  & count10  -> (c6'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & count2  & count3  & count4  & count5  & count7  & count8  & ncount9  & count10  -> (c6'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s6] can6  & count1  & count2  & count3  & count4  & count5  & count7  & count8  & ncount9  & count10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount7  & ncount8  & count9  & count10  -> (c6'=0) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount7  & ncount8  & count9  & count10  -> (c6'=0) & (c1'=c1+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & ncount7  & ncount8  & count9  & count10  -> (c6'=0) & (c2'=c2+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & count1  & count2  & ncount3  & ncount4  & ncount5  & ncount7  & ncount8  & count9  & count10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & ncount7  & ncount8  & count9  & count10  -> (c6'=0) & (c3'=c3+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & count1  & ncount2  & count3  & ncount4  & ncount5  & ncount7  & ncount8  & count9  & count10  -> (c6'=0) & (c1'=c1+1) & (c3'=c3+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & count2  & count3  & ncount4  & ncount5  & ncount7  & ncount8  & count9  & count10  -> (c6'=0) & (c2'=c2+1) & (c3'=c3+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & count1  & count2  & count3  & ncount4  & ncount5  & ncount7  & ncount8  & count9  & count10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & ncount7  & ncount8  & count9  & count10  -> (c6'=0) & (c4'=c4+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & count1  & ncount2  & ncount3  & count4  & ncount5  & ncount7  & ncount8  & count9  & count10  -> (c6'=0) & (c1'=c1+1) & (c4'=c4+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & count2  & ncount3  & count4  & ncount5  & ncount7  & ncount8  & count9  & count10  -> (c6'=0) & (c2'=c2+1) & (c4'=c4+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & count1  & count2  & ncount3  & count4  & ncount5  & ncount7  & ncount8  & count9  & count10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & ncount2  & count3  & count4  & ncount5  & ncount7  & ncount8  & count9  & count10  -> (c6'=0) & (c3'=c3+1) & (c4'=c4+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & count1  & ncount2  & count3  & count4  & ncount5  & ncount7  & ncount8  & count9  & count10  -> (c6'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & count2  & count3  & count4  & ncount5  & ncount7  & ncount8  & count9  & count10  -> (c6'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & count1  & count2  & count3  & count4  & ncount5  & ncount7  & ncount8  & count9  & count10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & ncount7  & ncount8  & count9  & count10  -> (c6'=0) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & count1  & ncount2  & ncount3  & ncount4  & count5  & ncount7  & ncount8  & count9  & count10  -> (c6'=0) & (c1'=c1+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & count2  & ncount3  & ncount4  & count5  & ncount7  & ncount8  & count9  & count10  -> (c6'=0) & (c2'=c2+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & count1  & count2  & ncount3  & ncount4  & count5  & ncount7  & ncount8  & count9  & count10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & ncount2  & count3  & ncount4  & count5  & ncount7  & ncount8  & count9  & count10  -> (c6'=0) & (c3'=c3+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & count1  & ncount2  & count3  & ncount4  & count5  & ncount7  & ncount8  & count9  & count10  -> (c6'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & count2  & count3  & ncount4  & count5  & ncount7  & ncount8  & count9  & count10  -> (c6'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & count1  & count2  & count3  & ncount4  & count5  & ncount7  & ncount8  & count9  & count10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & ncount2  & ncount3  & count4  & count5  & ncount7  & ncount8  & count9  & count10  -> (c6'=0) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & count1  & ncount2  & ncount3  & count4  & count5  & ncount7  & ncount8  & count9  & count10  -> (c6'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & count2  & ncount3  & count4  & count5  & ncount7  & ncount8  & count9  & count10  -> (c6'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & count1  & count2  & ncount3  & count4  & count5  & ncount7  & ncount8  & count9  & count10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & ncount2  & count3  & count4  & count5  & ncount7  & ncount8  & count9  & count10  -> (c6'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & count1  & ncount2  & count3  & count4  & count5  & ncount7  & ncount8  & count9  & count10  -> (c6'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & count2  & count3  & count4  & count5  & ncount7  & ncount8  & count9  & count10  -> (c6'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & count1  & count2  & count3  & count4  & count5  & ncount7  & ncount8  & count9  & count10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & count7  & ncount8  & count9  & count10  -> (c6'=0) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & count7  & ncount8  & count9  & count10  -> (c6'=0) & (c1'=c1+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & count7  & ncount8  & count9  & count10  -> (c6'=0) & (c2'=c2+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & count1  & count2  & ncount3  & ncount4  & ncount5  & count7  & ncount8  & count9  & count10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & count7  & ncount8  & count9  & count10  -> (c6'=0) & (c3'=c3+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & count1  & ncount2  & count3  & ncount4  & ncount5  & count7  & ncount8  & count9  & count10  -> (c6'=0) & (c1'=c1+1) & (c3'=c3+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & count2  & count3  & ncount4  & ncount5  & count7  & ncount8  & count9  & count10  -> (c6'=0) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & count1  & count2  & count3  & ncount4  & ncount5  & count7  & ncount8  & count9  & count10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & count7  & ncount8  & count9  & count10  -> (c6'=0) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & count1  & ncount2  & ncount3  & count4  & ncount5  & count7  & ncount8  & count9  & count10  -> (c6'=0) & (c1'=c1+1) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & count2  & ncount3  & count4  & ncount5  & count7  & ncount8  & count9  & count10  -> (c6'=0) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & count1  & count2  & ncount3  & count4  & ncount5  & count7  & ncount8  & count9  & count10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & ncount2  & count3  & count4  & ncount5  & count7  & ncount8  & count9  & count10  -> (c6'=0) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & count1  & ncount2  & count3  & count4  & ncount5  & count7  & ncount8  & count9  & count10  -> (c6'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & count2  & count3  & count4  & ncount5  & count7  & ncount8  & count9  & count10  -> (c6'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & count1  & count2  & count3  & count4  & ncount5  & count7  & ncount8  & count9  & count10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & count7  & ncount8  & count9  & count10  -> (c6'=0) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & count1  & ncount2  & ncount3  & ncount4  & count5  & count7  & ncount8  & count9  & count10  -> (c6'=0) & (c1'=c1+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & count2  & ncount3  & ncount4  & count5  & count7  & ncount8  & count9  & count10  -> (c6'=0) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & count1  & count2  & ncount3  & ncount4  & count5  & count7  & ncount8  & count9  & count10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & ncount2  & count3  & ncount4  & count5  & count7  & ncount8  & count9  & count10  -> (c6'=0) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & count1  & ncount2  & count3  & ncount4  & count5  & count7  & ncount8  & count9  & count10  -> (c6'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & count2  & count3  & ncount4  & count5  & count7  & ncount8  & count9  & count10  -> (c6'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & count1  & count2  & count3  & ncount4  & count5  & count7  & ncount8  & count9  & count10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & ncount2  & ncount3  & count4  & count5  & count7  & ncount8  & count9  & count10  -> (c6'=0) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & count1  & ncount2  & ncount3  & count4  & count5  & count7  & ncount8  & count9  & count10  -> (c6'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & count2  & ncount3  & count4  & count5  & count7  & ncount8  & count9  & count10  -> (c6'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & count1  & count2  & ncount3  & count4  & count5  & count7  & ncount8  & count9  & count10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & ncount2  & count3  & count4  & count5  & count7  & ncount8  & count9  & count10  -> (c6'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & count1  & ncount2  & count3  & count4  & count5  & count7  & ncount8  & count9  & count10  -> (c6'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & count2  & count3  & count4  & count5  & count7  & ncount8  & count9  & count10  -> (c6'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & count1  & count2  & count3  & count4  & count5  & count7  & ncount8  & count9  & count10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount7  & count8  & count9  & count10  -> (c6'=0) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount7  & count8  & count9  & count10  -> (c6'=0) & (c1'=c1+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & ncount7  & count8  & count9  & count10  -> (c6'=0) & (c2'=c2+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & count1  & count2  & ncount3  & ncount4  & ncount5  & ncount7  & count8  & count9  & count10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & ncount7  & count8  & count9  & count10  -> (c6'=0) & (c3'=c3+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & count1  & ncount2  & count3  & ncount4  & ncount5  & ncount7  & count8  & count9  & count10  -> (c6'=0) & (c1'=c1+1) & (c3'=c3+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & count2  & count3  & ncount4  & ncount5  & ncount7  & count8  & count9  & count10  -> (c6'=0) & (c2'=c2+1) & (c3'=c3+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & count1  & count2  & count3  & ncount4  & ncount5  & ncount7  & count8  & count9  & count10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & ncount7  & count8  & count9  & count10  -> (c6'=0) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & count1  & ncount2  & ncount3  & count4  & ncount5  & ncount7  & count8  & count9  & count10  -> (c6'=0) & (c1'=c1+1) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & count2  & ncount3  & count4  & ncount5  & ncount7  & count8  & count9  & count10  -> (c6'=0) & (c2'=c2+1) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & count1  & count2  & ncount3  & count4  & ncount5  & ncount7  & count8  & count9  & count10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & ncount2  & count3  & count4  & ncount5  & ncount7  & count8  & count9  & count10  -> (c6'=0) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & count1  & ncount2  & count3  & count4  & ncount5  & ncount7  & count8  & count9  & count10  -> (c6'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & count2  & count3  & count4  & ncount5  & ncount7  & count8  & count9  & count10  -> (c6'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & count1  & count2  & count3  & count4  & ncount5  & ncount7  & count8  & count9  & count10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & ncount7  & count8  & count9  & count10  -> (c6'=0) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & count1  & ncount2  & ncount3  & ncount4  & count5  & ncount7  & count8  & count9  & count10  -> (c6'=0) & (c1'=c1+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & count2  & ncount3  & ncount4  & count5  & ncount7  & count8  & count9  & count10  -> (c6'=0) & (c2'=c2+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & count1  & count2  & ncount3  & ncount4  & count5  & ncount7  & count8  & count9  & count10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & ncount2  & count3  & ncount4  & count5  & ncount7  & count8  & count9  & count10  -> (c6'=0) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & count1  & ncount2  & count3  & ncount4  & count5  & ncount7  & count8  & count9  & count10  -> (c6'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & count2  & count3  & ncount4  & count5  & ncount7  & count8  & count9  & count10  -> (c6'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & count1  & count2  & count3  & ncount4  & count5  & ncount7  & count8  & count9  & count10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & ncount2  & ncount3  & count4  & count5  & ncount7  & count8  & count9  & count10  -> (c6'=0) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & count1  & ncount2  & ncount3  & count4  & count5  & ncount7  & count8  & count9  & count10  -> (c6'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & count2  & ncount3  & count4  & count5  & ncount7  & count8  & count9  & count10  -> (c6'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & count1  & count2  & ncount3  & count4  & count5  & ncount7  & count8  & count9  & count10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & ncount2  & count3  & count4  & count5  & ncount7  & count8  & count9  & count10  -> (c6'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & count1  & ncount2  & count3  & count4  & count5  & ncount7  & count8  & count9  & count10  -> (c6'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & count2  & count3  & count4  & count5  & ncount7  & count8  & count9  & count10  -> (c6'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & count1  & count2  & count3  & count4  & count5  & ncount7  & count8  & count9  & count10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & count7  & count8  & count9  & count10  -> (c6'=0) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & count7  & count8  & count9  & count10  -> (c6'=0) & (c1'=c1+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & count7  & count8  & count9  & count10  -> (c6'=0) & (c2'=c2+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & count1  & count2  & ncount3  & ncount4  & ncount5  & count7  & count8  & count9  & count10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & count7  & count8  & count9  & count10  -> (c6'=0) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & count1  & ncount2  & count3  & ncount4  & ncount5  & count7  & count8  & count9  & count10  -> (c6'=0) & (c1'=c1+1) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & count2  & count3  & ncount4  & ncount5  & count7  & count8  & count9  & count10  -> (c6'=0) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & count1  & count2  & count3  & ncount4  & ncount5  & count7  & count8  & count9  & count10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & count7  & count8  & count9  & count10  -> (c6'=0) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & count1  & ncount2  & ncount3  & count4  & ncount5  & count7  & count8  & count9  & count10  -> (c6'=0) & (c1'=c1+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & count2  & ncount3  & count4  & ncount5  & count7  & count8  & count9  & count10  -> (c6'=0) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & count1  & count2  & ncount3  & count4  & ncount5  & count7  & count8  & count9  & count10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & ncount2  & count3  & count4  & ncount5  & count7  & count8  & count9  & count10  -> (c6'=0) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & count1  & ncount2  & count3  & count4  & ncount5  & count7  & count8  & count9  & count10  -> (c6'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & count2  & count3  & count4  & ncount5  & count7  & count8  & count9  & count10  -> (c6'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & count1  & count2  & count3  & count4  & ncount5  & count7  & count8  & count9  & count10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & count7  & count8  & count9  & count10  -> (c6'=0) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & count1  & ncount2  & ncount3  & ncount4  & count5  & count7  & count8  & count9  & count10  -> (c6'=0) & (c1'=c1+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & count2  & ncount3  & ncount4  & count5  & count7  & count8  & count9  & count10  -> (c6'=0) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & count1  & count2  & ncount3  & ncount4  & count5  & count7  & count8  & count9  & count10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & ncount2  & count3  & ncount4  & count5  & count7  & count8  & count9  & count10  -> (c6'=0) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & count1  & ncount2  & count3  & ncount4  & count5  & count7  & count8  & count9  & count10  -> (c6'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & count2  & count3  & ncount4  & count5  & count7  & count8  & count9  & count10  -> (c6'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & count1  & count2  & count3  & ncount4  & count5  & count7  & count8  & count9  & count10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & ncount2  & ncount3  & count4  & count5  & count7  & count8  & count9  & count10  -> (c6'=0) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & count1  & ncount2  & ncount3  & count4  & count5  & count7  & count8  & count9  & count10  -> (c6'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & count2  & ncount3  & count4  & count5  & count7  & count8  & count9  & count10  -> (c6'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & count1  & count2  & ncount3  & count4  & count5  & count7  & count8  & count9  & count10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & ncount2  & count3  & count4  & count5  & count7  & count8  & count9  & count10  -> (c6'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & count1  & ncount2  & count3  & count4  & count5  & count7  & count8  & count9  & count10  -> (c6'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & ncount1  & count2  & count3  & count4  & count5  & count7  & count8  & count9  & count10  -> (c6'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s6] can6  & count1  & count2  & count3  & count4  & count5  & count7  & count8  & count9  & count10  -> (c6'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount8  & ncount9  & ncount10  -> (c7'=0);
	[s7] can7  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount8  & ncount9  & ncount10  -> (c7'=0) & (c1'=c1+1);
	[s7] can7  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount8  & ncount9  & ncount10  -> (c7'=0) & (c2'=c2+1);
	[s7] can7  & count1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount8  & ncount9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1);
	[s7] can7  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & ncount8  & ncount9  & ncount10  -> (c7'=0) & (c3'=c3+1);
	[s7] can7  & count1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & ncount8  & ncount9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c3'=c3+1);
	[s7] can7  & ncount1  & count2  & count3  & ncount4  & ncount5  & ncount6  & ncount8  & ncount9  & ncount10  -> (c7'=0) & (c2'=c2+1) & (c3'=c3+1);
	[s7] can7  & count1  & count2  & count3  & ncount4  & ncount5  & ncount6  & ncount8  & ncount9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1);
	[s7] can7  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & ncount8  & ncount9  & ncount10  -> (c7'=0) & (c4'=c4+1);
	[s7] can7  & count1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & ncount8  & ncount9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c4'=c4+1);
	[s7] can7  & ncount1  & count2  & ncount3  & count4  & ncount5  & ncount6  & ncount8  & ncount9  & ncount10  -> (c7'=0) & (c2'=c2+1) & (c4'=c4+1);
	[s7] can7  & count1  & count2  & ncount3  & count4  & ncount5  & ncount6  & ncount8  & ncount9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1);
	[s7] can7  & ncount1  & ncount2  & count3  & count4  & ncount5  & ncount6  & ncount8  & ncount9  & ncount10  -> (c7'=0) & (c3'=c3+1) & (c4'=c4+1);
	[s7] can7  & count1  & ncount2  & count3  & count4  & ncount5  & ncount6  & ncount8  & ncount9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1);
	[s7] can7  & ncount1  & count2  & count3  & count4  & ncount5  & ncount6  & ncount8  & ncount9  & ncount10  -> (c7'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1);
	[s7] can7  & count1  & count2  & count3  & count4  & ncount5  & ncount6  & ncount8  & ncount9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1);
	[s7] can7  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & ncount8  & ncount9  & ncount10  -> (c7'=0) & (c5'=c5+1);
	[s7] can7  & count1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & ncount8  & ncount9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c5'=c5+1);
	[s7] can7  & ncount1  & count2  & ncount3  & ncount4  & count5  & ncount6  & ncount8  & ncount9  & ncount10  -> (c7'=0) & (c2'=c2+1) & (c5'=c5+1);
	[s7] can7  & count1  & count2  & ncount3  & ncount4  & count5  & ncount6  & ncount8  & ncount9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1);
	[s7] can7  & ncount1  & ncount2  & count3  & ncount4  & count5  & ncount6  & ncount8  & ncount9  & ncount10  -> (c7'=0) & (c3'=c3+1) & (c5'=c5+1);
	[s7] can7  & count1  & ncount2  & count3  & ncount4  & count5  & ncount6  & ncount8  & ncount9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1);
	[s7] can7  & ncount1  & count2  & count3  & ncount4  & count5  & ncount6  & ncount8  & ncount9  & ncount10  -> (c7'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1);
	[s7] can7  & count1  & count2  & count3  & ncount4  & count5  & ncount6  & ncount8  & ncount9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1);
	[s7] can7  & ncount1  & ncount2  & ncount3  & count4  & count5  & ncount6  & ncount8  & ncount9  & ncount10  -> (c7'=0) & (c4'=c4+1) & (c5'=c5+1);
	[s7] can7  & count1  & ncount2  & ncount3  & count4  & count5  & ncount6  & ncount8  & ncount9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1);
	[s7] can7  & ncount1  & count2  & ncount3  & count4  & count5  & ncount6  & ncount8  & ncount9  & ncount10  -> (c7'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1);
	[s7] can7  & count1  & count2  & ncount3  & count4  & count5  & ncount6  & ncount8  & ncount9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1);
	[s7] can7  & ncount1  & ncount2  & count3  & count4  & count5  & ncount6  & ncount8  & ncount9  & ncount10  -> (c7'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1);
	[s7] can7  & count1  & ncount2  & count3  & count4  & count5  & ncount6  & ncount8  & ncount9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1);
	[s7] can7  & ncount1  & count2  & count3  & count4  & count5  & ncount6  & ncount8  & ncount9  & ncount10  -> (c7'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1);
	[s7] can7  & count1  & count2  & count3  & count4  & count5  & ncount6  & ncount8  & ncount9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1);
	[s7] can7  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & ncount8  & ncount9  & ncount10  -> (c7'=0) & (c6'=c6+1);
	[s7] can7  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & ncount8  & ncount9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c6'=c6+1);
	[s7] can7  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & count6  & ncount8  & ncount9  & ncount10  -> (c7'=0) & (c2'=c2+1) & (c6'=c6+1);
	[s7] can7  & count1  & count2  & ncount3  & ncount4  & ncount5  & count6  & ncount8  & ncount9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1);
	[s7] can7  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & count6  & ncount8  & ncount9  & ncount10  -> (c7'=0) & (c3'=c3+1) & (c6'=c6+1);
	[s7] can7  & count1  & ncount2  & count3  & ncount4  & ncount5  & count6  & ncount8  & ncount9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1);
	[s7] can7  & ncount1  & count2  & count3  & ncount4  & ncount5  & count6  & ncount8  & ncount9  & ncount10  -> (c7'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1);
	[s7] can7  & count1  & count2  & count3  & ncount4  & ncount5  & count6  & ncount8  & ncount9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1);
	[s7] can7  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & count6  & ncount8  & ncount9  & ncount10  -> (c7'=0) & (c4'=c4+1) & (c6'=c6+1);
	[s7] can7  & count1  & ncount2  & ncount3  & count4  & ncount5  & count6  & ncount8  & ncount9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1);
	[s7] can7  & ncount1  & count2  & ncount3  & count4  & ncount5  & count6  & ncount8  & ncount9  & ncount10  -> (c7'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1);
	[s7] can7  & count1  & count2  & ncount3  & count4  & ncount5  & count6  & ncount8  & ncount9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1);
	[s7] can7  & ncount1  & ncount2  & count3  & count4  & ncount5  & count6  & ncount8  & ncount9  & ncount10  -> (c7'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1);
	[s7] can7  & count1  & ncount2  & count3  & count4  & ncount5  & count6  & ncount8  & ncount9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1);
	[s7] can7  & ncount1  & count2  & count3  & count4  & ncount5  & count6  & ncount8  & ncount9  & ncount10  -> (c7'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1);
	[s7] can7  & count1  & count2  & count3  & count4  & ncount5  & count6  & ncount8  & ncount9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1);
	[s7] can7  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & count6  & ncount8  & ncount9  & ncount10  -> (c7'=0) & (c5'=c5+1) & (c6'=c6+1);
	[s7] can7  & count1  & ncount2  & ncount3  & ncount4  & count5  & count6  & ncount8  & ncount9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1);
	[s7] can7  & ncount1  & count2  & ncount3  & ncount4  & count5  & count6  & ncount8  & ncount9  & ncount10  -> (c7'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1);
	[s7] can7  & count1  & count2  & ncount3  & ncount4  & count5  & count6  & ncount8  & ncount9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1);
	[s7] can7  & ncount1  & ncount2  & count3  & ncount4  & count5  & count6  & ncount8  & ncount9  & ncount10  -> (c7'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1);
	[s7] can7  & count1  & ncount2  & count3  & ncount4  & count5  & count6  & ncount8  & ncount9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1);
	[s7] can7  & ncount1  & count2  & count3  & ncount4  & count5  & count6  & ncount8  & ncount9  & ncount10  -> (c7'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1);
	[s7] can7  & count1  & count2  & count3  & ncount4  & count5  & count6  & ncount8  & ncount9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1);
	[s7] can7  & ncount1  & ncount2  & ncount3  & count4  & count5  & count6  & ncount8  & ncount9  & ncount10  -> (c7'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1);
	[s7] can7  & count1  & ncount2  & ncount3  & count4  & count5  & count6  & ncount8  & ncount9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1);
	[s7] can7  & ncount1  & count2  & ncount3  & count4  & count5  & count6  & ncount8  & ncount9  & ncount10  -> (c7'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1);
	[s7] can7  & count1  & count2  & ncount3  & count4  & count5  & count6  & ncount8  & ncount9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1);
	[s7] can7  & ncount1  & ncount2  & count3  & count4  & count5  & count6  & ncount8  & ncount9  & ncount10  -> (c7'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1);
	[s7] can7  & count1  & ncount2  & count3  & count4  & count5  & count6  & ncount8  & ncount9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1);
	[s7] can7  & ncount1  & count2  & count3  & count4  & count5  & count6  & ncount8  & ncount9  & ncount10  -> (c7'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1);
	[s7] can7  & count1  & count2  & count3  & count4  & count5  & count6  & ncount8  & ncount9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1);
	[s7] can7  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & count8  & ncount9  & ncount10  -> (c7'=0) & (c8'=c8+1);
	[s7] can7  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & count8  & ncount9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c8'=c8+1);
	[s7] can7  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & count8  & ncount9  & ncount10  -> (c7'=0) & (c2'=c2+1) & (c8'=c8+1);
	[s7] can7  & count1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & count8  & ncount9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c8'=c8+1);
	[s7] can7  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & count8  & ncount9  & ncount10  -> (c7'=0) & (c3'=c3+1) & (c8'=c8+1);
	[s7] can7  & count1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & count8  & ncount9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c3'=c3+1) & (c8'=c8+1);
	[s7] can7  & ncount1  & count2  & count3  & ncount4  & ncount5  & ncount6  & count8  & ncount9  & ncount10  -> (c7'=0) & (c2'=c2+1) & (c3'=c3+1) & (c8'=c8+1);
	[s7] can7  & count1  & count2  & count3  & ncount4  & ncount5  & ncount6  & count8  & ncount9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c8'=c8+1);
	[s7] can7  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & count8  & ncount9  & ncount10  -> (c7'=0) & (c4'=c4+1) & (c8'=c8+1);
	[s7] can7  & count1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & count8  & ncount9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c4'=c4+1) & (c8'=c8+1);
	[s7] can7  & ncount1  & count2  & ncount3  & count4  & ncount5  & ncount6  & count8  & ncount9  & ncount10  -> (c7'=0) & (c2'=c2+1) & (c4'=c4+1) & (c8'=c8+1);
	[s7] can7  & count1  & count2  & ncount3  & count4  & ncount5  & ncount6  & count8  & ncount9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c8'=c8+1);
	[s7] can7  & ncount1  & ncount2  & count3  & count4  & ncount5  & ncount6  & count8  & ncount9  & ncount10  -> (c7'=0) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1);
	[s7] can7  & count1  & ncount2  & count3  & count4  & ncount5  & ncount6  & count8  & ncount9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1);
	[s7] can7  & ncount1  & count2  & count3  & count4  & ncount5  & ncount6  & count8  & ncount9  & ncount10  -> (c7'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1);
	[s7] can7  & count1  & count2  & count3  & count4  & ncount5  & ncount6  & count8  & ncount9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1);
	[s7] can7  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & count8  & ncount9  & ncount10  -> (c7'=0) & (c5'=c5+1) & (c8'=c8+1);
	[s7] can7  & count1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & count8  & ncount9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c5'=c5+1) & (c8'=c8+1);
	[s7] can7  & ncount1  & count2  & ncount3  & ncount4  & count5  & ncount6  & count8  & ncount9  & ncount10  -> (c7'=0) & (c2'=c2+1) & (c5'=c5+1) & (c8'=c8+1);
	[s7] can7  & count1  & count2  & ncount3  & ncount4  & count5  & ncount6  & count8  & ncount9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c8'=c8+1);
	[s7] can7  & ncount1  & ncount2  & count3  & ncount4  & count5  & ncount6  & count8  & ncount9  & ncount10  -> (c7'=0) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1);
	[s7] can7  & count1  & ncount2  & count3  & ncount4  & count5  & ncount6  & count8  & ncount9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1);
	[s7] can7  & ncount1  & count2  & count3  & ncount4  & count5  & ncount6  & count8  & ncount9  & ncount10  -> (c7'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1);
	[s7] can7  & count1  & count2  & count3  & ncount4  & count5  & ncount6  & count8  & ncount9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1);
	[s7] can7  & ncount1  & ncount2  & ncount3  & count4  & count5  & ncount6  & count8  & ncount9  & ncount10  -> (c7'=0) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1);
	[s7] can7  & count1  & ncount2  & ncount3  & count4  & count5  & ncount6  & count8  & ncount9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1);
	[s7] can7  & ncount1  & count2  & ncount3  & count4  & count5  & ncount6  & count8  & ncount9  & ncount10  -> (c7'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1);
	[s7] can7  & count1  & count2  & ncount3  & count4  & count5  & ncount6  & count8  & ncount9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1);
	[s7] can7  & ncount1  & ncount2  & count3  & count4  & count5  & ncount6  & count8  & ncount9  & ncount10  -> (c7'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1);
	[s7] can7  & count1  & ncount2  & count3  & count4  & count5  & ncount6  & count8  & ncount9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1);
	[s7] can7  & ncount1  & count2  & count3  & count4  & count5  & ncount6  & count8  & ncount9  & ncount10  -> (c7'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1);
	[s7] can7  & count1  & count2  & count3  & count4  & count5  & ncount6  & count8  & ncount9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1);
	[s7] can7  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & count8  & ncount9  & ncount10  -> (c7'=0) & (c6'=c6+1) & (c8'=c8+1);
	[s7] can7  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & count8  & ncount9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c6'=c6+1) & (c8'=c8+1);
	[s7] can7  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & count6  & count8  & ncount9  & ncount10  -> (c7'=0) & (c2'=c2+1) & (c6'=c6+1) & (c8'=c8+1);
	[s7] can7  & count1  & count2  & ncount3  & ncount4  & ncount5  & count6  & count8  & ncount9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c8'=c8+1);
	[s7] can7  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & count6  & count8  & ncount9  & ncount10  -> (c7'=0) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1);
	[s7] can7  & count1  & ncount2  & count3  & ncount4  & ncount5  & count6  & count8  & ncount9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1);
	[s7] can7  & ncount1  & count2  & count3  & ncount4  & ncount5  & count6  & count8  & ncount9  & ncount10  -> (c7'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1);
	[s7] can7  & count1  & count2  & count3  & ncount4  & ncount5  & count6  & count8  & ncount9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1);
	[s7] can7  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & count6  & count8  & ncount9  & ncount10  -> (c7'=0) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1);
	[s7] can7  & count1  & ncount2  & ncount3  & count4  & ncount5  & count6  & count8  & ncount9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1);
	[s7] can7  & ncount1  & count2  & ncount3  & count4  & ncount5  & count6  & count8  & ncount9  & ncount10  -> (c7'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1);
	[s7] can7  & count1  & count2  & ncount3  & count4  & ncount5  & count6  & count8  & ncount9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1);
	[s7] can7  & ncount1  & ncount2  & count3  & count4  & ncount5  & count6  & count8  & ncount9  & ncount10  -> (c7'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1);
	[s7] can7  & count1  & ncount2  & count3  & count4  & ncount5  & count6  & count8  & ncount9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1);
	[s7] can7  & ncount1  & count2  & count3  & count4  & ncount5  & count6  & count8  & ncount9  & ncount10  -> (c7'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1);
	[s7] can7  & count1  & count2  & count3  & count4  & ncount5  & count6  & count8  & ncount9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1);
	[s7] can7  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & count6  & count8  & ncount9  & ncount10  -> (c7'=0) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s7] can7  & count1  & ncount2  & ncount3  & ncount4  & count5  & count6  & count8  & ncount9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s7] can7  & ncount1  & count2  & ncount3  & ncount4  & count5  & count6  & count8  & ncount9  & ncount10  -> (c7'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s7] can7  & count1  & count2  & ncount3  & ncount4  & count5  & count6  & count8  & ncount9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s7] can7  & ncount1  & ncount2  & count3  & ncount4  & count5  & count6  & count8  & ncount9  & ncount10  -> (c7'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s7] can7  & count1  & ncount2  & count3  & ncount4  & count5  & count6  & count8  & ncount9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s7] can7  & ncount1  & count2  & count3  & ncount4  & count5  & count6  & count8  & ncount9  & ncount10  -> (c7'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s7] can7  & count1  & count2  & count3  & ncount4  & count5  & count6  & count8  & ncount9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s7] can7  & ncount1  & ncount2  & ncount3  & count4  & count5  & count6  & count8  & ncount9  & ncount10  -> (c7'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s7] can7  & count1  & ncount2  & ncount3  & count4  & count5  & count6  & count8  & ncount9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s7] can7  & ncount1  & count2  & ncount3  & count4  & count5  & count6  & count8  & ncount9  & ncount10  -> (c7'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s7] can7  & count1  & count2  & ncount3  & count4  & count5  & count6  & count8  & ncount9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s7] can7  & ncount1  & ncount2  & count3  & count4  & count5  & count6  & count8  & ncount9  & ncount10  -> (c7'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s7] can7  & count1  & ncount2  & count3  & count4  & count5  & count6  & count8  & ncount9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s7] can7  & ncount1  & count2  & count3  & count4  & count5  & count6  & count8  & ncount9  & ncount10  -> (c7'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s7] can7  & count1  & count2  & count3  & count4  & count5  & count6  & count8  & ncount9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s7] can7  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount8  & count9  & ncount10  -> (c7'=0) & (c9'=c9+1);
	[s7] can7  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount8  & count9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c9'=c9+1);
	[s7] can7  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount8  & count9  & ncount10  -> (c7'=0) & (c2'=c2+1) & (c9'=c9+1);
	[s7] can7  & count1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount8  & count9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c9'=c9+1);
	[s7] can7  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & ncount8  & count9  & ncount10  -> (c7'=0) & (c3'=c3+1) & (c9'=c9+1);
	[s7] can7  & count1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & ncount8  & count9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c3'=c3+1) & (c9'=c9+1);
	[s7] can7  & ncount1  & count2  & count3  & ncount4  & ncount5  & ncount6  & ncount8  & count9  & ncount10  -> (c7'=0) & (c2'=c2+1) & (c3'=c3+1) & (c9'=c9+1);
	[s7] can7  & count1  & count2  & count3  & ncount4  & ncount5  & ncount6  & ncount8  & count9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c9'=c9+1);
	[s7] can7  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & ncount8  & count9  & ncount10  -> (c7'=0) & (c4'=c4+1) & (c9'=c9+1);
	[s7] can7  & count1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & ncount8  & count9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c4'=c4+1) & (c9'=c9+1);
	[s7] can7  & ncount1  & count2  & ncount3  & count4  & ncount5  & ncount6  & ncount8  & count9  & ncount10  -> (c7'=0) & (c2'=c2+1) & (c4'=c4+1) & (c9'=c9+1);
	[s7] can7  & count1  & count2  & ncount3  & count4  & ncount5  & ncount6  & ncount8  & count9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c9'=c9+1);
	[s7] can7  & ncount1  & ncount2  & count3  & count4  & ncount5  & ncount6  & ncount8  & count9  & ncount10  -> (c7'=0) & (c3'=c3+1) & (c4'=c4+1) & (c9'=c9+1);
	[s7] can7  & count1  & ncount2  & count3  & count4  & ncount5  & ncount6  & ncount8  & count9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c9'=c9+1);
	[s7] can7  & ncount1  & count2  & count3  & count4  & ncount5  & ncount6  & ncount8  & count9  & ncount10  -> (c7'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c9'=c9+1);
	[s7] can7  & count1  & count2  & count3  & count4  & ncount5  & ncount6  & ncount8  & count9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c9'=c9+1);
	[s7] can7  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & ncount8  & count9  & ncount10  -> (c7'=0) & (c5'=c5+1) & (c9'=c9+1);
	[s7] can7  & count1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & ncount8  & count9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c5'=c5+1) & (c9'=c9+1);
	[s7] can7  & ncount1  & count2  & ncount3  & ncount4  & count5  & ncount6  & ncount8  & count9  & ncount10  -> (c7'=0) & (c2'=c2+1) & (c5'=c5+1) & (c9'=c9+1);
	[s7] can7  & count1  & count2  & ncount3  & ncount4  & count5  & ncount6  & ncount8  & count9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c9'=c9+1);
	[s7] can7  & ncount1  & ncount2  & count3  & ncount4  & count5  & ncount6  & ncount8  & count9  & ncount10  -> (c7'=0) & (c3'=c3+1) & (c5'=c5+1) & (c9'=c9+1);
	[s7] can7  & count1  & ncount2  & count3  & ncount4  & count5  & ncount6  & ncount8  & count9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c9'=c9+1);
	[s7] can7  & ncount1  & count2  & count3  & ncount4  & count5  & ncount6  & ncount8  & count9  & ncount10  -> (c7'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c9'=c9+1);
	[s7] can7  & count1  & count2  & count3  & ncount4  & count5  & ncount6  & ncount8  & count9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c9'=c9+1);
	[s7] can7  & ncount1  & ncount2  & ncount3  & count4  & count5  & ncount6  & ncount8  & count9  & ncount10  -> (c7'=0) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1);
	[s7] can7  & count1  & ncount2  & ncount3  & count4  & count5  & ncount6  & ncount8  & count9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1);
	[s7] can7  & ncount1  & count2  & ncount3  & count4  & count5  & ncount6  & ncount8  & count9  & ncount10  -> (c7'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1);
	[s7] can7  & count1  & count2  & ncount3  & count4  & count5  & ncount6  & ncount8  & count9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1);
	[s7] can7  & ncount1  & ncount2  & count3  & count4  & count5  & ncount6  & ncount8  & count9  & ncount10  -> (c7'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1);
	[s7] can7  & count1  & ncount2  & count3  & count4  & count5  & ncount6  & ncount8  & count9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1);
	[s7] can7  & ncount1  & count2  & count3  & count4  & count5  & ncount6  & ncount8  & count9  & ncount10  -> (c7'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1);
	[s7] can7  & count1  & count2  & count3  & count4  & count5  & ncount6  & ncount8  & count9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1);
	[s7] can7  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & ncount8  & count9  & ncount10  -> (c7'=0) & (c6'=c6+1) & (c9'=c9+1);
	[s7] can7  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & ncount8  & count9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c6'=c6+1) & (c9'=c9+1);
	[s7] can7  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & count6  & ncount8  & count9  & ncount10  -> (c7'=0) & (c2'=c2+1) & (c6'=c6+1) & (c9'=c9+1);
	[s7] can7  & count1  & count2  & ncount3  & ncount4  & ncount5  & count6  & ncount8  & count9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c9'=c9+1);
	[s7] can7  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & count6  & ncount8  & count9  & ncount10  -> (c7'=0) & (c3'=c3+1) & (c6'=c6+1) & (c9'=c9+1);
	[s7] can7  & count1  & ncount2  & count3  & ncount4  & ncount5  & count6  & ncount8  & count9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c9'=c9+1);
	[s7] can7  & ncount1  & count2  & count3  & ncount4  & ncount5  & count6  & ncount8  & count9  & ncount10  -> (c7'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c9'=c9+1);
	[s7] can7  & count1  & count2  & count3  & ncount4  & ncount5  & count6  & ncount8  & count9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c9'=c9+1);
	[s7] can7  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & count6  & ncount8  & count9  & ncount10  -> (c7'=0) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1);
	[s7] can7  & count1  & ncount2  & ncount3  & count4  & ncount5  & count6  & ncount8  & count9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1);
	[s7] can7  & ncount1  & count2  & ncount3  & count4  & ncount5  & count6  & ncount8  & count9  & ncount10  -> (c7'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1);
	[s7] can7  & count1  & count2  & ncount3  & count4  & ncount5  & count6  & ncount8  & count9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1);
	[s7] can7  & ncount1  & ncount2  & count3  & count4  & ncount5  & count6  & ncount8  & count9  & ncount10  -> (c7'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1);
	[s7] can7  & count1  & ncount2  & count3  & count4  & ncount5  & count6  & ncount8  & count9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1);
	[s7] can7  & ncount1  & count2  & count3  & count4  & ncount5  & count6  & ncount8  & count9  & ncount10  -> (c7'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1);
	[s7] can7  & count1  & count2  & count3  & count4  & ncount5  & count6  & ncount8  & count9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1);
	[s7] can7  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & count6  & ncount8  & count9  & ncount10  -> (c7'=0) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s7] can7  & count1  & ncount2  & ncount3  & ncount4  & count5  & count6  & ncount8  & count9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s7] can7  & ncount1  & count2  & ncount3  & ncount4  & count5  & count6  & ncount8  & count9  & ncount10  -> (c7'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s7] can7  & count1  & count2  & ncount3  & ncount4  & count5  & count6  & ncount8  & count9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s7] can7  & ncount1  & ncount2  & count3  & ncount4  & count5  & count6  & ncount8  & count9  & ncount10  -> (c7'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s7] can7  & count1  & ncount2  & count3  & ncount4  & count5  & count6  & ncount8  & count9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s7] can7  & ncount1  & count2  & count3  & ncount4  & count5  & count6  & ncount8  & count9  & ncount10  -> (c7'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s7] can7  & count1  & count2  & count3  & ncount4  & count5  & count6  & ncount8  & count9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s7] can7  & ncount1  & ncount2  & ncount3  & count4  & count5  & count6  & ncount8  & count9  & ncount10  -> (c7'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s7] can7  & count1  & ncount2  & ncount3  & count4  & count5  & count6  & ncount8  & count9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s7] can7  & ncount1  & count2  & ncount3  & count4  & count5  & count6  & ncount8  & count9  & ncount10  -> (c7'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s7] can7  & count1  & count2  & ncount3  & count4  & count5  & count6  & ncount8  & count9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s7] can7  & ncount1  & ncount2  & count3  & count4  & count5  & count6  & ncount8  & count9  & ncount10  -> (c7'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s7] can7  & count1  & ncount2  & count3  & count4  & count5  & count6  & ncount8  & count9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s7] can7  & ncount1  & count2  & count3  & count4  & count5  & count6  & ncount8  & count9  & ncount10  -> (c7'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s7] can7  & count1  & count2  & count3  & count4  & count5  & count6  & ncount8  & count9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s7] can7  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & count8  & count9  & ncount10  -> (c7'=0) & (c8'=c8+1) & (c9'=c9+1);
	[s7] can7  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & count8  & count9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c8'=c8+1) & (c9'=c9+1);
	[s7] can7  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & count8  & count9  & ncount10  -> (c7'=0) & (c2'=c2+1) & (c8'=c8+1) & (c9'=c9+1);
	[s7] can7  & count1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & count8  & count9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c8'=c8+1) & (c9'=c9+1);
	[s7] can7  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & count8  & count9  & ncount10  -> (c7'=0) & (c3'=c3+1) & (c8'=c8+1) & (c9'=c9+1);
	[s7] can7  & count1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & count8  & count9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c3'=c3+1) & (c8'=c8+1) & (c9'=c9+1);
	[s7] can7  & ncount1  & count2  & count3  & ncount4  & ncount5  & ncount6  & count8  & count9  & ncount10  -> (c7'=0) & (c2'=c2+1) & (c3'=c3+1) & (c8'=c8+1) & (c9'=c9+1);
	[s7] can7  & count1  & count2  & count3  & ncount4  & ncount5  & ncount6  & count8  & count9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c8'=c8+1) & (c9'=c9+1);
	[s7] can7  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & count8  & count9  & ncount10  -> (c7'=0) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1);
	[s7] can7  & count1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & count8  & count9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1);
	[s7] can7  & ncount1  & count2  & ncount3  & count4  & ncount5  & ncount6  & count8  & count9  & ncount10  -> (c7'=0) & (c2'=c2+1) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1);
	[s7] can7  & count1  & count2  & ncount3  & count4  & ncount5  & ncount6  & count8  & count9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1);
	[s7] can7  & ncount1  & ncount2  & count3  & count4  & ncount5  & ncount6  & count8  & count9  & ncount10  -> (c7'=0) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1);
	[s7] can7  & count1  & ncount2  & count3  & count4  & ncount5  & ncount6  & count8  & count9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1);
	[s7] can7  & ncount1  & count2  & count3  & count4  & ncount5  & ncount6  & count8  & count9  & ncount10  -> (c7'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1);
	[s7] can7  & count1  & count2  & count3  & count4  & ncount5  & ncount6  & count8  & count9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1);
	[s7] can7  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & count8  & count9  & ncount10  -> (c7'=0) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s7] can7  & count1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & count8  & count9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s7] can7  & ncount1  & count2  & ncount3  & ncount4  & count5  & ncount6  & count8  & count9  & ncount10  -> (c7'=0) & (c2'=c2+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s7] can7  & count1  & count2  & ncount3  & ncount4  & count5  & ncount6  & count8  & count9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s7] can7  & ncount1  & ncount2  & count3  & ncount4  & count5  & ncount6  & count8  & count9  & ncount10  -> (c7'=0) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s7] can7  & count1  & ncount2  & count3  & ncount4  & count5  & ncount6  & count8  & count9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s7] can7  & ncount1  & count2  & count3  & ncount4  & count5  & ncount6  & count8  & count9  & ncount10  -> (c7'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s7] can7  & count1  & count2  & count3  & ncount4  & count5  & ncount6  & count8  & count9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s7] can7  & ncount1  & ncount2  & ncount3  & count4  & count5  & ncount6  & count8  & count9  & ncount10  -> (c7'=0) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s7] can7  & count1  & ncount2  & ncount3  & count4  & count5  & ncount6  & count8  & count9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s7] can7  & ncount1  & count2  & ncount3  & count4  & count5  & ncount6  & count8  & count9  & ncount10  -> (c7'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s7] can7  & count1  & count2  & ncount3  & count4  & count5  & ncount6  & count8  & count9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s7] can7  & ncount1  & ncount2  & count3  & count4  & count5  & ncount6  & count8  & count9  & ncount10  -> (c7'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s7] can7  & count1  & ncount2  & count3  & count4  & count5  & ncount6  & count8  & count9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s7] can7  & ncount1  & count2  & count3  & count4  & count5  & ncount6  & count8  & count9  & ncount10  -> (c7'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s7] can7  & count1  & count2  & count3  & count4  & count5  & ncount6  & count8  & count9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s7] can7  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & count8  & count9  & ncount10  -> (c7'=0) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s7] can7  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & count8  & count9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s7] can7  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & count6  & count8  & count9  & ncount10  -> (c7'=0) & (c2'=c2+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s7] can7  & count1  & count2  & ncount3  & ncount4  & ncount5  & count6  & count8  & count9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s7] can7  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & count6  & count8  & count9  & ncount10  -> (c7'=0) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s7] can7  & count1  & ncount2  & count3  & ncount4  & ncount5  & count6  & count8  & count9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s7] can7  & ncount1  & count2  & count3  & ncount4  & ncount5  & count6  & count8  & count9  & ncount10  -> (c7'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s7] can7  & count1  & count2  & count3  & ncount4  & ncount5  & count6  & count8  & count9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s7] can7  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & count6  & count8  & count9  & ncount10  -> (c7'=0) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s7] can7  & count1  & ncount2  & ncount3  & count4  & ncount5  & count6  & count8  & count9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s7] can7  & ncount1  & count2  & ncount3  & count4  & ncount5  & count6  & count8  & count9  & ncount10  -> (c7'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s7] can7  & count1  & count2  & ncount3  & count4  & ncount5  & count6  & count8  & count9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s7] can7  & ncount1  & ncount2  & count3  & count4  & ncount5  & count6  & count8  & count9  & ncount10  -> (c7'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s7] can7  & count1  & ncount2  & count3  & count4  & ncount5  & count6  & count8  & count9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s7] can7  & ncount1  & count2  & count3  & count4  & ncount5  & count6  & count8  & count9  & ncount10  -> (c7'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s7] can7  & count1  & count2  & count3  & count4  & ncount5  & count6  & count8  & count9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s7] can7  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & count6  & count8  & count9  & ncount10  -> (c7'=0) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s7] can7  & count1  & ncount2  & ncount3  & ncount4  & count5  & count6  & count8  & count9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s7] can7  & ncount1  & count2  & ncount3  & ncount4  & count5  & count6  & count8  & count9  & ncount10  -> (c7'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s7] can7  & count1  & count2  & ncount3  & ncount4  & count5  & count6  & count8  & count9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s7] can7  & ncount1  & ncount2  & count3  & ncount4  & count5  & count6  & count8  & count9  & ncount10  -> (c7'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s7] can7  & count1  & ncount2  & count3  & ncount4  & count5  & count6  & count8  & count9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s7] can7  & ncount1  & count2  & count3  & ncount4  & count5  & count6  & count8  & count9  & ncount10  -> (c7'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s7] can7  & count1  & count2  & count3  & ncount4  & count5  & count6  & count8  & count9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s7] can7  & ncount1  & ncount2  & ncount3  & count4  & count5  & count6  & count8  & count9  & ncount10  -> (c7'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s7] can7  & count1  & ncount2  & ncount3  & count4  & count5  & count6  & count8  & count9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s7] can7  & ncount1  & count2  & ncount3  & count4  & count5  & count6  & count8  & count9  & ncount10  -> (c7'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s7] can7  & count1  & count2  & ncount3  & count4  & count5  & count6  & count8  & count9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s7] can7  & ncount1  & ncount2  & count3  & count4  & count5  & count6  & count8  & count9  & ncount10  -> (c7'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s7] can7  & count1  & ncount2  & count3  & count4  & count5  & count6  & count8  & count9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s7] can7  & ncount1  & count2  & count3  & count4  & count5  & count6  & count8  & count9  & ncount10  -> (c7'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s7] can7  & count1  & count2  & count3  & count4  & count5  & count6  & count8  & count9  & ncount10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s7] can7  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount8  & ncount9  & count10  -> (c7'=0) & (c10'=c10+1);
	[s7] can7  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount8  & ncount9  & count10  -> (c7'=0) & (c1'=c1+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount8  & ncount9  & count10  -> (c7'=0) & (c2'=c2+1) & (c10'=c10+1);
	[s7] can7  & count1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount8  & ncount9  & count10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & ncount8  & ncount9  & count10  -> (c7'=0) & (c3'=c3+1) & (c10'=c10+1);
	[s7] can7  & count1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & ncount8  & ncount9  & count10  -> (c7'=0) & (c1'=c1+1) & (c3'=c3+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & count2  & count3  & ncount4  & ncount5  & ncount6  & ncount8  & ncount9  & count10  -> (c7'=0) & (c2'=c2+1) & (c3'=c3+1) & (c10'=c10+1);
	[s7] can7  & count1  & count2  & count3  & ncount4  & ncount5  & ncount6  & ncount8  & ncount9  & count10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & ncount8  & ncount9  & count10  -> (c7'=0) & (c4'=c4+1) & (c10'=c10+1);
	[s7] can7  & count1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & ncount8  & ncount9  & count10  -> (c7'=0) & (c1'=c1+1) & (c4'=c4+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & count2  & ncount3  & count4  & ncount5  & ncount6  & ncount8  & ncount9  & count10  -> (c7'=0) & (c2'=c2+1) & (c4'=c4+1) & (c10'=c10+1);
	[s7] can7  & count1  & count2  & ncount3  & count4  & ncount5  & ncount6  & ncount8  & ncount9  & count10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & ncount2  & count3  & count4  & ncount5  & ncount6  & ncount8  & ncount9  & count10  -> (c7'=0) & (c3'=c3+1) & (c4'=c4+1) & (c10'=c10+1);
	[s7] can7  & count1  & ncount2  & count3  & count4  & ncount5  & ncount6  & ncount8  & ncount9  & count10  -> (c7'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & count2  & count3  & count4  & ncount5  & ncount6  & ncount8  & ncount9  & count10  -> (c7'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c10'=c10+1);
	[s7] can7  & count1  & count2  & count3  & count4  & ncount5  & ncount6  & ncount8  & ncount9  & count10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & ncount8  & ncount9  & count10  -> (c7'=0) & (c5'=c5+1) & (c10'=c10+1);
	[s7] can7  & count1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & ncount8  & ncount9  & count10  -> (c7'=0) & (c1'=c1+1) & (c5'=c5+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & count2  & ncount3  & ncount4  & count5  & ncount6  & ncount8  & ncount9  & count10  -> (c7'=0) & (c2'=c2+1) & (c5'=c5+1) & (c10'=c10+1);
	[s7] can7  & count1  & count2  & ncount3  & ncount4  & count5  & ncount6  & ncount8  & ncount9  & count10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & ncount2  & count3  & ncount4  & count5  & ncount6  & ncount8  & ncount9  & count10  -> (c7'=0) & (c3'=c3+1) & (c5'=c5+1) & (c10'=c10+1);
	[s7] can7  & count1  & ncount2  & count3  & ncount4  & count5  & ncount6  & ncount8  & ncount9  & count10  -> (c7'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & count2  & count3  & ncount4  & count5  & ncount6  & ncount8  & ncount9  & count10  -> (c7'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c10'=c10+1);
	[s7] can7  & count1  & count2  & count3  & ncount4  & count5  & ncount6  & ncount8  & ncount9  & count10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & ncount2  & ncount3  & count4  & count5  & ncount6  & ncount8  & ncount9  & count10  -> (c7'=0) & (c4'=c4+1) & (c5'=c5+1) & (c10'=c10+1);
	[s7] can7  & count1  & ncount2  & ncount3  & count4  & count5  & ncount6  & ncount8  & ncount9  & count10  -> (c7'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & count2  & ncount3  & count4  & count5  & ncount6  & ncount8  & ncount9  & count10  -> (c7'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c10'=c10+1);
	[s7] can7  & count1  & count2  & ncount3  & count4  & count5  & ncount6  & ncount8  & ncount9  & count10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & ncount2  & count3  & count4  & count5  & ncount6  & ncount8  & ncount9  & count10  -> (c7'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c10'=c10+1);
	[s7] can7  & count1  & ncount2  & count3  & count4  & count5  & ncount6  & ncount8  & ncount9  & count10  -> (c7'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & count2  & count3  & count4  & count5  & ncount6  & ncount8  & ncount9  & count10  -> (c7'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c10'=c10+1);
	[s7] can7  & count1  & count2  & count3  & count4  & count5  & ncount6  & ncount8  & ncount9  & count10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & ncount8  & ncount9  & count10  -> (c7'=0) & (c6'=c6+1) & (c10'=c10+1);
	[s7] can7  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & ncount8  & ncount9  & count10  -> (c7'=0) & (c1'=c1+1) & (c6'=c6+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & count6  & ncount8  & ncount9  & count10  -> (c7'=0) & (c2'=c2+1) & (c6'=c6+1) & (c10'=c10+1);
	[s7] can7  & count1  & count2  & ncount3  & ncount4  & ncount5  & count6  & ncount8  & ncount9  & count10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & count6  & ncount8  & ncount9  & count10  -> (c7'=0) & (c3'=c3+1) & (c6'=c6+1) & (c10'=c10+1);
	[s7] can7  & count1  & ncount2  & count3  & ncount4  & ncount5  & count6  & ncount8  & ncount9  & count10  -> (c7'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & count2  & count3  & ncount4  & ncount5  & count6  & ncount8  & ncount9  & count10  -> (c7'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c10'=c10+1);
	[s7] can7  & count1  & count2  & count3  & ncount4  & ncount5  & count6  & ncount8  & ncount9  & count10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & count6  & ncount8  & ncount9  & count10  -> (c7'=0) & (c4'=c4+1) & (c6'=c6+1) & (c10'=c10+1);
	[s7] can7  & count1  & ncount2  & ncount3  & count4  & ncount5  & count6  & ncount8  & ncount9  & count10  -> (c7'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & count2  & ncount3  & count4  & ncount5  & count6  & ncount8  & ncount9  & count10  -> (c7'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c10'=c10+1);
	[s7] can7  & count1  & count2  & ncount3  & count4  & ncount5  & count6  & ncount8  & ncount9  & count10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & ncount2  & count3  & count4  & ncount5  & count6  & ncount8  & ncount9  & count10  -> (c7'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c10'=c10+1);
	[s7] can7  & count1  & ncount2  & count3  & count4  & ncount5  & count6  & ncount8  & ncount9  & count10  -> (c7'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & count2  & count3  & count4  & ncount5  & count6  & ncount8  & ncount9  & count10  -> (c7'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c10'=c10+1);
	[s7] can7  & count1  & count2  & count3  & count4  & ncount5  & count6  & ncount8  & ncount9  & count10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & count6  & ncount8  & ncount9  & count10  -> (c7'=0) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s7] can7  & count1  & ncount2  & ncount3  & ncount4  & count5  & count6  & ncount8  & ncount9  & count10  -> (c7'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & count2  & ncount3  & ncount4  & count5  & count6  & ncount8  & ncount9  & count10  -> (c7'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s7] can7  & count1  & count2  & ncount3  & ncount4  & count5  & count6  & ncount8  & ncount9  & count10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & ncount2  & count3  & ncount4  & count5  & count6  & ncount8  & ncount9  & count10  -> (c7'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s7] can7  & count1  & ncount2  & count3  & ncount4  & count5  & count6  & ncount8  & ncount9  & count10  -> (c7'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & count2  & count3  & ncount4  & count5  & count6  & ncount8  & ncount9  & count10  -> (c7'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s7] can7  & count1  & count2  & count3  & ncount4  & count5  & count6  & ncount8  & ncount9  & count10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & ncount2  & ncount3  & count4  & count5  & count6  & ncount8  & ncount9  & count10  -> (c7'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s7] can7  & count1  & ncount2  & ncount3  & count4  & count5  & count6  & ncount8  & ncount9  & count10  -> (c7'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & count2  & ncount3  & count4  & count5  & count6  & ncount8  & ncount9  & count10  -> (c7'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s7] can7  & count1  & count2  & ncount3  & count4  & count5  & count6  & ncount8  & ncount9  & count10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & ncount2  & count3  & count4  & count5  & count6  & ncount8  & ncount9  & count10  -> (c7'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s7] can7  & count1  & ncount2  & count3  & count4  & count5  & count6  & ncount8  & ncount9  & count10  -> (c7'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & count2  & count3  & count4  & count5  & count6  & ncount8  & ncount9  & count10  -> (c7'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s7] can7  & count1  & count2  & count3  & count4  & count5  & count6  & ncount8  & ncount9  & count10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & count8  & ncount9  & count10  -> (c7'=0) & (c8'=c8+1) & (c10'=c10+1);
	[s7] can7  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & count8  & ncount9  & count10  -> (c7'=0) & (c1'=c1+1) & (c8'=c8+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & count8  & ncount9  & count10  -> (c7'=0) & (c2'=c2+1) & (c8'=c8+1) & (c10'=c10+1);
	[s7] can7  & count1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & count8  & ncount9  & count10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c8'=c8+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & count8  & ncount9  & count10  -> (c7'=0) & (c3'=c3+1) & (c8'=c8+1) & (c10'=c10+1);
	[s7] can7  & count1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & count8  & ncount9  & count10  -> (c7'=0) & (c1'=c1+1) & (c3'=c3+1) & (c8'=c8+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & count2  & count3  & ncount4  & ncount5  & ncount6  & count8  & ncount9  & count10  -> (c7'=0) & (c2'=c2+1) & (c3'=c3+1) & (c8'=c8+1) & (c10'=c10+1);
	[s7] can7  & count1  & count2  & count3  & ncount4  & ncount5  & ncount6  & count8  & ncount9  & count10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c8'=c8+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & count8  & ncount9  & count10  -> (c7'=0) & (c4'=c4+1) & (c8'=c8+1) & (c10'=c10+1);
	[s7] can7  & count1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & count8  & ncount9  & count10  -> (c7'=0) & (c1'=c1+1) & (c4'=c4+1) & (c8'=c8+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & count2  & ncount3  & count4  & ncount5  & ncount6  & count8  & ncount9  & count10  -> (c7'=0) & (c2'=c2+1) & (c4'=c4+1) & (c8'=c8+1) & (c10'=c10+1);
	[s7] can7  & count1  & count2  & ncount3  & count4  & ncount5  & ncount6  & count8  & ncount9  & count10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c8'=c8+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & ncount2  & count3  & count4  & ncount5  & ncount6  & count8  & ncount9  & count10  -> (c7'=0) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1) & (c10'=c10+1);
	[s7] can7  & count1  & ncount2  & count3  & count4  & ncount5  & ncount6  & count8  & ncount9  & count10  -> (c7'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & count2  & count3  & count4  & ncount5  & ncount6  & count8  & ncount9  & count10  -> (c7'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1) & (c10'=c10+1);
	[s7] can7  & count1  & count2  & count3  & count4  & ncount5  & ncount6  & count8  & ncount9  & count10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & count8  & ncount9  & count10  -> (c7'=0) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s7] can7  & count1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & count8  & ncount9  & count10  -> (c7'=0) & (c1'=c1+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & count2  & ncount3  & ncount4  & count5  & ncount6  & count8  & ncount9  & count10  -> (c7'=0) & (c2'=c2+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s7] can7  & count1  & count2  & ncount3  & ncount4  & count5  & ncount6  & count8  & ncount9  & count10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & ncount2  & count3  & ncount4  & count5  & ncount6  & count8  & ncount9  & count10  -> (c7'=0) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s7] can7  & count1  & ncount2  & count3  & ncount4  & count5  & ncount6  & count8  & ncount9  & count10  -> (c7'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & count2  & count3  & ncount4  & count5  & ncount6  & count8  & ncount9  & count10  -> (c7'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s7] can7  & count1  & count2  & count3  & ncount4  & count5  & ncount6  & count8  & ncount9  & count10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & ncount2  & ncount3  & count4  & count5  & ncount6  & count8  & ncount9  & count10  -> (c7'=0) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s7] can7  & count1  & ncount2  & ncount3  & count4  & count5  & ncount6  & count8  & ncount9  & count10  -> (c7'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & count2  & ncount3  & count4  & count5  & ncount6  & count8  & ncount9  & count10  -> (c7'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s7] can7  & count1  & count2  & ncount3  & count4  & count5  & ncount6  & count8  & ncount9  & count10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & ncount2  & count3  & count4  & count5  & ncount6  & count8  & ncount9  & count10  -> (c7'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s7] can7  & count1  & ncount2  & count3  & count4  & count5  & ncount6  & count8  & ncount9  & count10  -> (c7'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & count2  & count3  & count4  & count5  & ncount6  & count8  & ncount9  & count10  -> (c7'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s7] can7  & count1  & count2  & count3  & count4  & count5  & ncount6  & count8  & ncount9  & count10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & count8  & ncount9  & count10  -> (c7'=0) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s7] can7  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & count8  & ncount9  & count10  -> (c7'=0) & (c1'=c1+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & count6  & count8  & ncount9  & count10  -> (c7'=0) & (c2'=c2+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s7] can7  & count1  & count2  & ncount3  & ncount4  & ncount5  & count6  & count8  & ncount9  & count10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & count6  & count8  & ncount9  & count10  -> (c7'=0) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s7] can7  & count1  & ncount2  & count3  & ncount4  & ncount5  & count6  & count8  & ncount9  & count10  -> (c7'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & count2  & count3  & ncount4  & ncount5  & count6  & count8  & ncount9  & count10  -> (c7'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s7] can7  & count1  & count2  & count3  & ncount4  & ncount5  & count6  & count8  & ncount9  & count10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & count6  & count8  & ncount9  & count10  -> (c7'=0) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s7] can7  & count1  & ncount2  & ncount3  & count4  & ncount5  & count6  & count8  & ncount9  & count10  -> (c7'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & count2  & ncount3  & count4  & ncount5  & count6  & count8  & ncount9  & count10  -> (c7'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s7] can7  & count1  & count2  & ncount3  & count4  & ncount5  & count6  & count8  & ncount9  & count10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & ncount2  & count3  & count4  & ncount5  & count6  & count8  & ncount9  & count10  -> (c7'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s7] can7  & count1  & ncount2  & count3  & count4  & ncount5  & count6  & count8  & ncount9  & count10  -> (c7'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & count2  & count3  & count4  & ncount5  & count6  & count8  & ncount9  & count10  -> (c7'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s7] can7  & count1  & count2  & count3  & count4  & ncount5  & count6  & count8  & ncount9  & count10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & count6  & count8  & ncount9  & count10  -> (c7'=0) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s7] can7  & count1  & ncount2  & ncount3  & ncount4  & count5  & count6  & count8  & ncount9  & count10  -> (c7'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & count2  & ncount3  & ncount4  & count5  & count6  & count8  & ncount9  & count10  -> (c7'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s7] can7  & count1  & count2  & ncount3  & ncount4  & count5  & count6  & count8  & ncount9  & count10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & ncount2  & count3  & ncount4  & count5  & count6  & count8  & ncount9  & count10  -> (c7'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s7] can7  & count1  & ncount2  & count3  & ncount4  & count5  & count6  & count8  & ncount9  & count10  -> (c7'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & count2  & count3  & ncount4  & count5  & count6  & count8  & ncount9  & count10  -> (c7'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s7] can7  & count1  & count2  & count3  & ncount4  & count5  & count6  & count8  & ncount9  & count10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & ncount2  & ncount3  & count4  & count5  & count6  & count8  & ncount9  & count10  -> (c7'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s7] can7  & count1  & ncount2  & ncount3  & count4  & count5  & count6  & count8  & ncount9  & count10  -> (c7'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & count2  & ncount3  & count4  & count5  & count6  & count8  & ncount9  & count10  -> (c7'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s7] can7  & count1  & count2  & ncount3  & count4  & count5  & count6  & count8  & ncount9  & count10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & ncount2  & count3  & count4  & count5  & count6  & count8  & ncount9  & count10  -> (c7'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s7] can7  & count1  & ncount2  & count3  & count4  & count5  & count6  & count8  & ncount9  & count10  -> (c7'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & count2  & count3  & count4  & count5  & count6  & count8  & ncount9  & count10  -> (c7'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s7] can7  & count1  & count2  & count3  & count4  & count5  & count6  & count8  & ncount9  & count10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount8  & count9  & count10  -> (c7'=0) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount8  & count9  & count10  -> (c7'=0) & (c1'=c1+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount8  & count9  & count10  -> (c7'=0) & (c2'=c2+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & count1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount8  & count9  & count10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & ncount8  & count9  & count10  -> (c7'=0) & (c3'=c3+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & count1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & ncount8  & count9  & count10  -> (c7'=0) & (c1'=c1+1) & (c3'=c3+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & count2  & count3  & ncount4  & ncount5  & ncount6  & ncount8  & count9  & count10  -> (c7'=0) & (c2'=c2+1) & (c3'=c3+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & count1  & count2  & count3  & ncount4  & ncount5  & ncount6  & ncount8  & count9  & count10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & ncount8  & count9  & count10  -> (c7'=0) & (c4'=c4+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & count1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & ncount8  & count9  & count10  -> (c7'=0) & (c1'=c1+1) & (c4'=c4+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & count2  & ncount3  & count4  & ncount5  & ncount6  & ncount8  & count9  & count10  -> (c7'=0) & (c2'=c2+1) & (c4'=c4+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & count1  & count2  & ncount3  & count4  & ncount5  & ncount6  & ncount8  & count9  & count10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & ncount2  & count3  & count4  & ncount5  & ncount6  & ncount8  & count9  & count10  -> (c7'=0) & (c3'=c3+1) & (c4'=c4+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & count1  & ncount2  & count3  & count4  & ncount5  & ncount6  & ncount8  & count9  & count10  -> (c7'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & count2  & count3  & count4  & ncount5  & ncount6  & ncount8  & count9  & count10  -> (c7'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & count1  & count2  & count3  & count4  & ncount5  & ncount6  & ncount8  & count9  & count10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & ncount8  & count9  & count10  -> (c7'=0) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & count1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & ncount8  & count9  & count10  -> (c7'=0) & (c1'=c1+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & count2  & ncount3  & ncount4  & count5  & ncount6  & ncount8  & count9  & count10  -> (c7'=0) & (c2'=c2+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & count1  & count2  & ncount3  & ncount4  & count5  & ncount6  & ncount8  & count9  & count10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & ncount2  & count3  & ncount4  & count5  & ncount6  & ncount8  & count9  & count10  -> (c7'=0) & (c3'=c3+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & count1  & ncount2  & count3  & ncount4  & count5  & ncount6  & ncount8  & count9  & count10  -> (c7'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & count2  & count3  & ncount4  & count5  & ncount6  & ncount8  & count9  & count10  -> (c7'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & count1  & count2  & count3  & ncount4  & count5  & ncount6  & ncount8  & count9  & count10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & ncount2  & ncount3  & count4  & count5  & ncount6  & ncount8  & count9  & count10  -> (c7'=0) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & count1  & ncount2  & ncount3  & count4  & count5  & ncount6  & ncount8  & count9  & count10  -> (c7'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & count2  & ncount3  & count4  & count5  & ncount6  & ncount8  & count9  & count10  -> (c7'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & count1  & count2  & ncount3  & count4  & count5  & ncount6  & ncount8  & count9  & count10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & ncount2  & count3  & count4  & count5  & ncount6  & ncount8  & count9  & count10  -> (c7'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & count1  & ncount2  & count3  & count4  & count5  & ncount6  & ncount8  & count9  & count10  -> (c7'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & count2  & count3  & count4  & count5  & ncount6  & ncount8  & count9  & count10  -> (c7'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & count1  & count2  & count3  & count4  & count5  & ncount6  & ncount8  & count9  & count10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & ncount8  & count9  & count10  -> (c7'=0) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & ncount8  & count9  & count10  -> (c7'=0) & (c1'=c1+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & count6  & ncount8  & count9  & count10  -> (c7'=0) & (c2'=c2+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & count1  & count2  & ncount3  & ncount4  & ncount5  & count6  & ncount8  & count9  & count10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & count6  & ncount8  & count9  & count10  -> (c7'=0) & (c3'=c3+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & count1  & ncount2  & count3  & ncount4  & ncount5  & count6  & ncount8  & count9  & count10  -> (c7'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & count2  & count3  & ncount4  & ncount5  & count6  & ncount8  & count9  & count10  -> (c7'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & count1  & count2  & count3  & ncount4  & ncount5  & count6  & ncount8  & count9  & count10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & count6  & ncount8  & count9  & count10  -> (c7'=0) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & count1  & ncount2  & ncount3  & count4  & ncount5  & count6  & ncount8  & count9  & count10  -> (c7'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & count2  & ncount3  & count4  & ncount5  & count6  & ncount8  & count9  & count10  -> (c7'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & count1  & count2  & ncount3  & count4  & ncount5  & count6  & ncount8  & count9  & count10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & ncount2  & count3  & count4  & ncount5  & count6  & ncount8  & count9  & count10  -> (c7'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & count1  & ncount2  & count3  & count4  & ncount5  & count6  & ncount8  & count9  & count10  -> (c7'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & count2  & count3  & count4  & ncount5  & count6  & ncount8  & count9  & count10  -> (c7'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & count1  & count2  & count3  & count4  & ncount5  & count6  & ncount8  & count9  & count10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & count6  & ncount8  & count9  & count10  -> (c7'=0) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & count1  & ncount2  & ncount3  & ncount4  & count5  & count6  & ncount8  & count9  & count10  -> (c7'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & count2  & ncount3  & ncount4  & count5  & count6  & ncount8  & count9  & count10  -> (c7'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & count1  & count2  & ncount3  & ncount4  & count5  & count6  & ncount8  & count9  & count10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & ncount2  & count3  & ncount4  & count5  & count6  & ncount8  & count9  & count10  -> (c7'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & count1  & ncount2  & count3  & ncount4  & count5  & count6  & ncount8  & count9  & count10  -> (c7'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & count2  & count3  & ncount4  & count5  & count6  & ncount8  & count9  & count10  -> (c7'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & count1  & count2  & count3  & ncount4  & count5  & count6  & ncount8  & count9  & count10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & ncount2  & ncount3  & count4  & count5  & count6  & ncount8  & count9  & count10  -> (c7'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & count1  & ncount2  & ncount3  & count4  & count5  & count6  & ncount8  & count9  & count10  -> (c7'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & count2  & ncount3  & count4  & count5  & count6  & ncount8  & count9  & count10  -> (c7'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & count1  & count2  & ncount3  & count4  & count5  & count6  & ncount8  & count9  & count10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & ncount2  & count3  & count4  & count5  & count6  & ncount8  & count9  & count10  -> (c7'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & count1  & ncount2  & count3  & count4  & count5  & count6  & ncount8  & count9  & count10  -> (c7'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & count2  & count3  & count4  & count5  & count6  & ncount8  & count9  & count10  -> (c7'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & count1  & count2  & count3  & count4  & count5  & count6  & ncount8  & count9  & count10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & count8  & count9  & count10  -> (c7'=0) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & count8  & count9  & count10  -> (c7'=0) & (c1'=c1+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & count8  & count9  & count10  -> (c7'=0) & (c2'=c2+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & count1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & count8  & count9  & count10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & count8  & count9  & count10  -> (c7'=0) & (c3'=c3+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & count1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & count8  & count9  & count10  -> (c7'=0) & (c1'=c1+1) & (c3'=c3+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & count2  & count3  & ncount4  & ncount5  & ncount6  & count8  & count9  & count10  -> (c7'=0) & (c2'=c2+1) & (c3'=c3+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & count1  & count2  & count3  & ncount4  & ncount5  & ncount6  & count8  & count9  & count10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & count8  & count9  & count10  -> (c7'=0) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & count1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & count8  & count9  & count10  -> (c7'=0) & (c1'=c1+1) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & count2  & ncount3  & count4  & ncount5  & ncount6  & count8  & count9  & count10  -> (c7'=0) & (c2'=c2+1) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & count1  & count2  & ncount3  & count4  & ncount5  & ncount6  & count8  & count9  & count10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & ncount2  & count3  & count4  & ncount5  & ncount6  & count8  & count9  & count10  -> (c7'=0) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & count1  & ncount2  & count3  & count4  & ncount5  & ncount6  & count8  & count9  & count10  -> (c7'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & count2  & count3  & count4  & ncount5  & ncount6  & count8  & count9  & count10  -> (c7'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & count1  & count2  & count3  & count4  & ncount5  & ncount6  & count8  & count9  & count10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & count8  & count9  & count10  -> (c7'=0) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & count1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & count8  & count9  & count10  -> (c7'=0) & (c1'=c1+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & count2  & ncount3  & ncount4  & count5  & ncount6  & count8  & count9  & count10  -> (c7'=0) & (c2'=c2+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & count1  & count2  & ncount3  & ncount4  & count5  & ncount6  & count8  & count9  & count10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & ncount2  & count3  & ncount4  & count5  & ncount6  & count8  & count9  & count10  -> (c7'=0) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & count1  & ncount2  & count3  & ncount4  & count5  & ncount6  & count8  & count9  & count10  -> (c7'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & count2  & count3  & ncount4  & count5  & ncount6  & count8  & count9  & count10  -> (c7'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & count1  & count2  & count3  & ncount4  & count5  & ncount6  & count8  & count9  & count10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & ncount2  & ncount3  & count4  & count5  & ncount6  & count8  & count9  & count10  -> (c7'=0) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & count1  & ncount2  & ncount3  & count4  & count5  & ncount6  & count8  & count9  & count10  -> (c7'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & count2  & ncount3  & count4  & count5  & ncount6  & count8  & count9  & count10  -> (c7'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & count1  & count2  & ncount3  & count4  & count5  & ncount6  & count8  & count9  & count10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & ncount2  & count3  & count4  & count5  & ncount6  & count8  & count9  & count10  -> (c7'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & count1  & ncount2  & count3  & count4  & count5  & ncount6  & count8  & count9  & count10  -> (c7'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & count2  & count3  & count4  & count5  & ncount6  & count8  & count9  & count10  -> (c7'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & count1  & count2  & count3  & count4  & count5  & ncount6  & count8  & count9  & count10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & count8  & count9  & count10  -> (c7'=0) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & count8  & count9  & count10  -> (c7'=0) & (c1'=c1+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & count6  & count8  & count9  & count10  -> (c7'=0) & (c2'=c2+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & count1  & count2  & ncount3  & ncount4  & ncount5  & count6  & count8  & count9  & count10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & count6  & count8  & count9  & count10  -> (c7'=0) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & count1  & ncount2  & count3  & ncount4  & ncount5  & count6  & count8  & count9  & count10  -> (c7'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & count2  & count3  & ncount4  & ncount5  & count6  & count8  & count9  & count10  -> (c7'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & count1  & count2  & count3  & ncount4  & ncount5  & count6  & count8  & count9  & count10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & count6  & count8  & count9  & count10  -> (c7'=0) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & count1  & ncount2  & ncount3  & count4  & ncount5  & count6  & count8  & count9  & count10  -> (c7'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & count2  & ncount3  & count4  & ncount5  & count6  & count8  & count9  & count10  -> (c7'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & count1  & count2  & ncount3  & count4  & ncount5  & count6  & count8  & count9  & count10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & ncount2  & count3  & count4  & ncount5  & count6  & count8  & count9  & count10  -> (c7'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & count1  & ncount2  & count3  & count4  & ncount5  & count6  & count8  & count9  & count10  -> (c7'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & count2  & count3  & count4  & ncount5  & count6  & count8  & count9  & count10  -> (c7'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & count1  & count2  & count3  & count4  & ncount5  & count6  & count8  & count9  & count10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & count6  & count8  & count9  & count10  -> (c7'=0) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & count1  & ncount2  & ncount3  & ncount4  & count5  & count6  & count8  & count9  & count10  -> (c7'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & count2  & ncount3  & ncount4  & count5  & count6  & count8  & count9  & count10  -> (c7'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & count1  & count2  & ncount3  & ncount4  & count5  & count6  & count8  & count9  & count10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & ncount2  & count3  & ncount4  & count5  & count6  & count8  & count9  & count10  -> (c7'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & count1  & ncount2  & count3  & ncount4  & count5  & count6  & count8  & count9  & count10  -> (c7'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & count2  & count3  & ncount4  & count5  & count6  & count8  & count9  & count10  -> (c7'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & count1  & count2  & count3  & ncount4  & count5  & count6  & count8  & count9  & count10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & ncount2  & ncount3  & count4  & count5  & count6  & count8  & count9  & count10  -> (c7'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & count1  & ncount2  & ncount3  & count4  & count5  & count6  & count8  & count9  & count10  -> (c7'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & count2  & ncount3  & count4  & count5  & count6  & count8  & count9  & count10  -> (c7'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & count1  & count2  & ncount3  & count4  & count5  & count6  & count8  & count9  & count10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & ncount2  & count3  & count4  & count5  & count6  & count8  & count9  & count10  -> (c7'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & count1  & ncount2  & count3  & count4  & count5  & count6  & count8  & count9  & count10  -> (c7'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & ncount1  & count2  & count3  & count4  & count5  & count6  & count8  & count9  & count10  -> (c7'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s7] can7  & count1  & count2  & count3  & count4  & count5  & count6  & count8  & count9  & count10  -> (c7'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount9  & ncount10  -> (c8'=0);
	[s8] can8  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount9  & ncount10  -> (c8'=0) & (c1'=c1+1);
	[s8] can8  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount9  & ncount10  -> (c8'=0) & (c2'=c2+1);
	[s8] can8  & count1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1);
	[s8] can8  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount9  & ncount10  -> (c8'=0) & (c3'=c3+1);
	[s8] can8  & count1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c3'=c3+1);
	[s8] can8  & ncount1  & count2  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount9  & ncount10  -> (c8'=0) & (c2'=c2+1) & (c3'=c3+1);
	[s8] can8  & count1  & count2  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1);
	[s8] can8  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & ncount9  & ncount10  -> (c8'=0) & (c4'=c4+1);
	[s8] can8  & count1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & ncount9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c4'=c4+1);
	[s8] can8  & ncount1  & count2  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & ncount9  & ncount10  -> (c8'=0) & (c2'=c2+1) & (c4'=c4+1);
	[s8] can8  & count1  & count2  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & ncount9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1);
	[s8] can8  & ncount1  & ncount2  & count3  & count4  & ncount5  & ncount6  & ncount7  & ncount9  & ncount10  -> (c8'=0) & (c3'=c3+1) & (c4'=c4+1);
	[s8] can8  & count1  & ncount2  & count3  & count4  & ncount5  & ncount6  & ncount7  & ncount9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1);
	[s8] can8  & ncount1  & count2  & count3  & count4  & ncount5  & ncount6  & ncount7  & ncount9  & ncount10  -> (c8'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1);
	[s8] can8  & count1  & count2  & count3  & count4  & ncount5  & ncount6  & ncount7  & ncount9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1);
	[s8] can8  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & ncount9  & ncount10  -> (c8'=0) & (c5'=c5+1);
	[s8] can8  & count1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & ncount9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c5'=c5+1);
	[s8] can8  & ncount1  & count2  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & ncount9  & ncount10  -> (c8'=0) & (c2'=c2+1) & (c5'=c5+1);
	[s8] can8  & count1  & count2  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & ncount9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1);
	[s8] can8  & ncount1  & ncount2  & count3  & ncount4  & count5  & ncount6  & ncount7  & ncount9  & ncount10  -> (c8'=0) & (c3'=c3+1) & (c5'=c5+1);
	[s8] can8  & count1  & ncount2  & count3  & ncount4  & count5  & ncount6  & ncount7  & ncount9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1);
	[s8] can8  & ncount1  & count2  & count3  & ncount4  & count5  & ncount6  & ncount7  & ncount9  & ncount10  -> (c8'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1);
	[s8] can8  & count1  & count2  & count3  & ncount4  & count5  & ncount6  & ncount7  & ncount9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1);
	[s8] can8  & ncount1  & ncount2  & ncount3  & count4  & count5  & ncount6  & ncount7  & ncount9  & ncount10  -> (c8'=0) & (c4'=c4+1) & (c5'=c5+1);
	[s8] can8  & count1  & ncount2  & ncount3  & count4  & count5  & ncount6  & ncount7  & ncount9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1);
	[s8] can8  & ncount1  & count2  & ncount3  & count4  & count5  & ncount6  & ncount7  & ncount9  & ncount10  -> (c8'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1);
	[s8] can8  & count1  & count2  & ncount3  & count4  & count5  & ncount6  & ncount7  & ncount9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1);
	[s8] can8  & ncount1  & ncount2  & count3  & count4  & count5  & ncount6  & ncount7  & ncount9  & ncount10  -> (c8'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1);
	[s8] can8  & count1  & ncount2  & count3  & count4  & count5  & ncount6  & ncount7  & ncount9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1);
	[s8] can8  & ncount1  & count2  & count3  & count4  & count5  & ncount6  & ncount7  & ncount9  & ncount10  -> (c8'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1);
	[s8] can8  & count1  & count2  & count3  & count4  & count5  & ncount6  & ncount7  & ncount9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1);
	[s8] can8  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & ncount9  & ncount10  -> (c8'=0) & (c6'=c6+1);
	[s8] can8  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & ncount9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c6'=c6+1);
	[s8] can8  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & ncount9  & ncount10  -> (c8'=0) & (c2'=c2+1) & (c6'=c6+1);
	[s8] can8  & count1  & count2  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & ncount9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1);
	[s8] can8  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & count6  & ncount7  & ncount9  & ncount10  -> (c8'=0) & (c3'=c3+1) & (c6'=c6+1);
	[s8] can8  & count1  & ncount2  & count3  & ncount4  & ncount5  & count6  & ncount7  & ncount9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1);
	[s8] can8  & ncount1  & count2  & count3  & ncount4  & ncount5  & count6  & ncount7  & ncount9  & ncount10  -> (c8'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1);
	[s8] can8  & count1  & count2  & count3  & ncount4  & ncount5  & count6  & ncount7  & ncount9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1);
	[s8] can8  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & count6  & ncount7  & ncount9  & ncount10  -> (c8'=0) & (c4'=c4+1) & (c6'=c6+1);
	[s8] can8  & count1  & ncount2  & ncount3  & count4  & ncount5  & count6  & ncount7  & ncount9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1);
	[s8] can8  & ncount1  & count2  & ncount3  & count4  & ncount5  & count6  & ncount7  & ncount9  & ncount10  -> (c8'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1);
	[s8] can8  & count1  & count2  & ncount3  & count4  & ncount5  & count6  & ncount7  & ncount9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1);
	[s8] can8  & ncount1  & ncount2  & count3  & count4  & ncount5  & count6  & ncount7  & ncount9  & ncount10  -> (c8'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1);
	[s8] can8  & count1  & ncount2  & count3  & count4  & ncount5  & count6  & ncount7  & ncount9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1);
	[s8] can8  & ncount1  & count2  & count3  & count4  & ncount5  & count6  & ncount7  & ncount9  & ncount10  -> (c8'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1);
	[s8] can8  & count1  & count2  & count3  & count4  & ncount5  & count6  & ncount7  & ncount9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1);
	[s8] can8  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & count6  & ncount7  & ncount9  & ncount10  -> (c8'=0) & (c5'=c5+1) & (c6'=c6+1);
	[s8] can8  & count1  & ncount2  & ncount3  & ncount4  & count5  & count6  & ncount7  & ncount9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1);
	[s8] can8  & ncount1  & count2  & ncount3  & ncount4  & count5  & count6  & ncount7  & ncount9  & ncount10  -> (c8'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1);
	[s8] can8  & count1  & count2  & ncount3  & ncount4  & count5  & count6  & ncount7  & ncount9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1);
	[s8] can8  & ncount1  & ncount2  & count3  & ncount4  & count5  & count6  & ncount7  & ncount9  & ncount10  -> (c8'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1);
	[s8] can8  & count1  & ncount2  & count3  & ncount4  & count5  & count6  & ncount7  & ncount9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1);
	[s8] can8  & ncount1  & count2  & count3  & ncount4  & count5  & count6  & ncount7  & ncount9  & ncount10  -> (c8'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1);
	[s8] can8  & count1  & count2  & count3  & ncount4  & count5  & count6  & ncount7  & ncount9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1);
	[s8] can8  & ncount1  & ncount2  & ncount3  & count4  & count5  & count6  & ncount7  & ncount9  & ncount10  -> (c8'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1);
	[s8] can8  & count1  & ncount2  & ncount3  & count4  & count5  & count6  & ncount7  & ncount9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1);
	[s8] can8  & ncount1  & count2  & ncount3  & count4  & count5  & count6  & ncount7  & ncount9  & ncount10  -> (c8'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1);
	[s8] can8  & count1  & count2  & ncount3  & count4  & count5  & count6  & ncount7  & ncount9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1);
	[s8] can8  & ncount1  & ncount2  & count3  & count4  & count5  & count6  & ncount7  & ncount9  & ncount10  -> (c8'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1);
	[s8] can8  & count1  & ncount2  & count3  & count4  & count5  & count6  & ncount7  & ncount9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1);
	[s8] can8  & ncount1  & count2  & count3  & count4  & count5  & count6  & ncount7  & ncount9  & ncount10  -> (c8'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1);
	[s8] can8  & count1  & count2  & count3  & count4  & count5  & count6  & ncount7  & ncount9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1);
	[s8] can8  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & ncount9  & ncount10  -> (c8'=0) & (c7'=c7+1);
	[s8] can8  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & ncount9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c7'=c7+1);
	[s8] can8  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & ncount9  & ncount10  -> (c8'=0) & (c2'=c2+1) & (c7'=c7+1);
	[s8] can8  & count1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & ncount9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c7'=c7+1);
	[s8] can8  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & count7  & ncount9  & ncount10  -> (c8'=0) & (c3'=c3+1) & (c7'=c7+1);
	[s8] can8  & count1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & count7  & ncount9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c3'=c3+1) & (c7'=c7+1);
	[s8] can8  & ncount1  & count2  & count3  & ncount4  & ncount5  & ncount6  & count7  & ncount9  & ncount10  -> (c8'=0) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1);
	[s8] can8  & count1  & count2  & count3  & ncount4  & ncount5  & ncount6  & count7  & ncount9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1);
	[s8] can8  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & count7  & ncount9  & ncount10  -> (c8'=0) & (c4'=c4+1) & (c7'=c7+1);
	[s8] can8  & count1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & count7  & ncount9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c4'=c4+1) & (c7'=c7+1);
	[s8] can8  & ncount1  & count2  & ncount3  & count4  & ncount5  & ncount6  & count7  & ncount9  & ncount10  -> (c8'=0) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1);
	[s8] can8  & count1  & count2  & ncount3  & count4  & ncount5  & ncount6  & count7  & ncount9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1);
	[s8] can8  & ncount1  & ncount2  & count3  & count4  & ncount5  & ncount6  & count7  & ncount9  & ncount10  -> (c8'=0) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1);
	[s8] can8  & count1  & ncount2  & count3  & count4  & ncount5  & ncount6  & count7  & ncount9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1);
	[s8] can8  & ncount1  & count2  & count3  & count4  & ncount5  & ncount6  & count7  & ncount9  & ncount10  -> (c8'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1);
	[s8] can8  & count1  & count2  & count3  & count4  & ncount5  & ncount6  & count7  & ncount9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1);
	[s8] can8  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & count7  & ncount9  & ncount10  -> (c8'=0) & (c5'=c5+1) & (c7'=c7+1);
	[s8] can8  & count1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & count7  & ncount9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c5'=c5+1) & (c7'=c7+1);
	[s8] can8  & ncount1  & count2  & ncount3  & ncount4  & count5  & ncount6  & count7  & ncount9  & ncount10  -> (c8'=0) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1);
	[s8] can8  & count1  & count2  & ncount3  & ncount4  & count5  & ncount6  & count7  & ncount9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1);
	[s8] can8  & ncount1  & ncount2  & count3  & ncount4  & count5  & ncount6  & count7  & ncount9  & ncount10  -> (c8'=0) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1);
	[s8] can8  & count1  & ncount2  & count3  & ncount4  & count5  & ncount6  & count7  & ncount9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1);
	[s8] can8  & ncount1  & count2  & count3  & ncount4  & count5  & ncount6  & count7  & ncount9  & ncount10  -> (c8'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1);
	[s8] can8  & count1  & count2  & count3  & ncount4  & count5  & ncount6  & count7  & ncount9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1);
	[s8] can8  & ncount1  & ncount2  & ncount3  & count4  & count5  & ncount6  & count7  & ncount9  & ncount10  -> (c8'=0) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1);
	[s8] can8  & count1  & ncount2  & ncount3  & count4  & count5  & ncount6  & count7  & ncount9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1);
	[s8] can8  & ncount1  & count2  & ncount3  & count4  & count5  & ncount6  & count7  & ncount9  & ncount10  -> (c8'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1);
	[s8] can8  & count1  & count2  & ncount3  & count4  & count5  & ncount6  & count7  & ncount9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1);
	[s8] can8  & ncount1  & ncount2  & count3  & count4  & count5  & ncount6  & count7  & ncount9  & ncount10  -> (c8'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1);
	[s8] can8  & count1  & ncount2  & count3  & count4  & count5  & ncount6  & count7  & ncount9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1);
	[s8] can8  & ncount1  & count2  & count3  & count4  & count5  & ncount6  & count7  & ncount9  & ncount10  -> (c8'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1);
	[s8] can8  & count1  & count2  & count3  & count4  & count5  & ncount6  & count7  & ncount9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1);
	[s8] can8  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & count7  & ncount9  & ncount10  -> (c8'=0) & (c6'=c6+1) & (c7'=c7+1);
	[s8] can8  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & count7  & ncount9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c6'=c6+1) & (c7'=c7+1);
	[s8] can8  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & count6  & count7  & ncount9  & ncount10  -> (c8'=0) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1);
	[s8] can8  & count1  & count2  & ncount3  & ncount4  & ncount5  & count6  & count7  & ncount9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1);
	[s8] can8  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & count6  & count7  & ncount9  & ncount10  -> (c8'=0) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1);
	[s8] can8  & count1  & ncount2  & count3  & ncount4  & ncount5  & count6  & count7  & ncount9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1);
	[s8] can8  & ncount1  & count2  & count3  & ncount4  & ncount5  & count6  & count7  & ncount9  & ncount10  -> (c8'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1);
	[s8] can8  & count1  & count2  & count3  & ncount4  & ncount5  & count6  & count7  & ncount9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1);
	[s8] can8  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & count6  & count7  & ncount9  & ncount10  -> (c8'=0) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1);
	[s8] can8  & count1  & ncount2  & ncount3  & count4  & ncount5  & count6  & count7  & ncount9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1);
	[s8] can8  & ncount1  & count2  & ncount3  & count4  & ncount5  & count6  & count7  & ncount9  & ncount10  -> (c8'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1);
	[s8] can8  & count1  & count2  & ncount3  & count4  & ncount5  & count6  & count7  & ncount9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1);
	[s8] can8  & ncount1  & ncount2  & count3  & count4  & ncount5  & count6  & count7  & ncount9  & ncount10  -> (c8'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1);
	[s8] can8  & count1  & ncount2  & count3  & count4  & ncount5  & count6  & count7  & ncount9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1);
	[s8] can8  & ncount1  & count2  & count3  & count4  & ncount5  & count6  & count7  & ncount9  & ncount10  -> (c8'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1);
	[s8] can8  & count1  & count2  & count3  & count4  & ncount5  & count6  & count7  & ncount9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1);
	[s8] can8  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & count6  & count7  & ncount9  & ncount10  -> (c8'=0) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s8] can8  & count1  & ncount2  & ncount3  & ncount4  & count5  & count6  & count7  & ncount9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s8] can8  & ncount1  & count2  & ncount3  & ncount4  & count5  & count6  & count7  & ncount9  & ncount10  -> (c8'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s8] can8  & count1  & count2  & ncount3  & ncount4  & count5  & count6  & count7  & ncount9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s8] can8  & ncount1  & ncount2  & count3  & ncount4  & count5  & count6  & count7  & ncount9  & ncount10  -> (c8'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s8] can8  & count1  & ncount2  & count3  & ncount4  & count5  & count6  & count7  & ncount9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s8] can8  & ncount1  & count2  & count3  & ncount4  & count5  & count6  & count7  & ncount9  & ncount10  -> (c8'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s8] can8  & count1  & count2  & count3  & ncount4  & count5  & count6  & count7  & ncount9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s8] can8  & ncount1  & ncount2  & ncount3  & count4  & count5  & count6  & count7  & ncount9  & ncount10  -> (c8'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s8] can8  & count1  & ncount2  & ncount3  & count4  & count5  & count6  & count7  & ncount9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s8] can8  & ncount1  & count2  & ncount3  & count4  & count5  & count6  & count7  & ncount9  & ncount10  -> (c8'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s8] can8  & count1  & count2  & ncount3  & count4  & count5  & count6  & count7  & ncount9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s8] can8  & ncount1  & ncount2  & count3  & count4  & count5  & count6  & count7  & ncount9  & ncount10  -> (c8'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s8] can8  & count1  & ncount2  & count3  & count4  & count5  & count6  & count7  & ncount9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s8] can8  & ncount1  & count2  & count3  & count4  & count5  & count6  & count7  & ncount9  & ncount10  -> (c8'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s8] can8  & count1  & count2  & count3  & count4  & count5  & count6  & count7  & ncount9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s8] can8  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & count9  & ncount10  -> (c8'=0) & (c9'=c9+1);
	[s8] can8  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & count9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c9'=c9+1);
	[s8] can8  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & count9  & ncount10  -> (c8'=0) & (c2'=c2+1) & (c9'=c9+1);
	[s8] can8  & count1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & count9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c9'=c9+1);
	[s8] can8  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & count9  & ncount10  -> (c8'=0) & (c3'=c3+1) & (c9'=c9+1);
	[s8] can8  & count1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & count9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c3'=c3+1) & (c9'=c9+1);
	[s8] can8  & ncount1  & count2  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & count9  & ncount10  -> (c8'=0) & (c2'=c2+1) & (c3'=c3+1) & (c9'=c9+1);
	[s8] can8  & count1  & count2  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & count9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c9'=c9+1);
	[s8] can8  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & count9  & ncount10  -> (c8'=0) & (c4'=c4+1) & (c9'=c9+1);
	[s8] can8  & count1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & count9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c4'=c4+1) & (c9'=c9+1);
	[s8] can8  & ncount1  & count2  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & count9  & ncount10  -> (c8'=0) & (c2'=c2+1) & (c4'=c4+1) & (c9'=c9+1);
	[s8] can8  & count1  & count2  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & count9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c9'=c9+1);
	[s8] can8  & ncount1  & ncount2  & count3  & count4  & ncount5  & ncount6  & ncount7  & count9  & ncount10  -> (c8'=0) & (c3'=c3+1) & (c4'=c4+1) & (c9'=c9+1);
	[s8] can8  & count1  & ncount2  & count3  & count4  & ncount5  & ncount6  & ncount7  & count9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c9'=c9+1);
	[s8] can8  & ncount1  & count2  & count3  & count4  & ncount5  & ncount6  & ncount7  & count9  & ncount10  -> (c8'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c9'=c9+1);
	[s8] can8  & count1  & count2  & count3  & count4  & ncount5  & ncount6  & ncount7  & count9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c9'=c9+1);
	[s8] can8  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & count9  & ncount10  -> (c8'=0) & (c5'=c5+1) & (c9'=c9+1);
	[s8] can8  & count1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & count9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c5'=c5+1) & (c9'=c9+1);
	[s8] can8  & ncount1  & count2  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & count9  & ncount10  -> (c8'=0) & (c2'=c2+1) & (c5'=c5+1) & (c9'=c9+1);
	[s8] can8  & count1  & count2  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & count9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c9'=c9+1);
	[s8] can8  & ncount1  & ncount2  & count3  & ncount4  & count5  & ncount6  & ncount7  & count9  & ncount10  -> (c8'=0) & (c3'=c3+1) & (c5'=c5+1) & (c9'=c9+1);
	[s8] can8  & count1  & ncount2  & count3  & ncount4  & count5  & ncount6  & ncount7  & count9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c9'=c9+1);
	[s8] can8  & ncount1  & count2  & count3  & ncount4  & count5  & ncount6  & ncount7  & count9  & ncount10  -> (c8'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c9'=c9+1);
	[s8] can8  & count1  & count2  & count3  & ncount4  & count5  & ncount6  & ncount7  & count9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c9'=c9+1);
	[s8] can8  & ncount1  & ncount2  & ncount3  & count4  & count5  & ncount6  & ncount7  & count9  & ncount10  -> (c8'=0) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1);
	[s8] can8  & count1  & ncount2  & ncount3  & count4  & count5  & ncount6  & ncount7  & count9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1);
	[s8] can8  & ncount1  & count2  & ncount3  & count4  & count5  & ncount6  & ncount7  & count9  & ncount10  -> (c8'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1);
	[s8] can8  & count1  & count2  & ncount3  & count4  & count5  & ncount6  & ncount7  & count9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1);
	[s8] can8  & ncount1  & ncount2  & count3  & count4  & count5  & ncount6  & ncount7  & count9  & ncount10  -> (c8'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1);
	[s8] can8  & count1  & ncount2  & count3  & count4  & count5  & ncount6  & ncount7  & count9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1);
	[s8] can8  & ncount1  & count2  & count3  & count4  & count5  & ncount6  & ncount7  & count9  & ncount10  -> (c8'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1);
	[s8] can8  & count1  & count2  & count3  & count4  & count5  & ncount6  & ncount7  & count9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1);
	[s8] can8  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & count9  & ncount10  -> (c8'=0) & (c6'=c6+1) & (c9'=c9+1);
	[s8] can8  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & count9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c6'=c6+1) & (c9'=c9+1);
	[s8] can8  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & count9  & ncount10  -> (c8'=0) & (c2'=c2+1) & (c6'=c6+1) & (c9'=c9+1);
	[s8] can8  & count1  & count2  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & count9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c9'=c9+1);
	[s8] can8  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & count6  & ncount7  & count9  & ncount10  -> (c8'=0) & (c3'=c3+1) & (c6'=c6+1) & (c9'=c9+1);
	[s8] can8  & count1  & ncount2  & count3  & ncount4  & ncount5  & count6  & ncount7  & count9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c9'=c9+1);
	[s8] can8  & ncount1  & count2  & count3  & ncount4  & ncount5  & count6  & ncount7  & count9  & ncount10  -> (c8'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c9'=c9+1);
	[s8] can8  & count1  & count2  & count3  & ncount4  & ncount5  & count6  & ncount7  & count9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c9'=c9+1);
	[s8] can8  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & count6  & ncount7  & count9  & ncount10  -> (c8'=0) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1);
	[s8] can8  & count1  & ncount2  & ncount3  & count4  & ncount5  & count6  & ncount7  & count9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1);
	[s8] can8  & ncount1  & count2  & ncount3  & count4  & ncount5  & count6  & ncount7  & count9  & ncount10  -> (c8'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1);
	[s8] can8  & count1  & count2  & ncount3  & count4  & ncount5  & count6  & ncount7  & count9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1);
	[s8] can8  & ncount1  & ncount2  & count3  & count4  & ncount5  & count6  & ncount7  & count9  & ncount10  -> (c8'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1);
	[s8] can8  & count1  & ncount2  & count3  & count4  & ncount5  & count6  & ncount7  & count9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1);
	[s8] can8  & ncount1  & count2  & count3  & count4  & ncount5  & count6  & ncount7  & count9  & ncount10  -> (c8'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1);
	[s8] can8  & count1  & count2  & count3  & count4  & ncount5  & count6  & ncount7  & count9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1);
	[s8] can8  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & count6  & ncount7  & count9  & ncount10  -> (c8'=0) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s8] can8  & count1  & ncount2  & ncount3  & ncount4  & count5  & count6  & ncount7  & count9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s8] can8  & ncount1  & count2  & ncount3  & ncount4  & count5  & count6  & ncount7  & count9  & ncount10  -> (c8'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s8] can8  & count1  & count2  & ncount3  & ncount4  & count5  & count6  & ncount7  & count9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s8] can8  & ncount1  & ncount2  & count3  & ncount4  & count5  & count6  & ncount7  & count9  & ncount10  -> (c8'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s8] can8  & count1  & ncount2  & count3  & ncount4  & count5  & count6  & ncount7  & count9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s8] can8  & ncount1  & count2  & count3  & ncount4  & count5  & count6  & ncount7  & count9  & ncount10  -> (c8'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s8] can8  & count1  & count2  & count3  & ncount4  & count5  & count6  & ncount7  & count9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s8] can8  & ncount1  & ncount2  & ncount3  & count4  & count5  & count6  & ncount7  & count9  & ncount10  -> (c8'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s8] can8  & count1  & ncount2  & ncount3  & count4  & count5  & count6  & ncount7  & count9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s8] can8  & ncount1  & count2  & ncount3  & count4  & count5  & count6  & ncount7  & count9  & ncount10  -> (c8'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s8] can8  & count1  & count2  & ncount3  & count4  & count5  & count6  & ncount7  & count9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s8] can8  & ncount1  & ncount2  & count3  & count4  & count5  & count6  & ncount7  & count9  & ncount10  -> (c8'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s8] can8  & count1  & ncount2  & count3  & count4  & count5  & count6  & ncount7  & count9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s8] can8  & ncount1  & count2  & count3  & count4  & count5  & count6  & ncount7  & count9  & ncount10  -> (c8'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s8] can8  & count1  & count2  & count3  & count4  & count5  & count6  & ncount7  & count9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s8] can8  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & count9  & ncount10  -> (c8'=0) & (c7'=c7+1) & (c9'=c9+1);
	[s8] can8  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & count9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c7'=c7+1) & (c9'=c9+1);
	[s8] can8  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & count9  & ncount10  -> (c8'=0) & (c2'=c2+1) & (c7'=c7+1) & (c9'=c9+1);
	[s8] can8  & count1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & count9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c7'=c7+1) & (c9'=c9+1);
	[s8] can8  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & count7  & count9  & ncount10  -> (c8'=0) & (c3'=c3+1) & (c7'=c7+1) & (c9'=c9+1);
	[s8] can8  & count1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & count7  & count9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c3'=c3+1) & (c7'=c7+1) & (c9'=c9+1);
	[s8] can8  & ncount1  & count2  & count3  & ncount4  & ncount5  & ncount6  & count7  & count9  & ncount10  -> (c8'=0) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1) & (c9'=c9+1);
	[s8] can8  & count1  & count2  & count3  & ncount4  & ncount5  & ncount6  & count7  & count9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1) & (c9'=c9+1);
	[s8] can8  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & count7  & count9  & ncount10  -> (c8'=0) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1);
	[s8] can8  & count1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & count7  & count9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1);
	[s8] can8  & ncount1  & count2  & ncount3  & count4  & ncount5  & ncount6  & count7  & count9  & ncount10  -> (c8'=0) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1);
	[s8] can8  & count1  & count2  & ncount3  & count4  & ncount5  & ncount6  & count7  & count9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1);
	[s8] can8  & ncount1  & ncount2  & count3  & count4  & ncount5  & ncount6  & count7  & count9  & ncount10  -> (c8'=0) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1);
	[s8] can8  & count1  & ncount2  & count3  & count4  & ncount5  & ncount6  & count7  & count9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1);
	[s8] can8  & ncount1  & count2  & count3  & count4  & ncount5  & ncount6  & count7  & count9  & ncount10  -> (c8'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1);
	[s8] can8  & count1  & count2  & count3  & count4  & ncount5  & ncount6  & count7  & count9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1);
	[s8] can8  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & count7  & count9  & ncount10  -> (c8'=0) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s8] can8  & count1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & count7  & count9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s8] can8  & ncount1  & count2  & ncount3  & ncount4  & count5  & ncount6  & count7  & count9  & ncount10  -> (c8'=0) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s8] can8  & count1  & count2  & ncount3  & ncount4  & count5  & ncount6  & count7  & count9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s8] can8  & ncount1  & ncount2  & count3  & ncount4  & count5  & ncount6  & count7  & count9  & ncount10  -> (c8'=0) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s8] can8  & count1  & ncount2  & count3  & ncount4  & count5  & ncount6  & count7  & count9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s8] can8  & ncount1  & count2  & count3  & ncount4  & count5  & ncount6  & count7  & count9  & ncount10  -> (c8'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s8] can8  & count1  & count2  & count3  & ncount4  & count5  & ncount6  & count7  & count9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s8] can8  & ncount1  & ncount2  & ncount3  & count4  & count5  & ncount6  & count7  & count9  & ncount10  -> (c8'=0) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s8] can8  & count1  & ncount2  & ncount3  & count4  & count5  & ncount6  & count7  & count9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s8] can8  & ncount1  & count2  & ncount3  & count4  & count5  & ncount6  & count7  & count9  & ncount10  -> (c8'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s8] can8  & count1  & count2  & ncount3  & count4  & count5  & ncount6  & count7  & count9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s8] can8  & ncount1  & ncount2  & count3  & count4  & count5  & ncount6  & count7  & count9  & ncount10  -> (c8'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s8] can8  & count1  & ncount2  & count3  & count4  & count5  & ncount6  & count7  & count9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s8] can8  & ncount1  & count2  & count3  & count4  & count5  & ncount6  & count7  & count9  & ncount10  -> (c8'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s8] can8  & count1  & count2  & count3  & count4  & count5  & ncount6  & count7  & count9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s8] can8  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & count7  & count9  & ncount10  -> (c8'=0) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s8] can8  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & count7  & count9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s8] can8  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & count6  & count7  & count9  & ncount10  -> (c8'=0) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s8] can8  & count1  & count2  & ncount3  & ncount4  & ncount5  & count6  & count7  & count9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s8] can8  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & count6  & count7  & count9  & ncount10  -> (c8'=0) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s8] can8  & count1  & ncount2  & count3  & ncount4  & ncount5  & count6  & count7  & count9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s8] can8  & ncount1  & count2  & count3  & ncount4  & ncount5  & count6  & count7  & count9  & ncount10  -> (c8'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s8] can8  & count1  & count2  & count3  & ncount4  & ncount5  & count6  & count7  & count9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s8] can8  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & count6  & count7  & count9  & ncount10  -> (c8'=0) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s8] can8  & count1  & ncount2  & ncount3  & count4  & ncount5  & count6  & count7  & count9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s8] can8  & ncount1  & count2  & ncount3  & count4  & ncount5  & count6  & count7  & count9  & ncount10  -> (c8'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s8] can8  & count1  & count2  & ncount3  & count4  & ncount5  & count6  & count7  & count9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s8] can8  & ncount1  & ncount2  & count3  & count4  & ncount5  & count6  & count7  & count9  & ncount10  -> (c8'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s8] can8  & count1  & ncount2  & count3  & count4  & ncount5  & count6  & count7  & count9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s8] can8  & ncount1  & count2  & count3  & count4  & ncount5  & count6  & count7  & count9  & ncount10  -> (c8'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s8] can8  & count1  & count2  & count3  & count4  & ncount5  & count6  & count7  & count9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s8] can8  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & count6  & count7  & count9  & ncount10  -> (c8'=0) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s8] can8  & count1  & ncount2  & ncount3  & ncount4  & count5  & count6  & count7  & count9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s8] can8  & ncount1  & count2  & ncount3  & ncount4  & count5  & count6  & count7  & count9  & ncount10  -> (c8'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s8] can8  & count1  & count2  & ncount3  & ncount4  & count5  & count6  & count7  & count9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s8] can8  & ncount1  & ncount2  & count3  & ncount4  & count5  & count6  & count7  & count9  & ncount10  -> (c8'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s8] can8  & count1  & ncount2  & count3  & ncount4  & count5  & count6  & count7  & count9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s8] can8  & ncount1  & count2  & count3  & ncount4  & count5  & count6  & count7  & count9  & ncount10  -> (c8'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s8] can8  & count1  & count2  & count3  & ncount4  & count5  & count6  & count7  & count9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s8] can8  & ncount1  & ncount2  & ncount3  & count4  & count5  & count6  & count7  & count9  & ncount10  -> (c8'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s8] can8  & count1  & ncount2  & ncount3  & count4  & count5  & count6  & count7  & count9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s8] can8  & ncount1  & count2  & ncount3  & count4  & count5  & count6  & count7  & count9  & ncount10  -> (c8'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s8] can8  & count1  & count2  & ncount3  & count4  & count5  & count6  & count7  & count9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s8] can8  & ncount1  & ncount2  & count3  & count4  & count5  & count6  & count7  & count9  & ncount10  -> (c8'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s8] can8  & count1  & ncount2  & count3  & count4  & count5  & count6  & count7  & count9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s8] can8  & ncount1  & count2  & count3  & count4  & count5  & count6  & count7  & count9  & ncount10  -> (c8'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s8] can8  & count1  & count2  & count3  & count4  & count5  & count6  & count7  & count9  & ncount10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s8] can8  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount9  & count10  -> (c8'=0) & (c10'=c10+1);
	[s8] can8  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount9  & count10  -> (c8'=0) & (c1'=c1+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount9  & count10  -> (c8'=0) & (c2'=c2+1) & (c10'=c10+1);
	[s8] can8  & count1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount9  & count10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount9  & count10  -> (c8'=0) & (c3'=c3+1) & (c10'=c10+1);
	[s8] can8  & count1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount9  & count10  -> (c8'=0) & (c1'=c1+1) & (c3'=c3+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & count2  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount9  & count10  -> (c8'=0) & (c2'=c2+1) & (c3'=c3+1) & (c10'=c10+1);
	[s8] can8  & count1  & count2  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount9  & count10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & ncount9  & count10  -> (c8'=0) & (c4'=c4+1) & (c10'=c10+1);
	[s8] can8  & count1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & ncount9  & count10  -> (c8'=0) & (c1'=c1+1) & (c4'=c4+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & count2  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & ncount9  & count10  -> (c8'=0) & (c2'=c2+1) & (c4'=c4+1) & (c10'=c10+1);
	[s8] can8  & count1  & count2  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & ncount9  & count10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & ncount2  & count3  & count4  & ncount5  & ncount6  & ncount7  & ncount9  & count10  -> (c8'=0) & (c3'=c3+1) & (c4'=c4+1) & (c10'=c10+1);
	[s8] can8  & count1  & ncount2  & count3  & count4  & ncount5  & ncount6  & ncount7  & ncount9  & count10  -> (c8'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & count2  & count3  & count4  & ncount5  & ncount6  & ncount7  & ncount9  & count10  -> (c8'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c10'=c10+1);
	[s8] can8  & count1  & count2  & count3  & count4  & ncount5  & ncount6  & ncount7  & ncount9  & count10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & ncount9  & count10  -> (c8'=0) & (c5'=c5+1) & (c10'=c10+1);
	[s8] can8  & count1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & ncount9  & count10  -> (c8'=0) & (c1'=c1+1) & (c5'=c5+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & count2  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & ncount9  & count10  -> (c8'=0) & (c2'=c2+1) & (c5'=c5+1) & (c10'=c10+1);
	[s8] can8  & count1  & count2  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & ncount9  & count10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & ncount2  & count3  & ncount4  & count5  & ncount6  & ncount7  & ncount9  & count10  -> (c8'=0) & (c3'=c3+1) & (c5'=c5+1) & (c10'=c10+1);
	[s8] can8  & count1  & ncount2  & count3  & ncount4  & count5  & ncount6  & ncount7  & ncount9  & count10  -> (c8'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & count2  & count3  & ncount4  & count5  & ncount6  & ncount7  & ncount9  & count10  -> (c8'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c10'=c10+1);
	[s8] can8  & count1  & count2  & count3  & ncount4  & count5  & ncount6  & ncount7  & ncount9  & count10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & ncount2  & ncount3  & count4  & count5  & ncount6  & ncount7  & ncount9  & count10  -> (c8'=0) & (c4'=c4+1) & (c5'=c5+1) & (c10'=c10+1);
	[s8] can8  & count1  & ncount2  & ncount3  & count4  & count5  & ncount6  & ncount7  & ncount9  & count10  -> (c8'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & count2  & ncount3  & count4  & count5  & ncount6  & ncount7  & ncount9  & count10  -> (c8'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c10'=c10+1);
	[s8] can8  & count1  & count2  & ncount3  & count4  & count5  & ncount6  & ncount7  & ncount9  & count10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & ncount2  & count3  & count4  & count5  & ncount6  & ncount7  & ncount9  & count10  -> (c8'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c10'=c10+1);
	[s8] can8  & count1  & ncount2  & count3  & count4  & count5  & ncount6  & ncount7  & ncount9  & count10  -> (c8'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & count2  & count3  & count4  & count5  & ncount6  & ncount7  & ncount9  & count10  -> (c8'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c10'=c10+1);
	[s8] can8  & count1  & count2  & count3  & count4  & count5  & ncount6  & ncount7  & ncount9  & count10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & ncount9  & count10  -> (c8'=0) & (c6'=c6+1) & (c10'=c10+1);
	[s8] can8  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & ncount9  & count10  -> (c8'=0) & (c1'=c1+1) & (c6'=c6+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & ncount9  & count10  -> (c8'=0) & (c2'=c2+1) & (c6'=c6+1) & (c10'=c10+1);
	[s8] can8  & count1  & count2  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & ncount9  & count10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & count6  & ncount7  & ncount9  & count10  -> (c8'=0) & (c3'=c3+1) & (c6'=c6+1) & (c10'=c10+1);
	[s8] can8  & count1  & ncount2  & count3  & ncount4  & ncount5  & count6  & ncount7  & ncount9  & count10  -> (c8'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & count2  & count3  & ncount4  & ncount5  & count6  & ncount7  & ncount9  & count10  -> (c8'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c10'=c10+1);
	[s8] can8  & count1  & count2  & count3  & ncount4  & ncount5  & count6  & ncount7  & ncount9  & count10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & count6  & ncount7  & ncount9  & count10  -> (c8'=0) & (c4'=c4+1) & (c6'=c6+1) & (c10'=c10+1);
	[s8] can8  & count1  & ncount2  & ncount3  & count4  & ncount5  & count6  & ncount7  & ncount9  & count10  -> (c8'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & count2  & ncount3  & count4  & ncount5  & count6  & ncount7  & ncount9  & count10  -> (c8'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c10'=c10+1);
	[s8] can8  & count1  & count2  & ncount3  & count4  & ncount5  & count6  & ncount7  & ncount9  & count10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & ncount2  & count3  & count4  & ncount5  & count6  & ncount7  & ncount9  & count10  -> (c8'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c10'=c10+1);
	[s8] can8  & count1  & ncount2  & count3  & count4  & ncount5  & count6  & ncount7  & ncount9  & count10  -> (c8'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & count2  & count3  & count4  & ncount5  & count6  & ncount7  & ncount9  & count10  -> (c8'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c10'=c10+1);
	[s8] can8  & count1  & count2  & count3  & count4  & ncount5  & count6  & ncount7  & ncount9  & count10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & count6  & ncount7  & ncount9  & count10  -> (c8'=0) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s8] can8  & count1  & ncount2  & ncount3  & ncount4  & count5  & count6  & ncount7  & ncount9  & count10  -> (c8'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & count2  & ncount3  & ncount4  & count5  & count6  & ncount7  & ncount9  & count10  -> (c8'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s8] can8  & count1  & count2  & ncount3  & ncount4  & count5  & count6  & ncount7  & ncount9  & count10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & ncount2  & count3  & ncount4  & count5  & count6  & ncount7  & ncount9  & count10  -> (c8'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s8] can8  & count1  & ncount2  & count3  & ncount4  & count5  & count6  & ncount7  & ncount9  & count10  -> (c8'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & count2  & count3  & ncount4  & count5  & count6  & ncount7  & ncount9  & count10  -> (c8'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s8] can8  & count1  & count2  & count3  & ncount4  & count5  & count6  & ncount7  & ncount9  & count10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & ncount2  & ncount3  & count4  & count5  & count6  & ncount7  & ncount9  & count10  -> (c8'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s8] can8  & count1  & ncount2  & ncount3  & count4  & count5  & count6  & ncount7  & ncount9  & count10  -> (c8'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & count2  & ncount3  & count4  & count5  & count6  & ncount7  & ncount9  & count10  -> (c8'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s8] can8  & count1  & count2  & ncount3  & count4  & count5  & count6  & ncount7  & ncount9  & count10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & ncount2  & count3  & count4  & count5  & count6  & ncount7  & ncount9  & count10  -> (c8'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s8] can8  & count1  & ncount2  & count3  & count4  & count5  & count6  & ncount7  & ncount9  & count10  -> (c8'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & count2  & count3  & count4  & count5  & count6  & ncount7  & ncount9  & count10  -> (c8'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s8] can8  & count1  & count2  & count3  & count4  & count5  & count6  & ncount7  & ncount9  & count10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & ncount9  & count10  -> (c8'=0) & (c7'=c7+1) & (c10'=c10+1);
	[s8] can8  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & ncount9  & count10  -> (c8'=0) & (c1'=c1+1) & (c7'=c7+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & ncount9  & count10  -> (c8'=0) & (c2'=c2+1) & (c7'=c7+1) & (c10'=c10+1);
	[s8] can8  & count1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & ncount9  & count10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c7'=c7+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & count7  & ncount9  & count10  -> (c8'=0) & (c3'=c3+1) & (c7'=c7+1) & (c10'=c10+1);
	[s8] can8  & count1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & count7  & ncount9  & count10  -> (c8'=0) & (c1'=c1+1) & (c3'=c3+1) & (c7'=c7+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & count2  & count3  & ncount4  & ncount5  & ncount6  & count7  & ncount9  & count10  -> (c8'=0) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1) & (c10'=c10+1);
	[s8] can8  & count1  & count2  & count3  & ncount4  & ncount5  & ncount6  & count7  & ncount9  & count10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & count7  & ncount9  & count10  -> (c8'=0) & (c4'=c4+1) & (c7'=c7+1) & (c10'=c10+1);
	[s8] can8  & count1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & count7  & ncount9  & count10  -> (c8'=0) & (c1'=c1+1) & (c4'=c4+1) & (c7'=c7+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & count2  & ncount3  & count4  & ncount5  & ncount6  & count7  & ncount9  & count10  -> (c8'=0) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1) & (c10'=c10+1);
	[s8] can8  & count1  & count2  & ncount3  & count4  & ncount5  & ncount6  & count7  & ncount9  & count10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & ncount2  & count3  & count4  & ncount5  & ncount6  & count7  & ncount9  & count10  -> (c8'=0) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c10'=c10+1);
	[s8] can8  & count1  & ncount2  & count3  & count4  & ncount5  & ncount6  & count7  & ncount9  & count10  -> (c8'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & count2  & count3  & count4  & ncount5  & ncount6  & count7  & ncount9  & count10  -> (c8'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c10'=c10+1);
	[s8] can8  & count1  & count2  & count3  & count4  & ncount5  & ncount6  & count7  & ncount9  & count10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & count7  & ncount9  & count10  -> (c8'=0) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s8] can8  & count1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & count7  & ncount9  & count10  -> (c8'=0) & (c1'=c1+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & count2  & ncount3  & ncount4  & count5  & ncount6  & count7  & ncount9  & count10  -> (c8'=0) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s8] can8  & count1  & count2  & ncount3  & ncount4  & count5  & ncount6  & count7  & ncount9  & count10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & ncount2  & count3  & ncount4  & count5  & ncount6  & count7  & ncount9  & count10  -> (c8'=0) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s8] can8  & count1  & ncount2  & count3  & ncount4  & count5  & ncount6  & count7  & ncount9  & count10  -> (c8'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & count2  & count3  & ncount4  & count5  & ncount6  & count7  & ncount9  & count10  -> (c8'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s8] can8  & count1  & count2  & count3  & ncount4  & count5  & ncount6  & count7  & ncount9  & count10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & ncount2  & ncount3  & count4  & count5  & ncount6  & count7  & ncount9  & count10  -> (c8'=0) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s8] can8  & count1  & ncount2  & ncount3  & count4  & count5  & ncount6  & count7  & ncount9  & count10  -> (c8'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & count2  & ncount3  & count4  & count5  & ncount6  & count7  & ncount9  & count10  -> (c8'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s8] can8  & count1  & count2  & ncount3  & count4  & count5  & ncount6  & count7  & ncount9  & count10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & ncount2  & count3  & count4  & count5  & ncount6  & count7  & ncount9  & count10  -> (c8'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s8] can8  & count1  & ncount2  & count3  & count4  & count5  & ncount6  & count7  & ncount9  & count10  -> (c8'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & count2  & count3  & count4  & count5  & ncount6  & count7  & ncount9  & count10  -> (c8'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s8] can8  & count1  & count2  & count3  & count4  & count5  & ncount6  & count7  & ncount9  & count10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & count7  & ncount9  & count10  -> (c8'=0) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s8] can8  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & count7  & ncount9  & count10  -> (c8'=0) & (c1'=c1+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & count6  & count7  & ncount9  & count10  -> (c8'=0) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s8] can8  & count1  & count2  & ncount3  & ncount4  & ncount5  & count6  & count7  & ncount9  & count10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & count6  & count7  & ncount9  & count10  -> (c8'=0) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s8] can8  & count1  & ncount2  & count3  & ncount4  & ncount5  & count6  & count7  & ncount9  & count10  -> (c8'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & count2  & count3  & ncount4  & ncount5  & count6  & count7  & ncount9  & count10  -> (c8'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s8] can8  & count1  & count2  & count3  & ncount4  & ncount5  & count6  & count7  & ncount9  & count10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & count6  & count7  & ncount9  & count10  -> (c8'=0) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s8] can8  & count1  & ncount2  & ncount3  & count4  & ncount5  & count6  & count7  & ncount9  & count10  -> (c8'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & count2  & ncount3  & count4  & ncount5  & count6  & count7  & ncount9  & count10  -> (c8'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s8] can8  & count1  & count2  & ncount3  & count4  & ncount5  & count6  & count7  & ncount9  & count10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & ncount2  & count3  & count4  & ncount5  & count6  & count7  & ncount9  & count10  -> (c8'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s8] can8  & count1  & ncount2  & count3  & count4  & ncount5  & count6  & count7  & ncount9  & count10  -> (c8'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & count2  & count3  & count4  & ncount5  & count6  & count7  & ncount9  & count10  -> (c8'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s8] can8  & count1  & count2  & count3  & count4  & ncount5  & count6  & count7  & ncount9  & count10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & count6  & count7  & ncount9  & count10  -> (c8'=0) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s8] can8  & count1  & ncount2  & ncount3  & ncount4  & count5  & count6  & count7  & ncount9  & count10  -> (c8'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & count2  & ncount3  & ncount4  & count5  & count6  & count7  & ncount9  & count10  -> (c8'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s8] can8  & count1  & count2  & ncount3  & ncount4  & count5  & count6  & count7  & ncount9  & count10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & ncount2  & count3  & ncount4  & count5  & count6  & count7  & ncount9  & count10  -> (c8'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s8] can8  & count1  & ncount2  & count3  & ncount4  & count5  & count6  & count7  & ncount9  & count10  -> (c8'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & count2  & count3  & ncount4  & count5  & count6  & count7  & ncount9  & count10  -> (c8'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s8] can8  & count1  & count2  & count3  & ncount4  & count5  & count6  & count7  & ncount9  & count10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & ncount2  & ncount3  & count4  & count5  & count6  & count7  & ncount9  & count10  -> (c8'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s8] can8  & count1  & ncount2  & ncount3  & count4  & count5  & count6  & count7  & ncount9  & count10  -> (c8'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & count2  & ncount3  & count4  & count5  & count6  & count7  & ncount9  & count10  -> (c8'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s8] can8  & count1  & count2  & ncount3  & count4  & count5  & count6  & count7  & ncount9  & count10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & ncount2  & count3  & count4  & count5  & count6  & count7  & ncount9  & count10  -> (c8'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s8] can8  & count1  & ncount2  & count3  & count4  & count5  & count6  & count7  & ncount9  & count10  -> (c8'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & count2  & count3  & count4  & count5  & count6  & count7  & ncount9  & count10  -> (c8'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s8] can8  & count1  & count2  & count3  & count4  & count5  & count6  & count7  & ncount9  & count10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & count9  & count10  -> (c8'=0) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & count9  & count10  -> (c8'=0) & (c1'=c1+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & count9  & count10  -> (c8'=0) & (c2'=c2+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & count1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & count9  & count10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & count9  & count10  -> (c8'=0) & (c3'=c3+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & count1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & count9  & count10  -> (c8'=0) & (c1'=c1+1) & (c3'=c3+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & count2  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & count9  & count10  -> (c8'=0) & (c2'=c2+1) & (c3'=c3+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & count1  & count2  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & count9  & count10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & count9  & count10  -> (c8'=0) & (c4'=c4+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & count1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & count9  & count10  -> (c8'=0) & (c1'=c1+1) & (c4'=c4+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & count2  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & count9  & count10  -> (c8'=0) & (c2'=c2+1) & (c4'=c4+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & count1  & count2  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & count9  & count10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & ncount2  & count3  & count4  & ncount5  & ncount6  & ncount7  & count9  & count10  -> (c8'=0) & (c3'=c3+1) & (c4'=c4+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & count1  & ncount2  & count3  & count4  & ncount5  & ncount6  & ncount7  & count9  & count10  -> (c8'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & count2  & count3  & count4  & ncount5  & ncount6  & ncount7  & count9  & count10  -> (c8'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & count1  & count2  & count3  & count4  & ncount5  & ncount6  & ncount7  & count9  & count10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & count9  & count10  -> (c8'=0) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & count1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & count9  & count10  -> (c8'=0) & (c1'=c1+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & count2  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & count9  & count10  -> (c8'=0) & (c2'=c2+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & count1  & count2  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & count9  & count10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & ncount2  & count3  & ncount4  & count5  & ncount6  & ncount7  & count9  & count10  -> (c8'=0) & (c3'=c3+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & count1  & ncount2  & count3  & ncount4  & count5  & ncount6  & ncount7  & count9  & count10  -> (c8'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & count2  & count3  & ncount4  & count5  & ncount6  & ncount7  & count9  & count10  -> (c8'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & count1  & count2  & count3  & ncount4  & count5  & ncount6  & ncount7  & count9  & count10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & ncount2  & ncount3  & count4  & count5  & ncount6  & ncount7  & count9  & count10  -> (c8'=0) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & count1  & ncount2  & ncount3  & count4  & count5  & ncount6  & ncount7  & count9  & count10  -> (c8'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & count2  & ncount3  & count4  & count5  & ncount6  & ncount7  & count9  & count10  -> (c8'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & count1  & count2  & ncount3  & count4  & count5  & ncount6  & ncount7  & count9  & count10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & ncount2  & count3  & count4  & count5  & ncount6  & ncount7  & count9  & count10  -> (c8'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & count1  & ncount2  & count3  & count4  & count5  & ncount6  & ncount7  & count9  & count10  -> (c8'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & count2  & count3  & count4  & count5  & ncount6  & ncount7  & count9  & count10  -> (c8'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & count1  & count2  & count3  & count4  & count5  & ncount6  & ncount7  & count9  & count10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & count9  & count10  -> (c8'=0) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & count9  & count10  -> (c8'=0) & (c1'=c1+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & count9  & count10  -> (c8'=0) & (c2'=c2+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & count1  & count2  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & count9  & count10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & count6  & ncount7  & count9  & count10  -> (c8'=0) & (c3'=c3+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & count1  & ncount2  & count3  & ncount4  & ncount5  & count6  & ncount7  & count9  & count10  -> (c8'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & count2  & count3  & ncount4  & ncount5  & count6  & ncount7  & count9  & count10  -> (c8'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & count1  & count2  & count3  & ncount4  & ncount5  & count6  & ncount7  & count9  & count10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & count6  & ncount7  & count9  & count10  -> (c8'=0) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & count1  & ncount2  & ncount3  & count4  & ncount5  & count6  & ncount7  & count9  & count10  -> (c8'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & count2  & ncount3  & count4  & ncount5  & count6  & ncount7  & count9  & count10  -> (c8'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & count1  & count2  & ncount3  & count4  & ncount5  & count6  & ncount7  & count9  & count10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & ncount2  & count3  & count4  & ncount5  & count6  & ncount7  & count9  & count10  -> (c8'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & count1  & ncount2  & count3  & count4  & ncount5  & count6  & ncount7  & count9  & count10  -> (c8'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & count2  & count3  & count4  & ncount5  & count6  & ncount7  & count9  & count10  -> (c8'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & count1  & count2  & count3  & count4  & ncount5  & count6  & ncount7  & count9  & count10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & count6  & ncount7  & count9  & count10  -> (c8'=0) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & count1  & ncount2  & ncount3  & ncount4  & count5  & count6  & ncount7  & count9  & count10  -> (c8'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & count2  & ncount3  & ncount4  & count5  & count6  & ncount7  & count9  & count10  -> (c8'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & count1  & count2  & ncount3  & ncount4  & count5  & count6  & ncount7  & count9  & count10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & ncount2  & count3  & ncount4  & count5  & count6  & ncount7  & count9  & count10  -> (c8'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & count1  & ncount2  & count3  & ncount4  & count5  & count6  & ncount7  & count9  & count10  -> (c8'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & count2  & count3  & ncount4  & count5  & count6  & ncount7  & count9  & count10  -> (c8'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & count1  & count2  & count3  & ncount4  & count5  & count6  & ncount7  & count9  & count10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & ncount2  & ncount3  & count4  & count5  & count6  & ncount7  & count9  & count10  -> (c8'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & count1  & ncount2  & ncount3  & count4  & count5  & count6  & ncount7  & count9  & count10  -> (c8'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & count2  & ncount3  & count4  & count5  & count6  & ncount7  & count9  & count10  -> (c8'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & count1  & count2  & ncount3  & count4  & count5  & count6  & ncount7  & count9  & count10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & ncount2  & count3  & count4  & count5  & count6  & ncount7  & count9  & count10  -> (c8'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & count1  & ncount2  & count3  & count4  & count5  & count6  & ncount7  & count9  & count10  -> (c8'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & count2  & count3  & count4  & count5  & count6  & ncount7  & count9  & count10  -> (c8'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & count1  & count2  & count3  & count4  & count5  & count6  & ncount7  & count9  & count10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & count9  & count10  -> (c8'=0) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & count9  & count10  -> (c8'=0) & (c1'=c1+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & count9  & count10  -> (c8'=0) & (c2'=c2+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & count1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & count9  & count10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & count7  & count9  & count10  -> (c8'=0) & (c3'=c3+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & count1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & count7  & count9  & count10  -> (c8'=0) & (c1'=c1+1) & (c3'=c3+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & count2  & count3  & ncount4  & ncount5  & ncount6  & count7  & count9  & count10  -> (c8'=0) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & count1  & count2  & count3  & ncount4  & ncount5  & ncount6  & count7  & count9  & count10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & count7  & count9  & count10  -> (c8'=0) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & count1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & count7  & count9  & count10  -> (c8'=0) & (c1'=c1+1) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & count2  & ncount3  & count4  & ncount5  & ncount6  & count7  & count9  & count10  -> (c8'=0) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & count1  & count2  & ncount3  & count4  & ncount5  & ncount6  & count7  & count9  & count10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & ncount2  & count3  & count4  & ncount5  & ncount6  & count7  & count9  & count10  -> (c8'=0) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & count1  & ncount2  & count3  & count4  & ncount5  & ncount6  & count7  & count9  & count10  -> (c8'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & count2  & count3  & count4  & ncount5  & ncount6  & count7  & count9  & count10  -> (c8'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & count1  & count2  & count3  & count4  & ncount5  & ncount6  & count7  & count9  & count10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & count7  & count9  & count10  -> (c8'=0) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & count1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & count7  & count9  & count10  -> (c8'=0) & (c1'=c1+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & count2  & ncount3  & ncount4  & count5  & ncount6  & count7  & count9  & count10  -> (c8'=0) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & count1  & count2  & ncount3  & ncount4  & count5  & ncount6  & count7  & count9  & count10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & ncount2  & count3  & ncount4  & count5  & ncount6  & count7  & count9  & count10  -> (c8'=0) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & count1  & ncount2  & count3  & ncount4  & count5  & ncount6  & count7  & count9  & count10  -> (c8'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & count2  & count3  & ncount4  & count5  & ncount6  & count7  & count9  & count10  -> (c8'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & count1  & count2  & count3  & ncount4  & count5  & ncount6  & count7  & count9  & count10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & ncount2  & ncount3  & count4  & count5  & ncount6  & count7  & count9  & count10  -> (c8'=0) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & count1  & ncount2  & ncount3  & count4  & count5  & ncount6  & count7  & count9  & count10  -> (c8'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & count2  & ncount3  & count4  & count5  & ncount6  & count7  & count9  & count10  -> (c8'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & count1  & count2  & ncount3  & count4  & count5  & ncount6  & count7  & count9  & count10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & ncount2  & count3  & count4  & count5  & ncount6  & count7  & count9  & count10  -> (c8'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & count1  & ncount2  & count3  & count4  & count5  & ncount6  & count7  & count9  & count10  -> (c8'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & count2  & count3  & count4  & count5  & ncount6  & count7  & count9  & count10  -> (c8'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & count1  & count2  & count3  & count4  & count5  & ncount6  & count7  & count9  & count10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & count7  & count9  & count10  -> (c8'=0) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & count7  & count9  & count10  -> (c8'=0) & (c1'=c1+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & count6  & count7  & count9  & count10  -> (c8'=0) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & count1  & count2  & ncount3  & ncount4  & ncount5  & count6  & count7  & count9  & count10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & count6  & count7  & count9  & count10  -> (c8'=0) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & count1  & ncount2  & count3  & ncount4  & ncount5  & count6  & count7  & count9  & count10  -> (c8'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & count2  & count3  & ncount4  & ncount5  & count6  & count7  & count9  & count10  -> (c8'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & count1  & count2  & count3  & ncount4  & ncount5  & count6  & count7  & count9  & count10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & count6  & count7  & count9  & count10  -> (c8'=0) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & count1  & ncount2  & ncount3  & count4  & ncount5  & count6  & count7  & count9  & count10  -> (c8'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & count2  & ncount3  & count4  & ncount5  & count6  & count7  & count9  & count10  -> (c8'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & count1  & count2  & ncount3  & count4  & ncount5  & count6  & count7  & count9  & count10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & ncount2  & count3  & count4  & ncount5  & count6  & count7  & count9  & count10  -> (c8'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & count1  & ncount2  & count3  & count4  & ncount5  & count6  & count7  & count9  & count10  -> (c8'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & count2  & count3  & count4  & ncount5  & count6  & count7  & count9  & count10  -> (c8'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & count1  & count2  & count3  & count4  & ncount5  & count6  & count7  & count9  & count10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & count6  & count7  & count9  & count10  -> (c8'=0) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & count1  & ncount2  & ncount3  & ncount4  & count5  & count6  & count7  & count9  & count10  -> (c8'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & count2  & ncount3  & ncount4  & count5  & count6  & count7  & count9  & count10  -> (c8'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & count1  & count2  & ncount3  & ncount4  & count5  & count6  & count7  & count9  & count10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & ncount2  & count3  & ncount4  & count5  & count6  & count7  & count9  & count10  -> (c8'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & count1  & ncount2  & count3  & ncount4  & count5  & count6  & count7  & count9  & count10  -> (c8'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & count2  & count3  & ncount4  & count5  & count6  & count7  & count9  & count10  -> (c8'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & count1  & count2  & count3  & ncount4  & count5  & count6  & count7  & count9  & count10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & ncount2  & ncount3  & count4  & count5  & count6  & count7  & count9  & count10  -> (c8'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & count1  & ncount2  & ncount3  & count4  & count5  & count6  & count7  & count9  & count10  -> (c8'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & count2  & ncount3  & count4  & count5  & count6  & count7  & count9  & count10  -> (c8'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & count1  & count2  & ncount3  & count4  & count5  & count6  & count7  & count9  & count10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & ncount2  & count3  & count4  & count5  & count6  & count7  & count9  & count10  -> (c8'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & count1  & ncount2  & count3  & count4  & count5  & count6  & count7  & count9  & count10  -> (c8'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & ncount1  & count2  & count3  & count4  & count5  & count6  & count7  & count9  & count10  -> (c8'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s8] can8  & count1  & count2  & count3  & count4  & count5  & count6  & count7  & count9  & count10  -> (c8'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount10  -> (c9'=0);
	[s9] can9  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount10  -> (c9'=0) & (c1'=c1+1);
	[s9] can9  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount10  -> (c9'=0) & (c2'=c2+1);
	[s9] can9  & count1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1);
	[s9] can9  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount10  -> (c9'=0) & (c3'=c3+1);
	[s9] can9  & count1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c3'=c3+1);
	[s9] can9  & ncount1  & count2  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount10  -> (c9'=0) & (c2'=c2+1) & (c3'=c3+1);
	[s9] can9  & count1  & count2  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1);
	[s9] can9  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount10  -> (c9'=0) & (c4'=c4+1);
	[s9] can9  & count1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c4'=c4+1);
	[s9] can9  & ncount1  & count2  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount10  -> (c9'=0) & (c2'=c2+1) & (c4'=c4+1);
	[s9] can9  & count1  & count2  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1);
	[s9] can9  & ncount1  & ncount2  & count3  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount10  -> (c9'=0) & (c3'=c3+1) & (c4'=c4+1);
	[s9] can9  & count1  & ncount2  & count3  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1);
	[s9] can9  & ncount1  & count2  & count3  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount10  -> (c9'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1);
	[s9] can9  & count1  & count2  & count3  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1);
	[s9] can9  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & ncount10  -> (c9'=0) & (c5'=c5+1);
	[s9] can9  & count1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c5'=c5+1);
	[s9] can9  & ncount1  & count2  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & ncount10  -> (c9'=0) & (c2'=c2+1) & (c5'=c5+1);
	[s9] can9  & count1  & count2  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1);
	[s9] can9  & ncount1  & ncount2  & count3  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & ncount10  -> (c9'=0) & (c3'=c3+1) & (c5'=c5+1);
	[s9] can9  & count1  & ncount2  & count3  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1);
	[s9] can9  & ncount1  & count2  & count3  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & ncount10  -> (c9'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1);
	[s9] can9  & count1  & count2  & count3  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1);
	[s9] can9  & ncount1  & ncount2  & ncount3  & count4  & count5  & ncount6  & ncount7  & ncount8  & ncount10  -> (c9'=0) & (c4'=c4+1) & (c5'=c5+1);
	[s9] can9  & count1  & ncount2  & ncount3  & count4  & count5  & ncount6  & ncount7  & ncount8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1);
	[s9] can9  & ncount1  & count2  & ncount3  & count4  & count5  & ncount6  & ncount7  & ncount8  & ncount10  -> (c9'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1);
	[s9] can9  & count1  & count2  & ncount3  & count4  & count5  & ncount6  & ncount7  & ncount8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1);
	[s9] can9  & ncount1  & ncount2  & count3  & count4  & count5  & ncount6  & ncount7  & ncount8  & ncount10  -> (c9'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1);
	[s9] can9  & count1  & ncount2  & count3  & count4  & count5  & ncount6  & ncount7  & ncount8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1);
	[s9] can9  & ncount1  & count2  & count3  & count4  & count5  & ncount6  & ncount7  & ncount8  & ncount10  -> (c9'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1);
	[s9] can9  & count1  & count2  & count3  & count4  & count5  & ncount6  & ncount7  & ncount8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1);
	[s9] can9  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & ncount10  -> (c9'=0) & (c6'=c6+1);
	[s9] can9  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c6'=c6+1);
	[s9] can9  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & ncount10  -> (c9'=0) & (c2'=c2+1) & (c6'=c6+1);
	[s9] can9  & count1  & count2  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1);
	[s9] can9  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & ncount10  -> (c9'=0) & (c3'=c3+1) & (c6'=c6+1);
	[s9] can9  & count1  & ncount2  & count3  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1);
	[s9] can9  & ncount1  & count2  & count3  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & ncount10  -> (c9'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1);
	[s9] can9  & count1  & count2  & count3  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1);
	[s9] can9  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & count6  & ncount7  & ncount8  & ncount10  -> (c9'=0) & (c4'=c4+1) & (c6'=c6+1);
	[s9] can9  & count1  & ncount2  & ncount3  & count4  & ncount5  & count6  & ncount7  & ncount8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1);
	[s9] can9  & ncount1  & count2  & ncount3  & count4  & ncount5  & count6  & ncount7  & ncount8  & ncount10  -> (c9'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1);
	[s9] can9  & count1  & count2  & ncount3  & count4  & ncount5  & count6  & ncount7  & ncount8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1);
	[s9] can9  & ncount1  & ncount2  & count3  & count4  & ncount5  & count6  & ncount7  & ncount8  & ncount10  -> (c9'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1);
	[s9] can9  & count1  & ncount2  & count3  & count4  & ncount5  & count6  & ncount7  & ncount8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1);
	[s9] can9  & ncount1  & count2  & count3  & count4  & ncount5  & count6  & ncount7  & ncount8  & ncount10  -> (c9'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1);
	[s9] can9  & count1  & count2  & count3  & count4  & ncount5  & count6  & ncount7  & ncount8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1);
	[s9] can9  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & count6  & ncount7  & ncount8  & ncount10  -> (c9'=0) & (c5'=c5+1) & (c6'=c6+1);
	[s9] can9  & count1  & ncount2  & ncount3  & ncount4  & count5  & count6  & ncount7  & ncount8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1);
	[s9] can9  & ncount1  & count2  & ncount3  & ncount4  & count5  & count6  & ncount7  & ncount8  & ncount10  -> (c9'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1);
	[s9] can9  & count1  & count2  & ncount3  & ncount4  & count5  & count6  & ncount7  & ncount8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1);
	[s9] can9  & ncount1  & ncount2  & count3  & ncount4  & count5  & count6  & ncount7  & ncount8  & ncount10  -> (c9'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1);
	[s9] can9  & count1  & ncount2  & count3  & ncount4  & count5  & count6  & ncount7  & ncount8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1);
	[s9] can9  & ncount1  & count2  & count3  & ncount4  & count5  & count6  & ncount7  & ncount8  & ncount10  -> (c9'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1);
	[s9] can9  & count1  & count2  & count3  & ncount4  & count5  & count6  & ncount7  & ncount8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1);
	[s9] can9  & ncount1  & ncount2  & ncount3  & count4  & count5  & count6  & ncount7  & ncount8  & ncount10  -> (c9'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1);
	[s9] can9  & count1  & ncount2  & ncount3  & count4  & count5  & count6  & ncount7  & ncount8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1);
	[s9] can9  & ncount1  & count2  & ncount3  & count4  & count5  & count6  & ncount7  & ncount8  & ncount10  -> (c9'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1);
	[s9] can9  & count1  & count2  & ncount3  & count4  & count5  & count6  & ncount7  & ncount8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1);
	[s9] can9  & ncount1  & ncount2  & count3  & count4  & count5  & count6  & ncount7  & ncount8  & ncount10  -> (c9'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1);
	[s9] can9  & count1  & ncount2  & count3  & count4  & count5  & count6  & ncount7  & ncount8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1);
	[s9] can9  & ncount1  & count2  & count3  & count4  & count5  & count6  & ncount7  & ncount8  & ncount10  -> (c9'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1);
	[s9] can9  & count1  & count2  & count3  & count4  & count5  & count6  & ncount7  & ncount8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1);
	[s9] can9  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & ncount10  -> (c9'=0) & (c7'=c7+1);
	[s9] can9  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c7'=c7+1);
	[s9] can9  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & ncount10  -> (c9'=0) & (c2'=c2+1) & (c7'=c7+1);
	[s9] can9  & count1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c7'=c7+1);
	[s9] can9  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & ncount10  -> (c9'=0) & (c3'=c3+1) & (c7'=c7+1);
	[s9] can9  & count1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c3'=c3+1) & (c7'=c7+1);
	[s9] can9  & ncount1  & count2  & count3  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & ncount10  -> (c9'=0) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1);
	[s9] can9  & count1  & count2  & count3  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1);
	[s9] can9  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & count7  & ncount8  & ncount10  -> (c9'=0) & (c4'=c4+1) & (c7'=c7+1);
	[s9] can9  & count1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & count7  & ncount8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c4'=c4+1) & (c7'=c7+1);
	[s9] can9  & ncount1  & count2  & ncount3  & count4  & ncount5  & ncount6  & count7  & ncount8  & ncount10  -> (c9'=0) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1);
	[s9] can9  & count1  & count2  & ncount3  & count4  & ncount5  & ncount6  & count7  & ncount8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1);
	[s9] can9  & ncount1  & ncount2  & count3  & count4  & ncount5  & ncount6  & count7  & ncount8  & ncount10  -> (c9'=0) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1);
	[s9] can9  & count1  & ncount2  & count3  & count4  & ncount5  & ncount6  & count7  & ncount8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1);
	[s9] can9  & ncount1  & count2  & count3  & count4  & ncount5  & ncount6  & count7  & ncount8  & ncount10  -> (c9'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1);
	[s9] can9  & count1  & count2  & count3  & count4  & ncount5  & ncount6  & count7  & ncount8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1);
	[s9] can9  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & count7  & ncount8  & ncount10  -> (c9'=0) & (c5'=c5+1) & (c7'=c7+1);
	[s9] can9  & count1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & count7  & ncount8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c5'=c5+1) & (c7'=c7+1);
	[s9] can9  & ncount1  & count2  & ncount3  & ncount4  & count5  & ncount6  & count7  & ncount8  & ncount10  -> (c9'=0) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1);
	[s9] can9  & count1  & count2  & ncount3  & ncount4  & count5  & ncount6  & count7  & ncount8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1);
	[s9] can9  & ncount1  & ncount2  & count3  & ncount4  & count5  & ncount6  & count7  & ncount8  & ncount10  -> (c9'=0) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1);
	[s9] can9  & count1  & ncount2  & count3  & ncount4  & count5  & ncount6  & count7  & ncount8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1);
	[s9] can9  & ncount1  & count2  & count3  & ncount4  & count5  & ncount6  & count7  & ncount8  & ncount10  -> (c9'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1);
	[s9] can9  & count1  & count2  & count3  & ncount4  & count5  & ncount6  & count7  & ncount8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1);
	[s9] can9  & ncount1  & ncount2  & ncount3  & count4  & count5  & ncount6  & count7  & ncount8  & ncount10  -> (c9'=0) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1);
	[s9] can9  & count1  & ncount2  & ncount3  & count4  & count5  & ncount6  & count7  & ncount8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1);
	[s9] can9  & ncount1  & count2  & ncount3  & count4  & count5  & ncount6  & count7  & ncount8  & ncount10  -> (c9'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1);
	[s9] can9  & count1  & count2  & ncount3  & count4  & count5  & ncount6  & count7  & ncount8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1);
	[s9] can9  & ncount1  & ncount2  & count3  & count4  & count5  & ncount6  & count7  & ncount8  & ncount10  -> (c9'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1);
	[s9] can9  & count1  & ncount2  & count3  & count4  & count5  & ncount6  & count7  & ncount8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1);
	[s9] can9  & ncount1  & count2  & count3  & count4  & count5  & ncount6  & count7  & ncount8  & ncount10  -> (c9'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1);
	[s9] can9  & count1  & count2  & count3  & count4  & count5  & ncount6  & count7  & ncount8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1);
	[s9] can9  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & count7  & ncount8  & ncount10  -> (c9'=0) & (c6'=c6+1) & (c7'=c7+1);
	[s9] can9  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & count7  & ncount8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c6'=c6+1) & (c7'=c7+1);
	[s9] can9  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & count6  & count7  & ncount8  & ncount10  -> (c9'=0) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1);
	[s9] can9  & count1  & count2  & ncount3  & ncount4  & ncount5  & count6  & count7  & ncount8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1);
	[s9] can9  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & count6  & count7  & ncount8  & ncount10  -> (c9'=0) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1);
	[s9] can9  & count1  & ncount2  & count3  & ncount4  & ncount5  & count6  & count7  & ncount8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1);
	[s9] can9  & ncount1  & count2  & count3  & ncount4  & ncount5  & count6  & count7  & ncount8  & ncount10  -> (c9'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1);
	[s9] can9  & count1  & count2  & count3  & ncount4  & ncount5  & count6  & count7  & ncount8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1);
	[s9] can9  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & count6  & count7  & ncount8  & ncount10  -> (c9'=0) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1);
	[s9] can9  & count1  & ncount2  & ncount3  & count4  & ncount5  & count6  & count7  & ncount8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1);
	[s9] can9  & ncount1  & count2  & ncount3  & count4  & ncount5  & count6  & count7  & ncount8  & ncount10  -> (c9'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1);
	[s9] can9  & count1  & count2  & ncount3  & count4  & ncount5  & count6  & count7  & ncount8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1);
	[s9] can9  & ncount1  & ncount2  & count3  & count4  & ncount5  & count6  & count7  & ncount8  & ncount10  -> (c9'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1);
	[s9] can9  & count1  & ncount2  & count3  & count4  & ncount5  & count6  & count7  & ncount8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1);
	[s9] can9  & ncount1  & count2  & count3  & count4  & ncount5  & count6  & count7  & ncount8  & ncount10  -> (c9'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1);
	[s9] can9  & count1  & count2  & count3  & count4  & ncount5  & count6  & count7  & ncount8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1);
	[s9] can9  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & count6  & count7  & ncount8  & ncount10  -> (c9'=0) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s9] can9  & count1  & ncount2  & ncount3  & ncount4  & count5  & count6  & count7  & ncount8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s9] can9  & ncount1  & count2  & ncount3  & ncount4  & count5  & count6  & count7  & ncount8  & ncount10  -> (c9'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s9] can9  & count1  & count2  & ncount3  & ncount4  & count5  & count6  & count7  & ncount8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s9] can9  & ncount1  & ncount2  & count3  & ncount4  & count5  & count6  & count7  & ncount8  & ncount10  -> (c9'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s9] can9  & count1  & ncount2  & count3  & ncount4  & count5  & count6  & count7  & ncount8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s9] can9  & ncount1  & count2  & count3  & ncount4  & count5  & count6  & count7  & ncount8  & ncount10  -> (c9'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s9] can9  & count1  & count2  & count3  & ncount4  & count5  & count6  & count7  & ncount8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s9] can9  & ncount1  & ncount2  & ncount3  & count4  & count5  & count6  & count7  & ncount8  & ncount10  -> (c9'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s9] can9  & count1  & ncount2  & ncount3  & count4  & count5  & count6  & count7  & ncount8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s9] can9  & ncount1  & count2  & ncount3  & count4  & count5  & count6  & count7  & ncount8  & ncount10  -> (c9'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s9] can9  & count1  & count2  & ncount3  & count4  & count5  & count6  & count7  & ncount8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s9] can9  & ncount1  & ncount2  & count3  & count4  & count5  & count6  & count7  & ncount8  & ncount10  -> (c9'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s9] can9  & count1  & ncount2  & count3  & count4  & count5  & count6  & count7  & ncount8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s9] can9  & ncount1  & count2  & count3  & count4  & count5  & count6  & count7  & ncount8  & ncount10  -> (c9'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s9] can9  & count1  & count2  & count3  & count4  & count5  & count6  & count7  & ncount8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s9] can9  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & ncount10  -> (c9'=0) & (c8'=c8+1);
	[s9] can9  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c8'=c8+1);
	[s9] can9  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & ncount10  -> (c9'=0) & (c2'=c2+1) & (c8'=c8+1);
	[s9] can9  & count1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c8'=c8+1);
	[s9] can9  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & ncount10  -> (c9'=0) & (c3'=c3+1) & (c8'=c8+1);
	[s9] can9  & count1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c3'=c3+1) & (c8'=c8+1);
	[s9] can9  & ncount1  & count2  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & ncount10  -> (c9'=0) & (c2'=c2+1) & (c3'=c3+1) & (c8'=c8+1);
	[s9] can9  & count1  & count2  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c8'=c8+1);
	[s9] can9  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & count8  & ncount10  -> (c9'=0) & (c4'=c4+1) & (c8'=c8+1);
	[s9] can9  & count1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & count8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c4'=c4+1) & (c8'=c8+1);
	[s9] can9  & ncount1  & count2  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & count8  & ncount10  -> (c9'=0) & (c2'=c2+1) & (c4'=c4+1) & (c8'=c8+1);
	[s9] can9  & count1  & count2  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & count8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c8'=c8+1);
	[s9] can9  & ncount1  & ncount2  & count3  & count4  & ncount5  & ncount6  & ncount7  & count8  & ncount10  -> (c9'=0) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1);
	[s9] can9  & count1  & ncount2  & count3  & count4  & ncount5  & ncount6  & ncount7  & count8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1);
	[s9] can9  & ncount1  & count2  & count3  & count4  & ncount5  & ncount6  & ncount7  & count8  & ncount10  -> (c9'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1);
	[s9] can9  & count1  & count2  & count3  & count4  & ncount5  & ncount6  & ncount7  & count8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1);
	[s9] can9  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & count8  & ncount10  -> (c9'=0) & (c5'=c5+1) & (c8'=c8+1);
	[s9] can9  & count1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & count8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c5'=c5+1) & (c8'=c8+1);
	[s9] can9  & ncount1  & count2  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & count8  & ncount10  -> (c9'=0) & (c2'=c2+1) & (c5'=c5+1) & (c8'=c8+1);
	[s9] can9  & count1  & count2  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & count8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c8'=c8+1);
	[s9] can9  & ncount1  & ncount2  & count3  & ncount4  & count5  & ncount6  & ncount7  & count8  & ncount10  -> (c9'=0) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1);
	[s9] can9  & count1  & ncount2  & count3  & ncount4  & count5  & ncount6  & ncount7  & count8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1);
	[s9] can9  & ncount1  & count2  & count3  & ncount4  & count5  & ncount6  & ncount7  & count8  & ncount10  -> (c9'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1);
	[s9] can9  & count1  & count2  & count3  & ncount4  & count5  & ncount6  & ncount7  & count8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1);
	[s9] can9  & ncount1  & ncount2  & ncount3  & count4  & count5  & ncount6  & ncount7  & count8  & ncount10  -> (c9'=0) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1);
	[s9] can9  & count1  & ncount2  & ncount3  & count4  & count5  & ncount6  & ncount7  & count8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1);
	[s9] can9  & ncount1  & count2  & ncount3  & count4  & count5  & ncount6  & ncount7  & count8  & ncount10  -> (c9'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1);
	[s9] can9  & count1  & count2  & ncount3  & count4  & count5  & ncount6  & ncount7  & count8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1);
	[s9] can9  & ncount1  & ncount2  & count3  & count4  & count5  & ncount6  & ncount7  & count8  & ncount10  -> (c9'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1);
	[s9] can9  & count1  & ncount2  & count3  & count4  & count5  & ncount6  & ncount7  & count8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1);
	[s9] can9  & ncount1  & count2  & count3  & count4  & count5  & ncount6  & ncount7  & count8  & ncount10  -> (c9'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1);
	[s9] can9  & count1  & count2  & count3  & count4  & count5  & ncount6  & ncount7  & count8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1);
	[s9] can9  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & count8  & ncount10  -> (c9'=0) & (c6'=c6+1) & (c8'=c8+1);
	[s9] can9  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & count8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c6'=c6+1) & (c8'=c8+1);
	[s9] can9  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & count8  & ncount10  -> (c9'=0) & (c2'=c2+1) & (c6'=c6+1) & (c8'=c8+1);
	[s9] can9  & count1  & count2  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & count8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c8'=c8+1);
	[s9] can9  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & count6  & ncount7  & count8  & ncount10  -> (c9'=0) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1);
	[s9] can9  & count1  & ncount2  & count3  & ncount4  & ncount5  & count6  & ncount7  & count8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1);
	[s9] can9  & ncount1  & count2  & count3  & ncount4  & ncount5  & count6  & ncount7  & count8  & ncount10  -> (c9'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1);
	[s9] can9  & count1  & count2  & count3  & ncount4  & ncount5  & count6  & ncount7  & count8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1);
	[s9] can9  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & count6  & ncount7  & count8  & ncount10  -> (c9'=0) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1);
	[s9] can9  & count1  & ncount2  & ncount3  & count4  & ncount5  & count6  & ncount7  & count8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1);
	[s9] can9  & ncount1  & count2  & ncount3  & count4  & ncount5  & count6  & ncount7  & count8  & ncount10  -> (c9'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1);
	[s9] can9  & count1  & count2  & ncount3  & count4  & ncount5  & count6  & ncount7  & count8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1);
	[s9] can9  & ncount1  & ncount2  & count3  & count4  & ncount5  & count6  & ncount7  & count8  & ncount10  -> (c9'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1);
	[s9] can9  & count1  & ncount2  & count3  & count4  & ncount5  & count6  & ncount7  & count8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1);
	[s9] can9  & ncount1  & count2  & count3  & count4  & ncount5  & count6  & ncount7  & count8  & ncount10  -> (c9'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1);
	[s9] can9  & count1  & count2  & count3  & count4  & ncount5  & count6  & ncount7  & count8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1);
	[s9] can9  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & count6  & ncount7  & count8  & ncount10  -> (c9'=0) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s9] can9  & count1  & ncount2  & ncount3  & ncount4  & count5  & count6  & ncount7  & count8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s9] can9  & ncount1  & count2  & ncount3  & ncount4  & count5  & count6  & ncount7  & count8  & ncount10  -> (c9'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s9] can9  & count1  & count2  & ncount3  & ncount4  & count5  & count6  & ncount7  & count8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s9] can9  & ncount1  & ncount2  & count3  & ncount4  & count5  & count6  & ncount7  & count8  & ncount10  -> (c9'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s9] can9  & count1  & ncount2  & count3  & ncount4  & count5  & count6  & ncount7  & count8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s9] can9  & ncount1  & count2  & count3  & ncount4  & count5  & count6  & ncount7  & count8  & ncount10  -> (c9'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s9] can9  & count1  & count2  & count3  & ncount4  & count5  & count6  & ncount7  & count8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s9] can9  & ncount1  & ncount2  & ncount3  & count4  & count5  & count6  & ncount7  & count8  & ncount10  -> (c9'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s9] can9  & count1  & ncount2  & ncount3  & count4  & count5  & count6  & ncount7  & count8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s9] can9  & ncount1  & count2  & ncount3  & count4  & count5  & count6  & ncount7  & count8  & ncount10  -> (c9'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s9] can9  & count1  & count2  & ncount3  & count4  & count5  & count6  & ncount7  & count8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s9] can9  & ncount1  & ncount2  & count3  & count4  & count5  & count6  & ncount7  & count8  & ncount10  -> (c9'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s9] can9  & count1  & ncount2  & count3  & count4  & count5  & count6  & ncount7  & count8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s9] can9  & ncount1  & count2  & count3  & count4  & count5  & count6  & ncount7  & count8  & ncount10  -> (c9'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s9] can9  & count1  & count2  & count3  & count4  & count5  & count6  & ncount7  & count8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s9] can9  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & count8  & ncount10  -> (c9'=0) & (c7'=c7+1) & (c8'=c8+1);
	[s9] can9  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & count8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c7'=c7+1) & (c8'=c8+1);
	[s9] can9  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & count8  & ncount10  -> (c9'=0) & (c2'=c2+1) & (c7'=c7+1) & (c8'=c8+1);
	[s9] can9  & count1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & count8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c7'=c7+1) & (c8'=c8+1);
	[s9] can9  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & count7  & count8  & ncount10  -> (c9'=0) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1);
	[s9] can9  & count1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & count7  & count8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1);
	[s9] can9  & ncount1  & count2  & count3  & ncount4  & ncount5  & ncount6  & count7  & count8  & ncount10  -> (c9'=0) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1);
	[s9] can9  & count1  & count2  & count3  & ncount4  & ncount5  & ncount6  & count7  & count8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1);
	[s9] can9  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & count7  & count8  & ncount10  -> (c9'=0) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1);
	[s9] can9  & count1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & count7  & count8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1);
	[s9] can9  & ncount1  & count2  & ncount3  & count4  & ncount5  & ncount6  & count7  & count8  & ncount10  -> (c9'=0) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1);
	[s9] can9  & count1  & count2  & ncount3  & count4  & ncount5  & ncount6  & count7  & count8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1);
	[s9] can9  & ncount1  & ncount2  & count3  & count4  & ncount5  & ncount6  & count7  & count8  & ncount10  -> (c9'=0) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1);
	[s9] can9  & count1  & ncount2  & count3  & count4  & ncount5  & ncount6  & count7  & count8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1);
	[s9] can9  & ncount1  & count2  & count3  & count4  & ncount5  & ncount6  & count7  & count8  & ncount10  -> (c9'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1);
	[s9] can9  & count1  & count2  & count3  & count4  & ncount5  & ncount6  & count7  & count8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1);
	[s9] can9  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & count7  & count8  & ncount10  -> (c9'=0) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s9] can9  & count1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & count7  & count8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s9] can9  & ncount1  & count2  & ncount3  & ncount4  & count5  & ncount6  & count7  & count8  & ncount10  -> (c9'=0) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s9] can9  & count1  & count2  & ncount3  & ncount4  & count5  & ncount6  & count7  & count8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s9] can9  & ncount1  & ncount2  & count3  & ncount4  & count5  & ncount6  & count7  & count8  & ncount10  -> (c9'=0) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s9] can9  & count1  & ncount2  & count3  & ncount4  & count5  & ncount6  & count7  & count8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s9] can9  & ncount1  & count2  & count3  & ncount4  & count5  & ncount6  & count7  & count8  & ncount10  -> (c9'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s9] can9  & count1  & count2  & count3  & ncount4  & count5  & ncount6  & count7  & count8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s9] can9  & ncount1  & ncount2  & ncount3  & count4  & count5  & ncount6  & count7  & count8  & ncount10  -> (c9'=0) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s9] can9  & count1  & ncount2  & ncount3  & count4  & count5  & ncount6  & count7  & count8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s9] can9  & ncount1  & count2  & ncount3  & count4  & count5  & ncount6  & count7  & count8  & ncount10  -> (c9'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s9] can9  & count1  & count2  & ncount3  & count4  & count5  & ncount6  & count7  & count8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s9] can9  & ncount1  & ncount2  & count3  & count4  & count5  & ncount6  & count7  & count8  & ncount10  -> (c9'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s9] can9  & count1  & ncount2  & count3  & count4  & count5  & ncount6  & count7  & count8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s9] can9  & ncount1  & count2  & count3  & count4  & count5  & ncount6  & count7  & count8  & ncount10  -> (c9'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s9] can9  & count1  & count2  & count3  & count4  & count5  & ncount6  & count7  & count8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s9] can9  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & count7  & count8  & ncount10  -> (c9'=0) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s9] can9  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & count7  & count8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s9] can9  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & count6  & count7  & count8  & ncount10  -> (c9'=0) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s9] can9  & count1  & count2  & ncount3  & ncount4  & ncount5  & count6  & count7  & count8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s9] can9  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & count6  & count7  & count8  & ncount10  -> (c9'=0) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s9] can9  & count1  & ncount2  & count3  & ncount4  & ncount5  & count6  & count7  & count8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s9] can9  & ncount1  & count2  & count3  & ncount4  & ncount5  & count6  & count7  & count8  & ncount10  -> (c9'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s9] can9  & count1  & count2  & count3  & ncount4  & ncount5  & count6  & count7  & count8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s9] can9  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & count6  & count7  & count8  & ncount10  -> (c9'=0) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s9] can9  & count1  & ncount2  & ncount3  & count4  & ncount5  & count6  & count7  & count8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s9] can9  & ncount1  & count2  & ncount3  & count4  & ncount5  & count6  & count7  & count8  & ncount10  -> (c9'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s9] can9  & count1  & count2  & ncount3  & count4  & ncount5  & count6  & count7  & count8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s9] can9  & ncount1  & ncount2  & count3  & count4  & ncount5  & count6  & count7  & count8  & ncount10  -> (c9'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s9] can9  & count1  & ncount2  & count3  & count4  & ncount5  & count6  & count7  & count8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s9] can9  & ncount1  & count2  & count3  & count4  & ncount5  & count6  & count7  & count8  & ncount10  -> (c9'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s9] can9  & count1  & count2  & count3  & count4  & ncount5  & count6  & count7  & count8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s9] can9  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & count6  & count7  & count8  & ncount10  -> (c9'=0) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s9] can9  & count1  & ncount2  & ncount3  & ncount4  & count5  & count6  & count7  & count8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s9] can9  & ncount1  & count2  & ncount3  & ncount4  & count5  & count6  & count7  & count8  & ncount10  -> (c9'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s9] can9  & count1  & count2  & ncount3  & ncount4  & count5  & count6  & count7  & count8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s9] can9  & ncount1  & ncount2  & count3  & ncount4  & count5  & count6  & count7  & count8  & ncount10  -> (c9'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s9] can9  & count1  & ncount2  & count3  & ncount4  & count5  & count6  & count7  & count8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s9] can9  & ncount1  & count2  & count3  & ncount4  & count5  & count6  & count7  & count8  & ncount10  -> (c9'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s9] can9  & count1  & count2  & count3  & ncount4  & count5  & count6  & count7  & count8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s9] can9  & ncount1  & ncount2  & ncount3  & count4  & count5  & count6  & count7  & count8  & ncount10  -> (c9'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s9] can9  & count1  & ncount2  & ncount3  & count4  & count5  & count6  & count7  & count8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s9] can9  & ncount1  & count2  & ncount3  & count4  & count5  & count6  & count7  & count8  & ncount10  -> (c9'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s9] can9  & count1  & count2  & ncount3  & count4  & count5  & count6  & count7  & count8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s9] can9  & ncount1  & ncount2  & count3  & count4  & count5  & count6  & count7  & count8  & ncount10  -> (c9'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s9] can9  & count1  & ncount2  & count3  & count4  & count5  & count6  & count7  & count8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s9] can9  & ncount1  & count2  & count3  & count4  & count5  & count6  & count7  & count8  & ncount10  -> (c9'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s9] can9  & count1  & count2  & count3  & count4  & count5  & count6  & count7  & count8  & ncount10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s9] can9  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & count10  -> (c9'=0) & (c10'=c10+1);
	[s9] can9  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & count10  -> (c9'=0) & (c1'=c1+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & count10  -> (c9'=0) & (c2'=c2+1) & (c10'=c10+1);
	[s9] can9  & count1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & count10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & count10  -> (c9'=0) & (c3'=c3+1) & (c10'=c10+1);
	[s9] can9  & count1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & count10  -> (c9'=0) & (c1'=c1+1) & (c3'=c3+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & count2  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & count10  -> (c9'=0) & (c2'=c2+1) & (c3'=c3+1) & (c10'=c10+1);
	[s9] can9  & count1  & count2  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & count10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & count10  -> (c9'=0) & (c4'=c4+1) & (c10'=c10+1);
	[s9] can9  & count1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & count10  -> (c9'=0) & (c1'=c1+1) & (c4'=c4+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & count2  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & count10  -> (c9'=0) & (c2'=c2+1) & (c4'=c4+1) & (c10'=c10+1);
	[s9] can9  & count1  & count2  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & count10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & ncount2  & count3  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & count10  -> (c9'=0) & (c3'=c3+1) & (c4'=c4+1) & (c10'=c10+1);
	[s9] can9  & count1  & ncount2  & count3  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & count10  -> (c9'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & count2  & count3  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & count10  -> (c9'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c10'=c10+1);
	[s9] can9  & count1  & count2  & count3  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & count10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & count10  -> (c9'=0) & (c5'=c5+1) & (c10'=c10+1);
	[s9] can9  & count1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & count10  -> (c9'=0) & (c1'=c1+1) & (c5'=c5+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & count2  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & count10  -> (c9'=0) & (c2'=c2+1) & (c5'=c5+1) & (c10'=c10+1);
	[s9] can9  & count1  & count2  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & count10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & ncount2  & count3  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & count10  -> (c9'=0) & (c3'=c3+1) & (c5'=c5+1) & (c10'=c10+1);
	[s9] can9  & count1  & ncount2  & count3  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & count10  -> (c9'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & count2  & count3  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & count10  -> (c9'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c10'=c10+1);
	[s9] can9  & count1  & count2  & count3  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & count10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & ncount2  & ncount3  & count4  & count5  & ncount6  & ncount7  & ncount8  & count10  -> (c9'=0) & (c4'=c4+1) & (c5'=c5+1) & (c10'=c10+1);
	[s9] can9  & count1  & ncount2  & ncount3  & count4  & count5  & ncount6  & ncount7  & ncount8  & count10  -> (c9'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & count2  & ncount3  & count4  & count5  & ncount6  & ncount7  & ncount8  & count10  -> (c9'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c10'=c10+1);
	[s9] can9  & count1  & count2  & ncount3  & count4  & count5  & ncount6  & ncount7  & ncount8  & count10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & ncount2  & count3  & count4  & count5  & ncount6  & ncount7  & ncount8  & count10  -> (c9'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c10'=c10+1);
	[s9] can9  & count1  & ncount2  & count3  & count4  & count5  & ncount6  & ncount7  & ncount8  & count10  -> (c9'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & count2  & count3  & count4  & count5  & ncount6  & ncount7  & ncount8  & count10  -> (c9'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c10'=c10+1);
	[s9] can9  & count1  & count2  & count3  & count4  & count5  & ncount6  & ncount7  & ncount8  & count10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & count10  -> (c9'=0) & (c6'=c6+1) & (c10'=c10+1);
	[s9] can9  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & count10  -> (c9'=0) & (c1'=c1+1) & (c6'=c6+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & count10  -> (c9'=0) & (c2'=c2+1) & (c6'=c6+1) & (c10'=c10+1);
	[s9] can9  & count1  & count2  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & count10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & count10  -> (c9'=0) & (c3'=c3+1) & (c6'=c6+1) & (c10'=c10+1);
	[s9] can9  & count1  & ncount2  & count3  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & count10  -> (c9'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & count2  & count3  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & count10  -> (c9'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c10'=c10+1);
	[s9] can9  & count1  & count2  & count3  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & count10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & count6  & ncount7  & ncount8  & count10  -> (c9'=0) & (c4'=c4+1) & (c6'=c6+1) & (c10'=c10+1);
	[s9] can9  & count1  & ncount2  & ncount3  & count4  & ncount5  & count6  & ncount7  & ncount8  & count10  -> (c9'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & count2  & ncount3  & count4  & ncount5  & count6  & ncount7  & ncount8  & count10  -> (c9'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c10'=c10+1);
	[s9] can9  & count1  & count2  & ncount3  & count4  & ncount5  & count6  & ncount7  & ncount8  & count10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & ncount2  & count3  & count4  & ncount5  & count6  & ncount7  & ncount8  & count10  -> (c9'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c10'=c10+1);
	[s9] can9  & count1  & ncount2  & count3  & count4  & ncount5  & count6  & ncount7  & ncount8  & count10  -> (c9'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & count2  & count3  & count4  & ncount5  & count6  & ncount7  & ncount8  & count10  -> (c9'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c10'=c10+1);
	[s9] can9  & count1  & count2  & count3  & count4  & ncount5  & count6  & ncount7  & ncount8  & count10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & count6  & ncount7  & ncount8  & count10  -> (c9'=0) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s9] can9  & count1  & ncount2  & ncount3  & ncount4  & count5  & count6  & ncount7  & ncount8  & count10  -> (c9'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & count2  & ncount3  & ncount4  & count5  & count6  & ncount7  & ncount8  & count10  -> (c9'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s9] can9  & count1  & count2  & ncount3  & ncount4  & count5  & count6  & ncount7  & ncount8  & count10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & ncount2  & count3  & ncount4  & count5  & count6  & ncount7  & ncount8  & count10  -> (c9'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s9] can9  & count1  & ncount2  & count3  & ncount4  & count5  & count6  & ncount7  & ncount8  & count10  -> (c9'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & count2  & count3  & ncount4  & count5  & count6  & ncount7  & ncount8  & count10  -> (c9'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s9] can9  & count1  & count2  & count3  & ncount4  & count5  & count6  & ncount7  & ncount8  & count10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & ncount2  & ncount3  & count4  & count5  & count6  & ncount7  & ncount8  & count10  -> (c9'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s9] can9  & count1  & ncount2  & ncount3  & count4  & count5  & count6  & ncount7  & ncount8  & count10  -> (c9'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & count2  & ncount3  & count4  & count5  & count6  & ncount7  & ncount8  & count10  -> (c9'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s9] can9  & count1  & count2  & ncount3  & count4  & count5  & count6  & ncount7  & ncount8  & count10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & ncount2  & count3  & count4  & count5  & count6  & ncount7  & ncount8  & count10  -> (c9'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s9] can9  & count1  & ncount2  & count3  & count4  & count5  & count6  & ncount7  & ncount8  & count10  -> (c9'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & count2  & count3  & count4  & count5  & count6  & ncount7  & ncount8  & count10  -> (c9'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s9] can9  & count1  & count2  & count3  & count4  & count5  & count6  & ncount7  & ncount8  & count10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & count10  -> (c9'=0) & (c7'=c7+1) & (c10'=c10+1);
	[s9] can9  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & count10  -> (c9'=0) & (c1'=c1+1) & (c7'=c7+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & count10  -> (c9'=0) & (c2'=c2+1) & (c7'=c7+1) & (c10'=c10+1);
	[s9] can9  & count1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & count10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c7'=c7+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & count10  -> (c9'=0) & (c3'=c3+1) & (c7'=c7+1) & (c10'=c10+1);
	[s9] can9  & count1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & count10  -> (c9'=0) & (c1'=c1+1) & (c3'=c3+1) & (c7'=c7+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & count2  & count3  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & count10  -> (c9'=0) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1) & (c10'=c10+1);
	[s9] can9  & count1  & count2  & count3  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & count10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & count7  & ncount8  & count10  -> (c9'=0) & (c4'=c4+1) & (c7'=c7+1) & (c10'=c10+1);
	[s9] can9  & count1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & count7  & ncount8  & count10  -> (c9'=0) & (c1'=c1+1) & (c4'=c4+1) & (c7'=c7+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & count2  & ncount3  & count4  & ncount5  & ncount6  & count7  & ncount8  & count10  -> (c9'=0) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1) & (c10'=c10+1);
	[s9] can9  & count1  & count2  & ncount3  & count4  & ncount5  & ncount6  & count7  & ncount8  & count10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & ncount2  & count3  & count4  & ncount5  & ncount6  & count7  & ncount8  & count10  -> (c9'=0) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c10'=c10+1);
	[s9] can9  & count1  & ncount2  & count3  & count4  & ncount5  & ncount6  & count7  & ncount8  & count10  -> (c9'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & count2  & count3  & count4  & ncount5  & ncount6  & count7  & ncount8  & count10  -> (c9'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c10'=c10+1);
	[s9] can9  & count1  & count2  & count3  & count4  & ncount5  & ncount6  & count7  & ncount8  & count10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & count7  & ncount8  & count10  -> (c9'=0) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s9] can9  & count1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & count7  & ncount8  & count10  -> (c9'=0) & (c1'=c1+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & count2  & ncount3  & ncount4  & count5  & ncount6  & count7  & ncount8  & count10  -> (c9'=0) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s9] can9  & count1  & count2  & ncount3  & ncount4  & count5  & ncount6  & count7  & ncount8  & count10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & ncount2  & count3  & ncount4  & count5  & ncount6  & count7  & ncount8  & count10  -> (c9'=0) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s9] can9  & count1  & ncount2  & count3  & ncount4  & count5  & ncount6  & count7  & ncount8  & count10  -> (c9'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & count2  & count3  & ncount4  & count5  & ncount6  & count7  & ncount8  & count10  -> (c9'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s9] can9  & count1  & count2  & count3  & ncount4  & count5  & ncount6  & count7  & ncount8  & count10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & ncount2  & ncount3  & count4  & count5  & ncount6  & count7  & ncount8  & count10  -> (c9'=0) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s9] can9  & count1  & ncount2  & ncount3  & count4  & count5  & ncount6  & count7  & ncount8  & count10  -> (c9'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & count2  & ncount3  & count4  & count5  & ncount6  & count7  & ncount8  & count10  -> (c9'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s9] can9  & count1  & count2  & ncount3  & count4  & count5  & ncount6  & count7  & ncount8  & count10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & ncount2  & count3  & count4  & count5  & ncount6  & count7  & ncount8  & count10  -> (c9'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s9] can9  & count1  & ncount2  & count3  & count4  & count5  & ncount6  & count7  & ncount8  & count10  -> (c9'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & count2  & count3  & count4  & count5  & ncount6  & count7  & ncount8  & count10  -> (c9'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s9] can9  & count1  & count2  & count3  & count4  & count5  & ncount6  & count7  & ncount8  & count10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & count7  & ncount8  & count10  -> (c9'=0) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s9] can9  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & count7  & ncount8  & count10  -> (c9'=0) & (c1'=c1+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & count6  & count7  & ncount8  & count10  -> (c9'=0) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s9] can9  & count1  & count2  & ncount3  & ncount4  & ncount5  & count6  & count7  & ncount8  & count10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & count6  & count7  & ncount8  & count10  -> (c9'=0) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s9] can9  & count1  & ncount2  & count3  & ncount4  & ncount5  & count6  & count7  & ncount8  & count10  -> (c9'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & count2  & count3  & ncount4  & ncount5  & count6  & count7  & ncount8  & count10  -> (c9'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s9] can9  & count1  & count2  & count3  & ncount4  & ncount5  & count6  & count7  & ncount8  & count10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & count6  & count7  & ncount8  & count10  -> (c9'=0) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s9] can9  & count1  & ncount2  & ncount3  & count4  & ncount5  & count6  & count7  & ncount8  & count10  -> (c9'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & count2  & ncount3  & count4  & ncount5  & count6  & count7  & ncount8  & count10  -> (c9'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s9] can9  & count1  & count2  & ncount3  & count4  & ncount5  & count6  & count7  & ncount8  & count10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & ncount2  & count3  & count4  & ncount5  & count6  & count7  & ncount8  & count10  -> (c9'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s9] can9  & count1  & ncount2  & count3  & count4  & ncount5  & count6  & count7  & ncount8  & count10  -> (c9'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & count2  & count3  & count4  & ncount5  & count6  & count7  & ncount8  & count10  -> (c9'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s9] can9  & count1  & count2  & count3  & count4  & ncount5  & count6  & count7  & ncount8  & count10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & count6  & count7  & ncount8  & count10  -> (c9'=0) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s9] can9  & count1  & ncount2  & ncount3  & ncount4  & count5  & count6  & count7  & ncount8  & count10  -> (c9'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & count2  & ncount3  & ncount4  & count5  & count6  & count7  & ncount8  & count10  -> (c9'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s9] can9  & count1  & count2  & ncount3  & ncount4  & count5  & count6  & count7  & ncount8  & count10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & ncount2  & count3  & ncount4  & count5  & count6  & count7  & ncount8  & count10  -> (c9'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s9] can9  & count1  & ncount2  & count3  & ncount4  & count5  & count6  & count7  & ncount8  & count10  -> (c9'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & count2  & count3  & ncount4  & count5  & count6  & count7  & ncount8  & count10  -> (c9'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s9] can9  & count1  & count2  & count3  & ncount4  & count5  & count6  & count7  & ncount8  & count10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & ncount2  & ncount3  & count4  & count5  & count6  & count7  & ncount8  & count10  -> (c9'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s9] can9  & count1  & ncount2  & ncount3  & count4  & count5  & count6  & count7  & ncount8  & count10  -> (c9'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & count2  & ncount3  & count4  & count5  & count6  & count7  & ncount8  & count10  -> (c9'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s9] can9  & count1  & count2  & ncount3  & count4  & count5  & count6  & count7  & ncount8  & count10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & ncount2  & count3  & count4  & count5  & count6  & count7  & ncount8  & count10  -> (c9'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s9] can9  & count1  & ncount2  & count3  & count4  & count5  & count6  & count7  & ncount8  & count10  -> (c9'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & count2  & count3  & count4  & count5  & count6  & count7  & ncount8  & count10  -> (c9'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s9] can9  & count1  & count2  & count3  & count4  & count5  & count6  & count7  & ncount8  & count10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & count10  -> (c9'=0) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & count10  -> (c9'=0) & (c1'=c1+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & count10  -> (c9'=0) & (c2'=c2+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & count1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & count10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & count10  -> (c9'=0) & (c3'=c3+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & count1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & count10  -> (c9'=0) & (c1'=c1+1) & (c3'=c3+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & count2  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & count10  -> (c9'=0) & (c2'=c2+1) & (c3'=c3+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & count1  & count2  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & count10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & count8  & count10  -> (c9'=0) & (c4'=c4+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & count1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & count8  & count10  -> (c9'=0) & (c1'=c1+1) & (c4'=c4+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & count2  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & count8  & count10  -> (c9'=0) & (c2'=c2+1) & (c4'=c4+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & count1  & count2  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & count8  & count10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & ncount2  & count3  & count4  & ncount5  & ncount6  & ncount7  & count8  & count10  -> (c9'=0) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & count1  & ncount2  & count3  & count4  & ncount5  & ncount6  & ncount7  & count8  & count10  -> (c9'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & count2  & count3  & count4  & ncount5  & ncount6  & ncount7  & count8  & count10  -> (c9'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & count1  & count2  & count3  & count4  & ncount5  & ncount6  & ncount7  & count8  & count10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & count8  & count10  -> (c9'=0) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & count1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & count8  & count10  -> (c9'=0) & (c1'=c1+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & count2  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & count8  & count10  -> (c9'=0) & (c2'=c2+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & count1  & count2  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & count8  & count10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & ncount2  & count3  & ncount4  & count5  & ncount6  & ncount7  & count8  & count10  -> (c9'=0) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & count1  & ncount2  & count3  & ncount4  & count5  & ncount6  & ncount7  & count8  & count10  -> (c9'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & count2  & count3  & ncount4  & count5  & ncount6  & ncount7  & count8  & count10  -> (c9'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & count1  & count2  & count3  & ncount4  & count5  & ncount6  & ncount7  & count8  & count10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & ncount2  & ncount3  & count4  & count5  & ncount6  & ncount7  & count8  & count10  -> (c9'=0) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & count1  & ncount2  & ncount3  & count4  & count5  & ncount6  & ncount7  & count8  & count10  -> (c9'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & count2  & ncount3  & count4  & count5  & ncount6  & ncount7  & count8  & count10  -> (c9'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & count1  & count2  & ncount3  & count4  & count5  & ncount6  & ncount7  & count8  & count10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & ncount2  & count3  & count4  & count5  & ncount6  & ncount7  & count8  & count10  -> (c9'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & count1  & ncount2  & count3  & count4  & count5  & ncount6  & ncount7  & count8  & count10  -> (c9'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & count2  & count3  & count4  & count5  & ncount6  & ncount7  & count8  & count10  -> (c9'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & count1  & count2  & count3  & count4  & count5  & ncount6  & ncount7  & count8  & count10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & count8  & count10  -> (c9'=0) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & count8  & count10  -> (c9'=0) & (c1'=c1+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & count8  & count10  -> (c9'=0) & (c2'=c2+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & count1  & count2  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & count8  & count10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & count6  & ncount7  & count8  & count10  -> (c9'=0) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & count1  & ncount2  & count3  & ncount4  & ncount5  & count6  & ncount7  & count8  & count10  -> (c9'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & count2  & count3  & ncount4  & ncount5  & count6  & ncount7  & count8  & count10  -> (c9'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & count1  & count2  & count3  & ncount4  & ncount5  & count6  & ncount7  & count8  & count10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & count6  & ncount7  & count8  & count10  -> (c9'=0) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & count1  & ncount2  & ncount3  & count4  & ncount5  & count6  & ncount7  & count8  & count10  -> (c9'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & count2  & ncount3  & count4  & ncount5  & count6  & ncount7  & count8  & count10  -> (c9'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & count1  & count2  & ncount3  & count4  & ncount5  & count6  & ncount7  & count8  & count10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & ncount2  & count3  & count4  & ncount5  & count6  & ncount7  & count8  & count10  -> (c9'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & count1  & ncount2  & count3  & count4  & ncount5  & count6  & ncount7  & count8  & count10  -> (c9'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & count2  & count3  & count4  & ncount5  & count6  & ncount7  & count8  & count10  -> (c9'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & count1  & count2  & count3  & count4  & ncount5  & count6  & ncount7  & count8  & count10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & count6  & ncount7  & count8  & count10  -> (c9'=0) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & count1  & ncount2  & ncount3  & ncount4  & count5  & count6  & ncount7  & count8  & count10  -> (c9'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & count2  & ncount3  & ncount4  & count5  & count6  & ncount7  & count8  & count10  -> (c9'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & count1  & count2  & ncount3  & ncount4  & count5  & count6  & ncount7  & count8  & count10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & ncount2  & count3  & ncount4  & count5  & count6  & ncount7  & count8  & count10  -> (c9'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & count1  & ncount2  & count3  & ncount4  & count5  & count6  & ncount7  & count8  & count10  -> (c9'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & count2  & count3  & ncount4  & count5  & count6  & ncount7  & count8  & count10  -> (c9'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & count1  & count2  & count3  & ncount4  & count5  & count6  & ncount7  & count8  & count10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & ncount2  & ncount3  & count4  & count5  & count6  & ncount7  & count8  & count10  -> (c9'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & count1  & ncount2  & ncount3  & count4  & count5  & count6  & ncount7  & count8  & count10  -> (c9'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & count2  & ncount3  & count4  & count5  & count6  & ncount7  & count8  & count10  -> (c9'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & count1  & count2  & ncount3  & count4  & count5  & count6  & ncount7  & count8  & count10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & ncount2  & count3  & count4  & count5  & count6  & ncount7  & count8  & count10  -> (c9'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & count1  & ncount2  & count3  & count4  & count5  & count6  & ncount7  & count8  & count10  -> (c9'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & count2  & count3  & count4  & count5  & count6  & ncount7  & count8  & count10  -> (c9'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & count1  & count2  & count3  & count4  & count5  & count6  & ncount7  & count8  & count10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & count8  & count10  -> (c9'=0) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & count8  & count10  -> (c9'=0) & (c1'=c1+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & count8  & count10  -> (c9'=0) & (c2'=c2+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & count1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & count8  & count10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & count7  & count8  & count10  -> (c9'=0) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & count1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & count7  & count8  & count10  -> (c9'=0) & (c1'=c1+1) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & count2  & count3  & ncount4  & ncount5  & ncount6  & count7  & count8  & count10  -> (c9'=0) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & count1  & count2  & count3  & ncount4  & ncount5  & ncount6  & count7  & count8  & count10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & count7  & count8  & count10  -> (c9'=0) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & count1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & count7  & count8  & count10  -> (c9'=0) & (c1'=c1+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & count2  & ncount3  & count4  & ncount5  & ncount6  & count7  & count8  & count10  -> (c9'=0) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & count1  & count2  & ncount3  & count4  & ncount5  & ncount6  & count7  & count8  & count10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & ncount2  & count3  & count4  & ncount5  & ncount6  & count7  & count8  & count10  -> (c9'=0) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & count1  & ncount2  & count3  & count4  & ncount5  & ncount6  & count7  & count8  & count10  -> (c9'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & count2  & count3  & count4  & ncount5  & ncount6  & count7  & count8  & count10  -> (c9'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & count1  & count2  & count3  & count4  & ncount5  & ncount6  & count7  & count8  & count10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & count7  & count8  & count10  -> (c9'=0) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & count1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & count7  & count8  & count10  -> (c9'=0) & (c1'=c1+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & count2  & ncount3  & ncount4  & count5  & ncount6  & count7  & count8  & count10  -> (c9'=0) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & count1  & count2  & ncount3  & ncount4  & count5  & ncount6  & count7  & count8  & count10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & ncount2  & count3  & ncount4  & count5  & ncount6  & count7  & count8  & count10  -> (c9'=0) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & count1  & ncount2  & count3  & ncount4  & count5  & ncount6  & count7  & count8  & count10  -> (c9'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & count2  & count3  & ncount4  & count5  & ncount6  & count7  & count8  & count10  -> (c9'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & count1  & count2  & count3  & ncount4  & count5  & ncount6  & count7  & count8  & count10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & ncount2  & ncount3  & count4  & count5  & ncount6  & count7  & count8  & count10  -> (c9'=0) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & count1  & ncount2  & ncount3  & count4  & count5  & ncount6  & count7  & count8  & count10  -> (c9'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & count2  & ncount3  & count4  & count5  & ncount6  & count7  & count8  & count10  -> (c9'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & count1  & count2  & ncount3  & count4  & count5  & ncount6  & count7  & count8  & count10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & ncount2  & count3  & count4  & count5  & ncount6  & count7  & count8  & count10  -> (c9'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & count1  & ncount2  & count3  & count4  & count5  & ncount6  & count7  & count8  & count10  -> (c9'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & count2  & count3  & count4  & count5  & ncount6  & count7  & count8  & count10  -> (c9'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & count1  & count2  & count3  & count4  & count5  & ncount6  & count7  & count8  & count10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & count7  & count8  & count10  -> (c9'=0) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & count7  & count8  & count10  -> (c9'=0) & (c1'=c1+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & count6  & count7  & count8  & count10  -> (c9'=0) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & count1  & count2  & ncount3  & ncount4  & ncount5  & count6  & count7  & count8  & count10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & count6  & count7  & count8  & count10  -> (c9'=0) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & count1  & ncount2  & count3  & ncount4  & ncount5  & count6  & count7  & count8  & count10  -> (c9'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & count2  & count3  & ncount4  & ncount5  & count6  & count7  & count8  & count10  -> (c9'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & count1  & count2  & count3  & ncount4  & ncount5  & count6  & count7  & count8  & count10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & count6  & count7  & count8  & count10  -> (c9'=0) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & count1  & ncount2  & ncount3  & count4  & ncount5  & count6  & count7  & count8  & count10  -> (c9'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & count2  & ncount3  & count4  & ncount5  & count6  & count7  & count8  & count10  -> (c9'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & count1  & count2  & ncount3  & count4  & ncount5  & count6  & count7  & count8  & count10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & ncount2  & count3  & count4  & ncount5  & count6  & count7  & count8  & count10  -> (c9'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & count1  & ncount2  & count3  & count4  & ncount5  & count6  & count7  & count8  & count10  -> (c9'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & count2  & count3  & count4  & ncount5  & count6  & count7  & count8  & count10  -> (c9'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & count1  & count2  & count3  & count4  & ncount5  & count6  & count7  & count8  & count10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & count6  & count7  & count8  & count10  -> (c9'=0) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & count1  & ncount2  & ncount3  & ncount4  & count5  & count6  & count7  & count8  & count10  -> (c9'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & count2  & ncount3  & ncount4  & count5  & count6  & count7  & count8  & count10  -> (c9'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & count1  & count2  & ncount3  & ncount4  & count5  & count6  & count7  & count8  & count10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & ncount2  & count3  & ncount4  & count5  & count6  & count7  & count8  & count10  -> (c9'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & count1  & ncount2  & count3  & ncount4  & count5  & count6  & count7  & count8  & count10  -> (c9'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & count2  & count3  & ncount4  & count5  & count6  & count7  & count8  & count10  -> (c9'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & count1  & count2  & count3  & ncount4  & count5  & count6  & count7  & count8  & count10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & ncount2  & ncount3  & count4  & count5  & count6  & count7  & count8  & count10  -> (c9'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & count1  & ncount2  & ncount3  & count4  & count5  & count6  & count7  & count8  & count10  -> (c9'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & count2  & ncount3  & count4  & count5  & count6  & count7  & count8  & count10  -> (c9'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & count1  & count2  & ncount3  & count4  & count5  & count6  & count7  & count8  & count10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & ncount2  & count3  & count4  & count5  & count6  & count7  & count8  & count10  -> (c9'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & count1  & ncount2  & count3  & count4  & count5  & count6  & count7  & count8  & count10  -> (c9'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & ncount1  & count2  & count3  & count4  & count5  & count6  & count7  & count8  & count10  -> (c9'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s9] can9  & count1  & count2  & count3  & count4  & count5  & count6  & count7  & count8  & count10  -> (c9'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c10'=c10+1);
	[s10] can10  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  -> (c10'=0);
	[s10] can10  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  -> (c10'=0) & (c1'=c1+1);
	[s10] can10  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  -> (c10'=0) & (c2'=c2+1);
	[s10] can10  & count1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1);
	[s10] can10  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  -> (c10'=0) & (c3'=c3+1);
	[s10] can10  & count1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c3'=c3+1);
	[s10] can10  & ncount1  & count2  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  -> (c10'=0) & (c2'=c2+1) & (c3'=c3+1);
	[s10] can10  & count1  & count2  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1);
	[s10] can10  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  -> (c10'=0) & (c4'=c4+1);
	[s10] can10  & count1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c4'=c4+1);
	[s10] can10  & ncount1  & count2  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  -> (c10'=0) & (c2'=c2+1) & (c4'=c4+1);
	[s10] can10  & count1  & count2  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1);
	[s10] can10  & ncount1  & ncount2  & count3  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  -> (c10'=0) & (c3'=c3+1) & (c4'=c4+1);
	[s10] can10  & count1  & ncount2  & count3  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1);
	[s10] can10  & ncount1  & count2  & count3  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  -> (c10'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1);
	[s10] can10  & count1  & count2  & count3  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1);
	[s10] can10  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & ncount9  -> (c10'=0) & (c5'=c5+1);
	[s10] can10  & count1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c5'=c5+1);
	[s10] can10  & ncount1  & count2  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & ncount9  -> (c10'=0) & (c2'=c2+1) & (c5'=c5+1);
	[s10] can10  & count1  & count2  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1);
	[s10] can10  & ncount1  & ncount2  & count3  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & ncount9  -> (c10'=0) & (c3'=c3+1) & (c5'=c5+1);
	[s10] can10  & count1  & ncount2  & count3  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1);
	[s10] can10  & ncount1  & count2  & count3  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & ncount9  -> (c10'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1);
	[s10] can10  & count1  & count2  & count3  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1);
	[s10] can10  & ncount1  & ncount2  & ncount3  & count4  & count5  & ncount6  & ncount7  & ncount8  & ncount9  -> (c10'=0) & (c4'=c4+1) & (c5'=c5+1);
	[s10] can10  & count1  & ncount2  & ncount3  & count4  & count5  & ncount6  & ncount7  & ncount8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1);
	[s10] can10  & ncount1  & count2  & ncount3  & count4  & count5  & ncount6  & ncount7  & ncount8  & ncount9  -> (c10'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1);
	[s10] can10  & count1  & count2  & ncount3  & count4  & count5  & ncount6  & ncount7  & ncount8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1);
	[s10] can10  & ncount1  & ncount2  & count3  & count4  & count5  & ncount6  & ncount7  & ncount8  & ncount9  -> (c10'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1);
	[s10] can10  & count1  & ncount2  & count3  & count4  & count5  & ncount6  & ncount7  & ncount8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1);
	[s10] can10  & ncount1  & count2  & count3  & count4  & count5  & ncount6  & ncount7  & ncount8  & ncount9  -> (c10'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1);
	[s10] can10  & count1  & count2  & count3  & count4  & count5  & ncount6  & ncount7  & ncount8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1);
	[s10] can10  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & ncount9  -> (c10'=0) & (c6'=c6+1);
	[s10] can10  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c6'=c6+1);
	[s10] can10  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & ncount9  -> (c10'=0) & (c2'=c2+1) & (c6'=c6+1);
	[s10] can10  & count1  & count2  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1);
	[s10] can10  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & ncount9  -> (c10'=0) & (c3'=c3+1) & (c6'=c6+1);
	[s10] can10  & count1  & ncount2  & count3  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1);
	[s10] can10  & ncount1  & count2  & count3  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & ncount9  -> (c10'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1);
	[s10] can10  & count1  & count2  & count3  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1);
	[s10] can10  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & count6  & ncount7  & ncount8  & ncount9  -> (c10'=0) & (c4'=c4+1) & (c6'=c6+1);
	[s10] can10  & count1  & ncount2  & ncount3  & count4  & ncount5  & count6  & ncount7  & ncount8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1);
	[s10] can10  & ncount1  & count2  & ncount3  & count4  & ncount5  & count6  & ncount7  & ncount8  & ncount9  -> (c10'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1);
	[s10] can10  & count1  & count2  & ncount3  & count4  & ncount5  & count6  & ncount7  & ncount8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1);
	[s10] can10  & ncount1  & ncount2  & count3  & count4  & ncount5  & count6  & ncount7  & ncount8  & ncount9  -> (c10'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1);
	[s10] can10  & count1  & ncount2  & count3  & count4  & ncount5  & count6  & ncount7  & ncount8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1);
	[s10] can10  & ncount1  & count2  & count3  & count4  & ncount5  & count6  & ncount7  & ncount8  & ncount9  -> (c10'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1);
	[s10] can10  & count1  & count2  & count3  & count4  & ncount5  & count6  & ncount7  & ncount8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1);
	[s10] can10  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & count6  & ncount7  & ncount8  & ncount9  -> (c10'=0) & (c5'=c5+1) & (c6'=c6+1);
	[s10] can10  & count1  & ncount2  & ncount3  & ncount4  & count5  & count6  & ncount7  & ncount8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1);
	[s10] can10  & ncount1  & count2  & ncount3  & ncount4  & count5  & count6  & ncount7  & ncount8  & ncount9  -> (c10'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1);
	[s10] can10  & count1  & count2  & ncount3  & ncount4  & count5  & count6  & ncount7  & ncount8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1);
	[s10] can10  & ncount1  & ncount2  & count3  & ncount4  & count5  & count6  & ncount7  & ncount8  & ncount9  -> (c10'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1);
	[s10] can10  & count1  & ncount2  & count3  & ncount4  & count5  & count6  & ncount7  & ncount8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1);
	[s10] can10  & ncount1  & count2  & count3  & ncount4  & count5  & count6  & ncount7  & ncount8  & ncount9  -> (c10'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1);
	[s10] can10  & count1  & count2  & count3  & ncount4  & count5  & count6  & ncount7  & ncount8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1);
	[s10] can10  & ncount1  & ncount2  & ncount3  & count4  & count5  & count6  & ncount7  & ncount8  & ncount9  -> (c10'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1);
	[s10] can10  & count1  & ncount2  & ncount3  & count4  & count5  & count6  & ncount7  & ncount8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1);
	[s10] can10  & ncount1  & count2  & ncount3  & count4  & count5  & count6  & ncount7  & ncount8  & ncount9  -> (c10'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1);
	[s10] can10  & count1  & count2  & ncount3  & count4  & count5  & count6  & ncount7  & ncount8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1);
	[s10] can10  & ncount1  & ncount2  & count3  & count4  & count5  & count6  & ncount7  & ncount8  & ncount9  -> (c10'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1);
	[s10] can10  & count1  & ncount2  & count3  & count4  & count5  & count6  & ncount7  & ncount8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1);
	[s10] can10  & ncount1  & count2  & count3  & count4  & count5  & count6  & ncount7  & ncount8  & ncount9  -> (c10'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1);
	[s10] can10  & count1  & count2  & count3  & count4  & count5  & count6  & ncount7  & ncount8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1);
	[s10] can10  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & ncount9  -> (c10'=0) & (c7'=c7+1);
	[s10] can10  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c7'=c7+1);
	[s10] can10  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & ncount9  -> (c10'=0) & (c2'=c2+1) & (c7'=c7+1);
	[s10] can10  & count1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c7'=c7+1);
	[s10] can10  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & ncount9  -> (c10'=0) & (c3'=c3+1) & (c7'=c7+1);
	[s10] can10  & count1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c3'=c3+1) & (c7'=c7+1);
	[s10] can10  & ncount1  & count2  & count3  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & ncount9  -> (c10'=0) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1);
	[s10] can10  & count1  & count2  & count3  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1);
	[s10] can10  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & count7  & ncount8  & ncount9  -> (c10'=0) & (c4'=c4+1) & (c7'=c7+1);
	[s10] can10  & count1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & count7  & ncount8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c4'=c4+1) & (c7'=c7+1);
	[s10] can10  & ncount1  & count2  & ncount3  & count4  & ncount5  & ncount6  & count7  & ncount8  & ncount9  -> (c10'=0) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1);
	[s10] can10  & count1  & count2  & ncount3  & count4  & ncount5  & ncount6  & count7  & ncount8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1);
	[s10] can10  & ncount1  & ncount2  & count3  & count4  & ncount5  & ncount6  & count7  & ncount8  & ncount9  -> (c10'=0) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1);
	[s10] can10  & count1  & ncount2  & count3  & count4  & ncount5  & ncount6  & count7  & ncount8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1);
	[s10] can10  & ncount1  & count2  & count3  & count4  & ncount5  & ncount6  & count7  & ncount8  & ncount9  -> (c10'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1);
	[s10] can10  & count1  & count2  & count3  & count4  & ncount5  & ncount6  & count7  & ncount8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1);
	[s10] can10  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & count7  & ncount8  & ncount9  -> (c10'=0) & (c5'=c5+1) & (c7'=c7+1);
	[s10] can10  & count1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & count7  & ncount8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c5'=c5+1) & (c7'=c7+1);
	[s10] can10  & ncount1  & count2  & ncount3  & ncount4  & count5  & ncount6  & count7  & ncount8  & ncount9  -> (c10'=0) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1);
	[s10] can10  & count1  & count2  & ncount3  & ncount4  & count5  & ncount6  & count7  & ncount8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1);
	[s10] can10  & ncount1  & ncount2  & count3  & ncount4  & count5  & ncount6  & count7  & ncount8  & ncount9  -> (c10'=0) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1);
	[s10] can10  & count1  & ncount2  & count3  & ncount4  & count5  & ncount6  & count7  & ncount8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1);
	[s10] can10  & ncount1  & count2  & count3  & ncount4  & count5  & ncount6  & count7  & ncount8  & ncount9  -> (c10'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1);
	[s10] can10  & count1  & count2  & count3  & ncount4  & count5  & ncount6  & count7  & ncount8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1);
	[s10] can10  & ncount1  & ncount2  & ncount3  & count4  & count5  & ncount6  & count7  & ncount8  & ncount9  -> (c10'=0) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1);
	[s10] can10  & count1  & ncount2  & ncount3  & count4  & count5  & ncount6  & count7  & ncount8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1);
	[s10] can10  & ncount1  & count2  & ncount3  & count4  & count5  & ncount6  & count7  & ncount8  & ncount9  -> (c10'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1);
	[s10] can10  & count1  & count2  & ncount3  & count4  & count5  & ncount6  & count7  & ncount8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1);
	[s10] can10  & ncount1  & ncount2  & count3  & count4  & count5  & ncount6  & count7  & ncount8  & ncount9  -> (c10'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1);
	[s10] can10  & count1  & ncount2  & count3  & count4  & count5  & ncount6  & count7  & ncount8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1);
	[s10] can10  & ncount1  & count2  & count3  & count4  & count5  & ncount6  & count7  & ncount8  & ncount9  -> (c10'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1);
	[s10] can10  & count1  & count2  & count3  & count4  & count5  & ncount6  & count7  & ncount8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1);
	[s10] can10  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & count7  & ncount8  & ncount9  -> (c10'=0) & (c6'=c6+1) & (c7'=c7+1);
	[s10] can10  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & count7  & ncount8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c6'=c6+1) & (c7'=c7+1);
	[s10] can10  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & count6  & count7  & ncount8  & ncount9  -> (c10'=0) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1);
	[s10] can10  & count1  & count2  & ncount3  & ncount4  & ncount5  & count6  & count7  & ncount8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1);
	[s10] can10  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & count6  & count7  & ncount8  & ncount9  -> (c10'=0) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1);
	[s10] can10  & count1  & ncount2  & count3  & ncount4  & ncount5  & count6  & count7  & ncount8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1);
	[s10] can10  & ncount1  & count2  & count3  & ncount4  & ncount5  & count6  & count7  & ncount8  & ncount9  -> (c10'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1);
	[s10] can10  & count1  & count2  & count3  & ncount4  & ncount5  & count6  & count7  & ncount8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1);
	[s10] can10  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & count6  & count7  & ncount8  & ncount9  -> (c10'=0) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1);
	[s10] can10  & count1  & ncount2  & ncount3  & count4  & ncount5  & count6  & count7  & ncount8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1);
	[s10] can10  & ncount1  & count2  & ncount3  & count4  & ncount5  & count6  & count7  & ncount8  & ncount9  -> (c10'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1);
	[s10] can10  & count1  & count2  & ncount3  & count4  & ncount5  & count6  & count7  & ncount8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1);
	[s10] can10  & ncount1  & ncount2  & count3  & count4  & ncount5  & count6  & count7  & ncount8  & ncount9  -> (c10'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1);
	[s10] can10  & count1  & ncount2  & count3  & count4  & ncount5  & count6  & count7  & ncount8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1);
	[s10] can10  & ncount1  & count2  & count3  & count4  & ncount5  & count6  & count7  & ncount8  & ncount9  -> (c10'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1);
	[s10] can10  & count1  & count2  & count3  & count4  & ncount5  & count6  & count7  & ncount8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1);
	[s10] can10  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & count6  & count7  & ncount8  & ncount9  -> (c10'=0) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s10] can10  & count1  & ncount2  & ncount3  & ncount4  & count5  & count6  & count7  & ncount8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s10] can10  & ncount1  & count2  & ncount3  & ncount4  & count5  & count6  & count7  & ncount8  & ncount9  -> (c10'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s10] can10  & count1  & count2  & ncount3  & ncount4  & count5  & count6  & count7  & ncount8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s10] can10  & ncount1  & ncount2  & count3  & ncount4  & count5  & count6  & count7  & ncount8  & ncount9  -> (c10'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s10] can10  & count1  & ncount2  & count3  & ncount4  & count5  & count6  & count7  & ncount8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s10] can10  & ncount1  & count2  & count3  & ncount4  & count5  & count6  & count7  & ncount8  & ncount9  -> (c10'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s10] can10  & count1  & count2  & count3  & ncount4  & count5  & count6  & count7  & ncount8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s10] can10  & ncount1  & ncount2  & ncount3  & count4  & count5  & count6  & count7  & ncount8  & ncount9  -> (c10'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s10] can10  & count1  & ncount2  & ncount3  & count4  & count5  & count6  & count7  & ncount8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s10] can10  & ncount1  & count2  & ncount3  & count4  & count5  & count6  & count7  & ncount8  & ncount9  -> (c10'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s10] can10  & count1  & count2  & ncount3  & count4  & count5  & count6  & count7  & ncount8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s10] can10  & ncount1  & ncount2  & count3  & count4  & count5  & count6  & count7  & ncount8  & ncount9  -> (c10'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s10] can10  & count1  & ncount2  & count3  & count4  & count5  & count6  & count7  & ncount8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s10] can10  & ncount1  & count2  & count3  & count4  & count5  & count6  & count7  & ncount8  & ncount9  -> (c10'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s10] can10  & count1  & count2  & count3  & count4  & count5  & count6  & count7  & ncount8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1);
	[s10] can10  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & ncount9  -> (c10'=0) & (c8'=c8+1);
	[s10] can10  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c8'=c8+1);
	[s10] can10  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & ncount9  -> (c10'=0) & (c2'=c2+1) & (c8'=c8+1);
	[s10] can10  & count1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c8'=c8+1);
	[s10] can10  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & ncount9  -> (c10'=0) & (c3'=c3+1) & (c8'=c8+1);
	[s10] can10  & count1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c3'=c3+1) & (c8'=c8+1);
	[s10] can10  & ncount1  & count2  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & ncount9  -> (c10'=0) & (c2'=c2+1) & (c3'=c3+1) & (c8'=c8+1);
	[s10] can10  & count1  & count2  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c8'=c8+1);
	[s10] can10  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & count8  & ncount9  -> (c10'=0) & (c4'=c4+1) & (c8'=c8+1);
	[s10] can10  & count1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & count8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c4'=c4+1) & (c8'=c8+1);
	[s10] can10  & ncount1  & count2  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & count8  & ncount9  -> (c10'=0) & (c2'=c2+1) & (c4'=c4+1) & (c8'=c8+1);
	[s10] can10  & count1  & count2  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & count8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c8'=c8+1);
	[s10] can10  & ncount1  & ncount2  & count3  & count4  & ncount5  & ncount6  & ncount7  & count8  & ncount9  -> (c10'=0) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1);
	[s10] can10  & count1  & ncount2  & count3  & count4  & ncount5  & ncount6  & ncount7  & count8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1);
	[s10] can10  & ncount1  & count2  & count3  & count4  & ncount5  & ncount6  & ncount7  & count8  & ncount9  -> (c10'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1);
	[s10] can10  & count1  & count2  & count3  & count4  & ncount5  & ncount6  & ncount7  & count8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1);
	[s10] can10  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & count8  & ncount9  -> (c10'=0) & (c5'=c5+1) & (c8'=c8+1);
	[s10] can10  & count1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & count8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c5'=c5+1) & (c8'=c8+1);
	[s10] can10  & ncount1  & count2  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & count8  & ncount9  -> (c10'=0) & (c2'=c2+1) & (c5'=c5+1) & (c8'=c8+1);
	[s10] can10  & count1  & count2  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & count8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c8'=c8+1);
	[s10] can10  & ncount1  & ncount2  & count3  & ncount4  & count5  & ncount6  & ncount7  & count8  & ncount9  -> (c10'=0) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1);
	[s10] can10  & count1  & ncount2  & count3  & ncount4  & count5  & ncount6  & ncount7  & count8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1);
	[s10] can10  & ncount1  & count2  & count3  & ncount4  & count5  & ncount6  & ncount7  & count8  & ncount9  -> (c10'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1);
	[s10] can10  & count1  & count2  & count3  & ncount4  & count5  & ncount6  & ncount7  & count8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1);
	[s10] can10  & ncount1  & ncount2  & ncount3  & count4  & count5  & ncount6  & ncount7  & count8  & ncount9  -> (c10'=0) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1);
	[s10] can10  & count1  & ncount2  & ncount3  & count4  & count5  & ncount6  & ncount7  & count8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1);
	[s10] can10  & ncount1  & count2  & ncount3  & count4  & count5  & ncount6  & ncount7  & count8  & ncount9  -> (c10'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1);
	[s10] can10  & count1  & count2  & ncount3  & count4  & count5  & ncount6  & ncount7  & count8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1);
	[s10] can10  & ncount1  & ncount2  & count3  & count4  & count5  & ncount6  & ncount7  & count8  & ncount9  -> (c10'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1);
	[s10] can10  & count1  & ncount2  & count3  & count4  & count5  & ncount6  & ncount7  & count8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1);
	[s10] can10  & ncount1  & count2  & count3  & count4  & count5  & ncount6  & ncount7  & count8  & ncount9  -> (c10'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1);
	[s10] can10  & count1  & count2  & count3  & count4  & count5  & ncount6  & ncount7  & count8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1);
	[s10] can10  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & count8  & ncount9  -> (c10'=0) & (c6'=c6+1) & (c8'=c8+1);
	[s10] can10  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & count8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c6'=c6+1) & (c8'=c8+1);
	[s10] can10  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & count8  & ncount9  -> (c10'=0) & (c2'=c2+1) & (c6'=c6+1) & (c8'=c8+1);
	[s10] can10  & count1  & count2  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & count8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c8'=c8+1);
	[s10] can10  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & count6  & ncount7  & count8  & ncount9  -> (c10'=0) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1);
	[s10] can10  & count1  & ncount2  & count3  & ncount4  & ncount5  & count6  & ncount7  & count8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1);
	[s10] can10  & ncount1  & count2  & count3  & ncount4  & ncount5  & count6  & ncount7  & count8  & ncount9  -> (c10'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1);
	[s10] can10  & count1  & count2  & count3  & ncount4  & ncount5  & count6  & ncount7  & count8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1);
	[s10] can10  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & count6  & ncount7  & count8  & ncount9  -> (c10'=0) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1);
	[s10] can10  & count1  & ncount2  & ncount3  & count4  & ncount5  & count6  & ncount7  & count8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1);
	[s10] can10  & ncount1  & count2  & ncount3  & count4  & ncount5  & count6  & ncount7  & count8  & ncount9  -> (c10'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1);
	[s10] can10  & count1  & count2  & ncount3  & count4  & ncount5  & count6  & ncount7  & count8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1);
	[s10] can10  & ncount1  & ncount2  & count3  & count4  & ncount5  & count6  & ncount7  & count8  & ncount9  -> (c10'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1);
	[s10] can10  & count1  & ncount2  & count3  & count4  & ncount5  & count6  & ncount7  & count8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1);
	[s10] can10  & ncount1  & count2  & count3  & count4  & ncount5  & count6  & ncount7  & count8  & ncount9  -> (c10'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1);
	[s10] can10  & count1  & count2  & count3  & count4  & ncount5  & count6  & ncount7  & count8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1);
	[s10] can10  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & count6  & ncount7  & count8  & ncount9  -> (c10'=0) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s10] can10  & count1  & ncount2  & ncount3  & ncount4  & count5  & count6  & ncount7  & count8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s10] can10  & ncount1  & count2  & ncount3  & ncount4  & count5  & count6  & ncount7  & count8  & ncount9  -> (c10'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s10] can10  & count1  & count2  & ncount3  & ncount4  & count5  & count6  & ncount7  & count8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s10] can10  & ncount1  & ncount2  & count3  & ncount4  & count5  & count6  & ncount7  & count8  & ncount9  -> (c10'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s10] can10  & count1  & ncount2  & count3  & ncount4  & count5  & count6  & ncount7  & count8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s10] can10  & ncount1  & count2  & count3  & ncount4  & count5  & count6  & ncount7  & count8  & ncount9  -> (c10'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s10] can10  & count1  & count2  & count3  & ncount4  & count5  & count6  & ncount7  & count8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s10] can10  & ncount1  & ncount2  & ncount3  & count4  & count5  & count6  & ncount7  & count8  & ncount9  -> (c10'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s10] can10  & count1  & ncount2  & ncount3  & count4  & count5  & count6  & ncount7  & count8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s10] can10  & ncount1  & count2  & ncount3  & count4  & count5  & count6  & ncount7  & count8  & ncount9  -> (c10'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s10] can10  & count1  & count2  & ncount3  & count4  & count5  & count6  & ncount7  & count8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s10] can10  & ncount1  & ncount2  & count3  & count4  & count5  & count6  & ncount7  & count8  & ncount9  -> (c10'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s10] can10  & count1  & ncount2  & count3  & count4  & count5  & count6  & ncount7  & count8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s10] can10  & ncount1  & count2  & count3  & count4  & count5  & count6  & ncount7  & count8  & ncount9  -> (c10'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s10] can10  & count1  & count2  & count3  & count4  & count5  & count6  & ncount7  & count8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1);
	[s10] can10  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & count8  & ncount9  -> (c10'=0) & (c7'=c7+1) & (c8'=c8+1);
	[s10] can10  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & count8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c7'=c7+1) & (c8'=c8+1);
	[s10] can10  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & count8  & ncount9  -> (c10'=0) & (c2'=c2+1) & (c7'=c7+1) & (c8'=c8+1);
	[s10] can10  & count1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & count8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c7'=c7+1) & (c8'=c8+1);
	[s10] can10  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & count7  & count8  & ncount9  -> (c10'=0) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1);
	[s10] can10  & count1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & count7  & count8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1);
	[s10] can10  & ncount1  & count2  & count3  & ncount4  & ncount5  & ncount6  & count7  & count8  & ncount9  -> (c10'=0) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1);
	[s10] can10  & count1  & count2  & count3  & ncount4  & ncount5  & ncount6  & count7  & count8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1);
	[s10] can10  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & count7  & count8  & ncount9  -> (c10'=0) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1);
	[s10] can10  & count1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & count7  & count8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1);
	[s10] can10  & ncount1  & count2  & ncount3  & count4  & ncount5  & ncount6  & count7  & count8  & ncount9  -> (c10'=0) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1);
	[s10] can10  & count1  & count2  & ncount3  & count4  & ncount5  & ncount6  & count7  & count8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1);
	[s10] can10  & ncount1  & ncount2  & count3  & count4  & ncount5  & ncount6  & count7  & count8  & ncount9  -> (c10'=0) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1);
	[s10] can10  & count1  & ncount2  & count3  & count4  & ncount5  & ncount6  & count7  & count8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1);
	[s10] can10  & ncount1  & count2  & count3  & count4  & ncount5  & ncount6  & count7  & count8  & ncount9  -> (c10'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1);
	[s10] can10  & count1  & count2  & count3  & count4  & ncount5  & ncount6  & count7  & count8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1);
	[s10] can10  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & count7  & count8  & ncount9  -> (c10'=0) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s10] can10  & count1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & count7  & count8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s10] can10  & ncount1  & count2  & ncount3  & ncount4  & count5  & ncount6  & count7  & count8  & ncount9  -> (c10'=0) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s10] can10  & count1  & count2  & ncount3  & ncount4  & count5  & ncount6  & count7  & count8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s10] can10  & ncount1  & ncount2  & count3  & ncount4  & count5  & ncount6  & count7  & count8  & ncount9  -> (c10'=0) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s10] can10  & count1  & ncount2  & count3  & ncount4  & count5  & ncount6  & count7  & count8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s10] can10  & ncount1  & count2  & count3  & ncount4  & count5  & ncount6  & count7  & count8  & ncount9  -> (c10'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s10] can10  & count1  & count2  & count3  & ncount4  & count5  & ncount6  & count7  & count8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s10] can10  & ncount1  & ncount2  & ncount3  & count4  & count5  & ncount6  & count7  & count8  & ncount9  -> (c10'=0) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s10] can10  & count1  & ncount2  & ncount3  & count4  & count5  & ncount6  & count7  & count8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s10] can10  & ncount1  & count2  & ncount3  & count4  & count5  & ncount6  & count7  & count8  & ncount9  -> (c10'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s10] can10  & count1  & count2  & ncount3  & count4  & count5  & ncount6  & count7  & count8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s10] can10  & ncount1  & ncount2  & count3  & count4  & count5  & ncount6  & count7  & count8  & ncount9  -> (c10'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s10] can10  & count1  & ncount2  & count3  & count4  & count5  & ncount6  & count7  & count8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s10] can10  & ncount1  & count2  & count3  & count4  & count5  & ncount6  & count7  & count8  & ncount9  -> (c10'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s10] can10  & count1  & count2  & count3  & count4  & count5  & ncount6  & count7  & count8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1);
	[s10] can10  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & count7  & count8  & ncount9  -> (c10'=0) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s10] can10  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & count7  & count8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s10] can10  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & count6  & count7  & count8  & ncount9  -> (c10'=0) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s10] can10  & count1  & count2  & ncount3  & ncount4  & ncount5  & count6  & count7  & count8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s10] can10  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & count6  & count7  & count8  & ncount9  -> (c10'=0) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s10] can10  & count1  & ncount2  & count3  & ncount4  & ncount5  & count6  & count7  & count8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s10] can10  & ncount1  & count2  & count3  & ncount4  & ncount5  & count6  & count7  & count8  & ncount9  -> (c10'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s10] can10  & count1  & count2  & count3  & ncount4  & ncount5  & count6  & count7  & count8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s10] can10  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & count6  & count7  & count8  & ncount9  -> (c10'=0) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s10] can10  & count1  & ncount2  & ncount3  & count4  & ncount5  & count6  & count7  & count8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s10] can10  & ncount1  & count2  & ncount3  & count4  & ncount5  & count6  & count7  & count8  & ncount9  -> (c10'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s10] can10  & count1  & count2  & ncount3  & count4  & ncount5  & count6  & count7  & count8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s10] can10  & ncount1  & ncount2  & count3  & count4  & ncount5  & count6  & count7  & count8  & ncount9  -> (c10'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s10] can10  & count1  & ncount2  & count3  & count4  & ncount5  & count6  & count7  & count8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s10] can10  & ncount1  & count2  & count3  & count4  & ncount5  & count6  & count7  & count8  & ncount9  -> (c10'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s10] can10  & count1  & count2  & count3  & count4  & ncount5  & count6  & count7  & count8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s10] can10  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & count6  & count7  & count8  & ncount9  -> (c10'=0) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s10] can10  & count1  & ncount2  & ncount3  & ncount4  & count5  & count6  & count7  & count8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s10] can10  & ncount1  & count2  & ncount3  & ncount4  & count5  & count6  & count7  & count8  & ncount9  -> (c10'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s10] can10  & count1  & count2  & ncount3  & ncount4  & count5  & count6  & count7  & count8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s10] can10  & ncount1  & ncount2  & count3  & ncount4  & count5  & count6  & count7  & count8  & ncount9  -> (c10'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s10] can10  & count1  & ncount2  & count3  & ncount4  & count5  & count6  & count7  & count8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s10] can10  & ncount1  & count2  & count3  & ncount4  & count5  & count6  & count7  & count8  & ncount9  -> (c10'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s10] can10  & count1  & count2  & count3  & ncount4  & count5  & count6  & count7  & count8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s10] can10  & ncount1  & ncount2  & ncount3  & count4  & count5  & count6  & count7  & count8  & ncount9  -> (c10'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s10] can10  & count1  & ncount2  & ncount3  & count4  & count5  & count6  & count7  & count8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s10] can10  & ncount1  & count2  & ncount3  & count4  & count5  & count6  & count7  & count8  & ncount9  -> (c10'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s10] can10  & count1  & count2  & ncount3  & count4  & count5  & count6  & count7  & count8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s10] can10  & ncount1  & ncount2  & count3  & count4  & count5  & count6  & count7  & count8  & ncount9  -> (c10'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s10] can10  & count1  & ncount2  & count3  & count4  & count5  & count6  & count7  & count8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s10] can10  & ncount1  & count2  & count3  & count4  & count5  & count6  & count7  & count8  & ncount9  -> (c10'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s10] can10  & count1  & count2  & count3  & count4  & count5  & count6  & count7  & count8  & ncount9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1);
	[s10] can10  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & count9  -> (c10'=0) & (c9'=c9+1);
	[s10] can10  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & count9  -> (c10'=0) & (c1'=c1+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & count9  -> (c10'=0) & (c2'=c2+1) & (c9'=c9+1);
	[s10] can10  & count1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & count9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & count9  -> (c10'=0) & (c3'=c3+1) & (c9'=c9+1);
	[s10] can10  & count1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & count9  -> (c10'=0) & (c1'=c1+1) & (c3'=c3+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & count2  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & count9  -> (c10'=0) & (c2'=c2+1) & (c3'=c3+1) & (c9'=c9+1);
	[s10] can10  & count1  & count2  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & ncount8  & count9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & count9  -> (c10'=0) & (c4'=c4+1) & (c9'=c9+1);
	[s10] can10  & count1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & count9  -> (c10'=0) & (c1'=c1+1) & (c4'=c4+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & count2  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & count9  -> (c10'=0) & (c2'=c2+1) & (c4'=c4+1) & (c9'=c9+1);
	[s10] can10  & count1  & count2  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & count9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & ncount2  & count3  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & count9  -> (c10'=0) & (c3'=c3+1) & (c4'=c4+1) & (c9'=c9+1);
	[s10] can10  & count1  & ncount2  & count3  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & count9  -> (c10'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & count2  & count3  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & count9  -> (c10'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c9'=c9+1);
	[s10] can10  & count1  & count2  & count3  & count4  & ncount5  & ncount6  & ncount7  & ncount8  & count9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & count9  -> (c10'=0) & (c5'=c5+1) & (c9'=c9+1);
	[s10] can10  & count1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & count9  -> (c10'=0) & (c1'=c1+1) & (c5'=c5+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & count2  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & count9  -> (c10'=0) & (c2'=c2+1) & (c5'=c5+1) & (c9'=c9+1);
	[s10] can10  & count1  & count2  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & count9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & ncount2  & count3  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & count9  -> (c10'=0) & (c3'=c3+1) & (c5'=c5+1) & (c9'=c9+1);
	[s10] can10  & count1  & ncount2  & count3  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & count9  -> (c10'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & count2  & count3  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & count9  -> (c10'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c9'=c9+1);
	[s10] can10  & count1  & count2  & count3  & ncount4  & count5  & ncount6  & ncount7  & ncount8  & count9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & ncount2  & ncount3  & count4  & count5  & ncount6  & ncount7  & ncount8  & count9  -> (c10'=0) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1);
	[s10] can10  & count1  & ncount2  & ncount3  & count4  & count5  & ncount6  & ncount7  & ncount8  & count9  -> (c10'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & count2  & ncount3  & count4  & count5  & ncount6  & ncount7  & ncount8  & count9  -> (c10'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1);
	[s10] can10  & count1  & count2  & ncount3  & count4  & count5  & ncount6  & ncount7  & ncount8  & count9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & ncount2  & count3  & count4  & count5  & ncount6  & ncount7  & ncount8  & count9  -> (c10'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1);
	[s10] can10  & count1  & ncount2  & count3  & count4  & count5  & ncount6  & ncount7  & ncount8  & count9  -> (c10'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & count2  & count3  & count4  & count5  & ncount6  & ncount7  & ncount8  & count9  -> (c10'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1);
	[s10] can10  & count1  & count2  & count3  & count4  & count5  & ncount6  & ncount7  & ncount8  & count9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & count9  -> (c10'=0) & (c6'=c6+1) & (c9'=c9+1);
	[s10] can10  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & count9  -> (c10'=0) & (c1'=c1+1) & (c6'=c6+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & count9  -> (c10'=0) & (c2'=c2+1) & (c6'=c6+1) & (c9'=c9+1);
	[s10] can10  & count1  & count2  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & count9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & count9  -> (c10'=0) & (c3'=c3+1) & (c6'=c6+1) & (c9'=c9+1);
	[s10] can10  & count1  & ncount2  & count3  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & count9  -> (c10'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & count2  & count3  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & count9  -> (c10'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c9'=c9+1);
	[s10] can10  & count1  & count2  & count3  & ncount4  & ncount5  & count6  & ncount7  & ncount8  & count9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & count6  & ncount7  & ncount8  & count9  -> (c10'=0) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1);
	[s10] can10  & count1  & ncount2  & ncount3  & count4  & ncount5  & count6  & ncount7  & ncount8  & count9  -> (c10'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & count2  & ncount3  & count4  & ncount5  & count6  & ncount7  & ncount8  & count9  -> (c10'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1);
	[s10] can10  & count1  & count2  & ncount3  & count4  & ncount5  & count6  & ncount7  & ncount8  & count9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & ncount2  & count3  & count4  & ncount5  & count6  & ncount7  & ncount8  & count9  -> (c10'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1);
	[s10] can10  & count1  & ncount2  & count3  & count4  & ncount5  & count6  & ncount7  & ncount8  & count9  -> (c10'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & count2  & count3  & count4  & ncount5  & count6  & ncount7  & ncount8  & count9  -> (c10'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1);
	[s10] can10  & count1  & count2  & count3  & count4  & ncount5  & count6  & ncount7  & ncount8  & count9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & count6  & ncount7  & ncount8  & count9  -> (c10'=0) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s10] can10  & count1  & ncount2  & ncount3  & ncount4  & count5  & count6  & ncount7  & ncount8  & count9  -> (c10'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & count2  & ncount3  & ncount4  & count5  & count6  & ncount7  & ncount8  & count9  -> (c10'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s10] can10  & count1  & count2  & ncount3  & ncount4  & count5  & count6  & ncount7  & ncount8  & count9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & ncount2  & count3  & ncount4  & count5  & count6  & ncount7  & ncount8  & count9  -> (c10'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s10] can10  & count1  & ncount2  & count3  & ncount4  & count5  & count6  & ncount7  & ncount8  & count9  -> (c10'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & count2  & count3  & ncount4  & count5  & count6  & ncount7  & ncount8  & count9  -> (c10'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s10] can10  & count1  & count2  & count3  & ncount4  & count5  & count6  & ncount7  & ncount8  & count9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & ncount2  & ncount3  & count4  & count5  & count6  & ncount7  & ncount8  & count9  -> (c10'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s10] can10  & count1  & ncount2  & ncount3  & count4  & count5  & count6  & ncount7  & ncount8  & count9  -> (c10'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & count2  & ncount3  & count4  & count5  & count6  & ncount7  & ncount8  & count9  -> (c10'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s10] can10  & count1  & count2  & ncount3  & count4  & count5  & count6  & ncount7  & ncount8  & count9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & ncount2  & count3  & count4  & count5  & count6  & ncount7  & ncount8  & count9  -> (c10'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s10] can10  & count1  & ncount2  & count3  & count4  & count5  & count6  & ncount7  & ncount8  & count9  -> (c10'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & count2  & count3  & count4  & count5  & count6  & ncount7  & ncount8  & count9  -> (c10'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s10] can10  & count1  & count2  & count3  & count4  & count5  & count6  & ncount7  & ncount8  & count9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & count9  -> (c10'=0) & (c7'=c7+1) & (c9'=c9+1);
	[s10] can10  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & count9  -> (c10'=0) & (c1'=c1+1) & (c7'=c7+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & count9  -> (c10'=0) & (c2'=c2+1) & (c7'=c7+1) & (c9'=c9+1);
	[s10] can10  & count1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & count9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c7'=c7+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & count9  -> (c10'=0) & (c3'=c3+1) & (c7'=c7+1) & (c9'=c9+1);
	[s10] can10  & count1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & count9  -> (c10'=0) & (c1'=c1+1) & (c3'=c3+1) & (c7'=c7+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & count2  & count3  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & count9  -> (c10'=0) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1) & (c9'=c9+1);
	[s10] can10  & count1  & count2  & count3  & ncount4  & ncount5  & ncount6  & count7  & ncount8  & count9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & count7  & ncount8  & count9  -> (c10'=0) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1);
	[s10] can10  & count1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & count7  & ncount8  & count9  -> (c10'=0) & (c1'=c1+1) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & count2  & ncount3  & count4  & ncount5  & ncount6  & count7  & ncount8  & count9  -> (c10'=0) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1);
	[s10] can10  & count1  & count2  & ncount3  & count4  & ncount5  & ncount6  & count7  & ncount8  & count9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & ncount2  & count3  & count4  & ncount5  & ncount6  & count7  & ncount8  & count9  -> (c10'=0) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1);
	[s10] can10  & count1  & ncount2  & count3  & count4  & ncount5  & ncount6  & count7  & ncount8  & count9  -> (c10'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & count2  & count3  & count4  & ncount5  & ncount6  & count7  & ncount8  & count9  -> (c10'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1);
	[s10] can10  & count1  & count2  & count3  & count4  & ncount5  & ncount6  & count7  & ncount8  & count9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & count7  & ncount8  & count9  -> (c10'=0) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s10] can10  & count1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & count7  & ncount8  & count9  -> (c10'=0) & (c1'=c1+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & count2  & ncount3  & ncount4  & count5  & ncount6  & count7  & ncount8  & count9  -> (c10'=0) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s10] can10  & count1  & count2  & ncount3  & ncount4  & count5  & ncount6  & count7  & ncount8  & count9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & ncount2  & count3  & ncount4  & count5  & ncount6  & count7  & ncount8  & count9  -> (c10'=0) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s10] can10  & count1  & ncount2  & count3  & ncount4  & count5  & ncount6  & count7  & ncount8  & count9  -> (c10'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & count2  & count3  & ncount4  & count5  & ncount6  & count7  & ncount8  & count9  -> (c10'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s10] can10  & count1  & count2  & count3  & ncount4  & count5  & ncount6  & count7  & ncount8  & count9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & ncount2  & ncount3  & count4  & count5  & ncount6  & count7  & ncount8  & count9  -> (c10'=0) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s10] can10  & count1  & ncount2  & ncount3  & count4  & count5  & ncount6  & count7  & ncount8  & count9  -> (c10'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & count2  & ncount3  & count4  & count5  & ncount6  & count7  & ncount8  & count9  -> (c10'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s10] can10  & count1  & count2  & ncount3  & count4  & count5  & ncount6  & count7  & ncount8  & count9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & ncount2  & count3  & count4  & count5  & ncount6  & count7  & ncount8  & count9  -> (c10'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s10] can10  & count1  & ncount2  & count3  & count4  & count5  & ncount6  & count7  & ncount8  & count9  -> (c10'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & count2  & count3  & count4  & count5  & ncount6  & count7  & ncount8  & count9  -> (c10'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s10] can10  & count1  & count2  & count3  & count4  & count5  & ncount6  & count7  & ncount8  & count9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & count7  & ncount8  & count9  -> (c10'=0) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s10] can10  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & count7  & ncount8  & count9  -> (c10'=0) & (c1'=c1+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & count6  & count7  & ncount8  & count9  -> (c10'=0) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s10] can10  & count1  & count2  & ncount3  & ncount4  & ncount5  & count6  & count7  & ncount8  & count9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & count6  & count7  & ncount8  & count9  -> (c10'=0) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s10] can10  & count1  & ncount2  & count3  & ncount4  & ncount5  & count6  & count7  & ncount8  & count9  -> (c10'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & count2  & count3  & ncount4  & ncount5  & count6  & count7  & ncount8  & count9  -> (c10'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s10] can10  & count1  & count2  & count3  & ncount4  & ncount5  & count6  & count7  & ncount8  & count9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & count6  & count7  & ncount8  & count9  -> (c10'=0) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s10] can10  & count1  & ncount2  & ncount3  & count4  & ncount5  & count6  & count7  & ncount8  & count9  -> (c10'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & count2  & ncount3  & count4  & ncount5  & count6  & count7  & ncount8  & count9  -> (c10'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s10] can10  & count1  & count2  & ncount3  & count4  & ncount5  & count6  & count7  & ncount8  & count9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & ncount2  & count3  & count4  & ncount5  & count6  & count7  & ncount8  & count9  -> (c10'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s10] can10  & count1  & ncount2  & count3  & count4  & ncount5  & count6  & count7  & ncount8  & count9  -> (c10'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & count2  & count3  & count4  & ncount5  & count6  & count7  & ncount8  & count9  -> (c10'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s10] can10  & count1  & count2  & count3  & count4  & ncount5  & count6  & count7  & ncount8  & count9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & count6  & count7  & ncount8  & count9  -> (c10'=0) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s10] can10  & count1  & ncount2  & ncount3  & ncount4  & count5  & count6  & count7  & ncount8  & count9  -> (c10'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & count2  & ncount3  & ncount4  & count5  & count6  & count7  & ncount8  & count9  -> (c10'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s10] can10  & count1  & count2  & ncount3  & ncount4  & count5  & count6  & count7  & ncount8  & count9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & ncount2  & count3  & ncount4  & count5  & count6  & count7  & ncount8  & count9  -> (c10'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s10] can10  & count1  & ncount2  & count3  & ncount4  & count5  & count6  & count7  & ncount8  & count9  -> (c10'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & count2  & count3  & ncount4  & count5  & count6  & count7  & ncount8  & count9  -> (c10'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s10] can10  & count1  & count2  & count3  & ncount4  & count5  & count6  & count7  & ncount8  & count9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & ncount2  & ncount3  & count4  & count5  & count6  & count7  & ncount8  & count9  -> (c10'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s10] can10  & count1  & ncount2  & ncount3  & count4  & count5  & count6  & count7  & ncount8  & count9  -> (c10'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & count2  & ncount3  & count4  & count5  & count6  & count7  & ncount8  & count9  -> (c10'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s10] can10  & count1  & count2  & ncount3  & count4  & count5  & count6  & count7  & ncount8  & count9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & ncount2  & count3  & count4  & count5  & count6  & count7  & ncount8  & count9  -> (c10'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s10] can10  & count1  & ncount2  & count3  & count4  & count5  & count6  & count7  & ncount8  & count9  -> (c10'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & count2  & count3  & count4  & count5  & count6  & count7  & ncount8  & count9  -> (c10'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s10] can10  & count1  & count2  & count3  & count4  & count5  & count6  & count7  & ncount8  & count9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & count9  -> (c10'=0) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & count9  -> (c10'=0) & (c1'=c1+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & count9  -> (c10'=0) & (c2'=c2+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & count1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & count9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & count9  -> (c10'=0) & (c3'=c3+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & count1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & count9  -> (c10'=0) & (c1'=c1+1) & (c3'=c3+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & count2  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & count9  -> (c10'=0) & (c2'=c2+1) & (c3'=c3+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & count1  & count2  & count3  & ncount4  & ncount5  & ncount6  & ncount7  & count8  & count9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & count8  & count9  -> (c10'=0) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & count1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & count8  & count9  -> (c10'=0) & (c1'=c1+1) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & count2  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & count8  & count9  -> (c10'=0) & (c2'=c2+1) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & count1  & count2  & ncount3  & count4  & ncount5  & ncount6  & ncount7  & count8  & count9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & ncount2  & count3  & count4  & ncount5  & ncount6  & ncount7  & count8  & count9  -> (c10'=0) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & count1  & ncount2  & count3  & count4  & ncount5  & ncount6  & ncount7  & count8  & count9  -> (c10'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & count2  & count3  & count4  & ncount5  & ncount6  & ncount7  & count8  & count9  -> (c10'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & count1  & count2  & count3  & count4  & ncount5  & ncount6  & ncount7  & count8  & count9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & count8  & count9  -> (c10'=0) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & count1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & count8  & count9  -> (c10'=0) & (c1'=c1+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & count2  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & count8  & count9  -> (c10'=0) & (c2'=c2+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & count1  & count2  & ncount3  & ncount4  & count5  & ncount6  & ncount7  & count8  & count9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & ncount2  & count3  & ncount4  & count5  & ncount6  & ncount7  & count8  & count9  -> (c10'=0) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & count1  & ncount2  & count3  & ncount4  & count5  & ncount6  & ncount7  & count8  & count9  -> (c10'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & count2  & count3  & ncount4  & count5  & ncount6  & ncount7  & count8  & count9  -> (c10'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & count1  & count2  & count3  & ncount4  & count5  & ncount6  & ncount7  & count8  & count9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & ncount2  & ncount3  & count4  & count5  & ncount6  & ncount7  & count8  & count9  -> (c10'=0) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & count1  & ncount2  & ncount3  & count4  & count5  & ncount6  & ncount7  & count8  & count9  -> (c10'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & count2  & ncount3  & count4  & count5  & ncount6  & ncount7  & count8  & count9  -> (c10'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & count1  & count2  & ncount3  & count4  & count5  & ncount6  & ncount7  & count8  & count9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & ncount2  & count3  & count4  & count5  & ncount6  & ncount7  & count8  & count9  -> (c10'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & count1  & ncount2  & count3  & count4  & count5  & ncount6  & ncount7  & count8  & count9  -> (c10'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & count2  & count3  & count4  & count5  & ncount6  & ncount7  & count8  & count9  -> (c10'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & count1  & count2  & count3  & count4  & count5  & ncount6  & ncount7  & count8  & count9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & count8  & count9  -> (c10'=0) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & count8  & count9  -> (c10'=0) & (c1'=c1+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & count8  & count9  -> (c10'=0) & (c2'=c2+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & count1  & count2  & ncount3  & ncount4  & ncount5  & count6  & ncount7  & count8  & count9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & count6  & ncount7  & count8  & count9  -> (c10'=0) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & count1  & ncount2  & count3  & ncount4  & ncount5  & count6  & ncount7  & count8  & count9  -> (c10'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & count2  & count3  & ncount4  & ncount5  & count6  & ncount7  & count8  & count9  -> (c10'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & count1  & count2  & count3  & ncount4  & ncount5  & count6  & ncount7  & count8  & count9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & count6  & ncount7  & count8  & count9  -> (c10'=0) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & count1  & ncount2  & ncount3  & count4  & ncount5  & count6  & ncount7  & count8  & count9  -> (c10'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & count2  & ncount3  & count4  & ncount5  & count6  & ncount7  & count8  & count9  -> (c10'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & count1  & count2  & ncount3  & count4  & ncount5  & count6  & ncount7  & count8  & count9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & ncount2  & count3  & count4  & ncount5  & count6  & ncount7  & count8  & count9  -> (c10'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & count1  & ncount2  & count3  & count4  & ncount5  & count6  & ncount7  & count8  & count9  -> (c10'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & count2  & count3  & count4  & ncount5  & count6  & ncount7  & count8  & count9  -> (c10'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & count1  & count2  & count3  & count4  & ncount5  & count6  & ncount7  & count8  & count9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & count6  & ncount7  & count8  & count9  -> (c10'=0) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & count1  & ncount2  & ncount3  & ncount4  & count5  & count6  & ncount7  & count8  & count9  -> (c10'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & count2  & ncount3  & ncount4  & count5  & count6  & ncount7  & count8  & count9  -> (c10'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & count1  & count2  & ncount3  & ncount4  & count5  & count6  & ncount7  & count8  & count9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & ncount2  & count3  & ncount4  & count5  & count6  & ncount7  & count8  & count9  -> (c10'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & count1  & ncount2  & count3  & ncount4  & count5  & count6  & ncount7  & count8  & count9  -> (c10'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & count2  & count3  & ncount4  & count5  & count6  & ncount7  & count8  & count9  -> (c10'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & count1  & count2  & count3  & ncount4  & count5  & count6  & ncount7  & count8  & count9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & ncount2  & ncount3  & count4  & count5  & count6  & ncount7  & count8  & count9  -> (c10'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & count1  & ncount2  & ncount3  & count4  & count5  & count6  & ncount7  & count8  & count9  -> (c10'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & count2  & ncount3  & count4  & count5  & count6  & ncount7  & count8  & count9  -> (c10'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & count1  & count2  & ncount3  & count4  & count5  & count6  & ncount7  & count8  & count9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & ncount2  & count3  & count4  & count5  & count6  & ncount7  & count8  & count9  -> (c10'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & count1  & ncount2  & count3  & count4  & count5  & count6  & ncount7  & count8  & count9  -> (c10'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & count2  & count3  & count4  & count5  & count6  & ncount7  & count8  & count9  -> (c10'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & count1  & count2  & count3  & count4  & count5  & count6  & ncount7  & count8  & count9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & count8  & count9  -> (c10'=0) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & count8  & count9  -> (c10'=0) & (c1'=c1+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & count8  & count9  -> (c10'=0) & (c2'=c2+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & count1  & count2  & ncount3  & ncount4  & ncount5  & ncount6  & count7  & count8  & count9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & count7  & count8  & count9  -> (c10'=0) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & count1  & ncount2  & count3  & ncount4  & ncount5  & ncount6  & count7  & count8  & count9  -> (c10'=0) & (c1'=c1+1) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & count2  & count3  & ncount4  & ncount5  & ncount6  & count7  & count8  & count9  -> (c10'=0) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & count1  & count2  & count3  & ncount4  & ncount5  & ncount6  & count7  & count8  & count9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & count7  & count8  & count9  -> (c10'=0) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & count1  & ncount2  & ncount3  & count4  & ncount5  & ncount6  & count7  & count8  & count9  -> (c10'=0) & (c1'=c1+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & count2  & ncount3  & count4  & ncount5  & ncount6  & count7  & count8  & count9  -> (c10'=0) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & count1  & count2  & ncount3  & count4  & ncount5  & ncount6  & count7  & count8  & count9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & ncount2  & count3  & count4  & ncount5  & ncount6  & count7  & count8  & count9  -> (c10'=0) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & count1  & ncount2  & count3  & count4  & ncount5  & ncount6  & count7  & count8  & count9  -> (c10'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & count2  & count3  & count4  & ncount5  & ncount6  & count7  & count8  & count9  -> (c10'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & count1  & count2  & count3  & count4  & ncount5  & ncount6  & count7  & count8  & count9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & count7  & count8  & count9  -> (c10'=0) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & count1  & ncount2  & ncount3  & ncount4  & count5  & ncount6  & count7  & count8  & count9  -> (c10'=0) & (c1'=c1+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & count2  & ncount3  & ncount4  & count5  & ncount6  & count7  & count8  & count9  -> (c10'=0) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & count1  & count2  & ncount3  & ncount4  & count5  & ncount6  & count7  & count8  & count9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & ncount2  & count3  & ncount4  & count5  & ncount6  & count7  & count8  & count9  -> (c10'=0) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & count1  & ncount2  & count3  & ncount4  & count5  & ncount6  & count7  & count8  & count9  -> (c10'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & count2  & count3  & ncount4  & count5  & ncount6  & count7  & count8  & count9  -> (c10'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & count1  & count2  & count3  & ncount4  & count5  & ncount6  & count7  & count8  & count9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & ncount2  & ncount3  & count4  & count5  & ncount6  & count7  & count8  & count9  -> (c10'=0) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & count1  & ncount2  & ncount3  & count4  & count5  & ncount6  & count7  & count8  & count9  -> (c10'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & count2  & ncount3  & count4  & count5  & ncount6  & count7  & count8  & count9  -> (c10'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & count1  & count2  & ncount3  & count4  & count5  & ncount6  & count7  & count8  & count9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & ncount2  & count3  & count4  & count5  & ncount6  & count7  & count8  & count9  -> (c10'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & count1  & ncount2  & count3  & count4  & count5  & ncount6  & count7  & count8  & count9  -> (c10'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & count2  & count3  & count4  & count5  & ncount6  & count7  & count8  & count9  -> (c10'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & count1  & count2  & count3  & count4  & count5  & ncount6  & count7  & count8  & count9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & count7  & count8  & count9  -> (c10'=0) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & count1  & ncount2  & ncount3  & ncount4  & ncount5  & count6  & count7  & count8  & count9  -> (c10'=0) & (c1'=c1+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & count2  & ncount3  & ncount4  & ncount5  & count6  & count7  & count8  & count9  -> (c10'=0) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & count1  & count2  & ncount3  & ncount4  & ncount5  & count6  & count7  & count8  & count9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & ncount2  & count3  & ncount4  & ncount5  & count6  & count7  & count8  & count9  -> (c10'=0) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & count1  & ncount2  & count3  & ncount4  & ncount5  & count6  & count7  & count8  & count9  -> (c10'=0) & (c1'=c1+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & count2  & count3  & ncount4  & ncount5  & count6  & count7  & count8  & count9  -> (c10'=0) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & count1  & count2  & count3  & ncount4  & ncount5  & count6  & count7  & count8  & count9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & ncount2  & ncount3  & count4  & ncount5  & count6  & count7  & count8  & count9  -> (c10'=0) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & count1  & ncount2  & ncount3  & count4  & ncount5  & count6  & count7  & count8  & count9  -> (c10'=0) & (c1'=c1+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & count2  & ncount3  & count4  & ncount5  & count6  & count7  & count8  & count9  -> (c10'=0) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & count1  & count2  & ncount3  & count4  & ncount5  & count6  & count7  & count8  & count9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & ncount2  & count3  & count4  & ncount5  & count6  & count7  & count8  & count9  -> (c10'=0) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & count1  & ncount2  & count3  & count4  & ncount5  & count6  & count7  & count8  & count9  -> (c10'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & count2  & count3  & count4  & ncount5  & count6  & count7  & count8  & count9  -> (c10'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & count1  & count2  & count3  & count4  & ncount5  & count6  & count7  & count8  & count9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & ncount2  & ncount3  & ncount4  & count5  & count6  & count7  & count8  & count9  -> (c10'=0) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & count1  & ncount2  & ncount3  & ncount4  & count5  & count6  & count7  & count8  & count9  -> (c10'=0) & (c1'=c1+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & count2  & ncount3  & ncount4  & count5  & count6  & count7  & count8  & count9  -> (c10'=0) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & count1  & count2  & ncount3  & ncount4  & count5  & count6  & count7  & count8  & count9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & ncount2  & count3  & ncount4  & count5  & count6  & count7  & count8  & count9  -> (c10'=0) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & count1  & ncount2  & count3  & ncount4  & count5  & count6  & count7  & count8  & count9  -> (c10'=0) & (c1'=c1+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & count2  & count3  & ncount4  & count5  & count6  & count7  & count8  & count9  -> (c10'=0) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & count1  & count2  & count3  & ncount4  & count5  & count6  & count7  & count8  & count9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & ncount2  & ncount3  & count4  & count5  & count6  & count7  & count8  & count9  -> (c10'=0) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & count1  & ncount2  & ncount3  & count4  & count5  & count6  & count7  & count8  & count9  -> (c10'=0) & (c1'=c1+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & count2  & ncount3  & count4  & count5  & count6  & count7  & count8  & count9  -> (c10'=0) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & count1  & count2  & ncount3  & count4  & count5  & count6  & count7  & count8  & count9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & ncount2  & count3  & count4  & count5  & count6  & count7  & count8  & count9  -> (c10'=0) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & count1  & ncount2  & count3  & count4  & count5  & count6  & count7  & count8  & count9  -> (c10'=0) & (c1'=c1+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & ncount1  & count2  & count3  & count4  & count5  & count6  & count7  & count8  & count9  -> (c10'=0) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);
	[s10] can10  & count1  & count2  & count3  & count4  & count5  & count6  & count7  & count8  & count9  -> (c10'=0) & (c1'=c1+1) & (c2'=c2+1) & (c3'=c3+1) & (c4'=c4+1) & (c5'=c5+1) & (c6'=c6+1) & (c7'=c7+1) & (c8'=c8+1) & (c9'=c9+1);

endmodule

formula lfree = (p2=0..4,6,11,13);
formula rfree = (p10=0..3,5,7,12,13);


module phil1

p1 : [0..13];
[s1] (p1=0) -> 0.2 : (p1'=0) + 0.8 : (p1'=1);
[s1] (p1=1) -> 0.5 : (p1'=2) + 0.5 : (p1'=3);
[s1] (p1=2) &  lfree -> (p1'=4);
[s1] (p1=2) & !lfree -> (p1'=2);
[s1] (p1=3) &  rfree -> (p1'=5);
[s1] (p1=3) & !rfree -> (p1'=3);
[s1] (p1=4) &  rfree -> (p1'=8);
[s1] (p1=4) & !rfree -> (p1'=6);
[s1] (p1=5) &  lfree -> (p1'=8);
[s1] (p1=5) & !lfree -> (p1'=7);
[s1] (p1=6)  -> (p1'=1);
[s1] (p1=7)  -> (p1'=1);
[s1] (p1=8)  -> (p1'=9);
[s1] (p1=9)  -> (p1'=10);
[s1] (p1=10) ->  0.5 : (p1'=11) + 0.5: (p1'=12);
[s1] (p1=11) -> (p1'=13);
[s1] (p1=12) -> (p1'=13);
[s1] (p1=13) ->  0.5 : (p1'=0) + 0.5 : (p1'=13);

endmodule

module phil2=phil1 [p1=p2, p2=p3, p3=p4, p4=p5, s1=s2] endmodule
module phil3=phil1 [p1=p3, p2=p4, p3=p5, p4=p6, s1=s3] endmodule
module phil4=phil1 [p1=p4, p2=p5, p3=p6, p4=p7, s1=s4] endmodule
module phil5=phil1 [p1=p5, p2=p6, p3=p7, p4=p8, s1=s5] endmodule
module phil6=phil1 [p1=p6, p2=p7, p3=p8, p4=p9, s1=s6] endmodule
module phil7=phil1 [p1=p7, p2=p8, p3=p9, p4=p10, s1=s7] endmodule
module phil8=phil1 [p1=p8, p2=p9, p3=p10, p4=p1, s1=s8] endmodule
module phil9=phil1 [p1=p9, p2=p10, p3=p1, p4=p2, s1=s9] endmodule
module phil10=phil1 [p1=p10, p2=p1, p3=p2, p4=p3, s1=s10] endmodule
